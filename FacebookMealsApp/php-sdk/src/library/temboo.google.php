<?php

/**
 * Temboo PHP SDK Google classes
 *
 * Execute Choreographies from the Temboo Google bundle.
 *
 * PHP version 5
 *
 * LICENSE: Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @category   Services
 * @package    Temboo
 * @subpackage Google
 * @author     Temboo, Inc.
 * @copyright  2013 Temboo, Inc.
 * @license    http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0
 * @link       http://www.temboo.com
 */
/**
 *  Generate biking directions between two locations, denoted by address or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections extends Temboo_Choreography
{
    /**
     *  Generate biking directions between two locations, denoted by address or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetBicyclingDirections Choreo.
     * @return Google_Directions_GetBicyclingDirections New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Directions/GetBicyclingDirections/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBicyclingDirections Choreo.
     *
     * @param Google_Directions_GetBicyclingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetBicyclingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetBicyclingDirections_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Directions_GetBicyclingDirections_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBicyclingDirections Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetBicyclingDirections_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Directions_GetBicyclingDirections_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBicyclingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBicyclingDirections Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetBicyclingDirections_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBicyclingDirections input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this GetBicyclingDirections Choreo.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destination input for this GetBicyclingDirections Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be generated (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setDestination($value)
    {
        return $this->set('Destination', $value);
    }

    /**
     * Set the value for the Origin input for this GetBicyclingDirections Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be computed (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setOrigin($value)
    {
        return $this->set('Origin', $value);
    }

    /**
     * Set the value for the Region input for this GetBicyclingDirections Choreo.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GetBicyclingDirections Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this GetBicyclingDirections Choreo.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }

    /**
     * Set the value for the Waypoints input for this GetBicyclingDirections Choreo.
     *
     * @param string $value (optional, string) Specify route waypoints, either by address, or latitude/longitude coordinates.
     * @return Google_Directions_GetBicyclingDirections_Inputs For method chaining.
     */
    public function setWaypoints($value)
    {
        return $this->set('Waypoints', $value);
    }
}


/**
 * Execution object for the GetBicyclingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBicyclingDirections Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBicyclingDirections execution.
     * @param Google_Directions_GetBicyclingDirections $choreo The choreography object for this execution.
     * @param Google_Directions_GetBicyclingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetBicyclingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetBicyclingDirections_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Directions_GetBicyclingDirections $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBicyclingDirections execution.
     *
     * @return Google_Directions_GetBicyclingDirections_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBicyclingDirections execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Directions_GetBicyclingDirections_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Directions_GetBicyclingDirections_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBicyclingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetBicyclingDirections_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBicyclingDirections Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Directions_GetBicyclingDirections_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBicyclingDirections execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain bicycling distances and times for a matrix of addresses and/or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix extends Temboo_Choreography
{
    /**
     * Obtain bicycling distances and times for a matrix of addresses and/or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this BicyclingDistanceMatrix Choreo.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/DistanceMatrix/BicyclingDistanceMatrix/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this BicyclingDistanceMatrix Choreo.
     *
     * @param Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_DistanceMatrix_BicyclingDistanceMatrix_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this BicyclingDistanceMatrix Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the BicyclingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the BicyclingDistanceMatrix Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this BicyclingDistanceMatrix input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this BicyclingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destinations input for this BicyclingDistanceMatrix Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates to which directions will be generated. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setDestinations($value)
    {
        return $this->set('Destinations', $value);
    }

    /**
     * Set the value for the Language input for this BicyclingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Origins input for this BicyclingDistanceMatrix Choreo.
     *
     * @param string $value (required, string) Enter the address(es) or geo-coordinates from which distance and time will be computed. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setOrigins($value)
    {
        return $this->set('Origins', $value);
    }

    /**
     * Set the value for the Region input for this BicyclingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this BicyclingDistanceMatrix Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this BicyclingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }
}


/**
 * Execution object for the BicyclingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the BicyclingDistanceMatrix Choreo.
     *
     * @param Temboo_Session $session The session that owns this BicyclingDistanceMatrix execution.
     * @param Google_DistanceMatrix_BicyclingDistanceMatrix $choreo The choreography object for this execution.
     * @param Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_BicyclingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_DistanceMatrix_BicyclingDistanceMatrix $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this BicyclingDistanceMatrix execution.
     *
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this BicyclingDistanceMatrix execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_DistanceMatrix_BicyclingDistanceMatrix_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the BicyclingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_BicyclingDistanceMatrix_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the BicyclingDistanceMatrix Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_DistanceMatrix_BicyclingDistanceMatrix_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this BicyclingDistanceMatrix execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds a parent folder for a file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Insert extends Temboo_Choreography
{
    /**
     * Adds a parent folder for a file.
     *
     * @param Temboo_Session $session The session that owns this Insert Choreo.
     * @return Google_Drive_Parents_Insert New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Parents/Insert/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Insert Choreo.
     *
     * @param Google_Drive_Parents_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_Insert_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Parents_Insert_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_Insert_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Parents_Insert_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Insert_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_Insert_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Insert input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Insert Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Insert Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the ParentID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the parent.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setParentID($value)
    {
        return $this->set('ParentID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Insert Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Insert_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Insert_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Insert Choreo.
     *
     * @param Temboo_Session $session The session that owns this Insert execution.
     * @param Google_Drive_Parents_Insert $choreo The choreography object for this execution.
     * @param Google_Drive_Parents_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_Insert_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Parents_Insert $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Insert execution.
     *
     * @return Google_Drive_Parents_Insert_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Insert execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Parents_Insert_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Parents_Insert_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Insert_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Insert Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Parents_Insert_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Insert execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Insert execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive parent resource
	*/

	public function getParent() {
		return new Google_Drive_Parent_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves a list of spreadsheets that exist in your Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets extends Temboo_Choreography
{
    /**
     * Retrieves a list of spreadsheets that exist in your Google account.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheets Choreo.
     * @return Google_Spreadsheets_RetrieveSpreadsheets New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveSpreadsheets/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveSpreadsheets Choreo.
     *
     * @param Google_Spreadsheets_RetrieveSpreadsheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheets_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveSpreadsheets Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveSpreadsheets_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveSpreadsheets Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveSpreadsheets Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveSpreadsheets input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveSpreadsheets Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveSpreadsheets Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RetrieveSpreadsheets Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveSpreadsheets Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheets execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheets $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveSpreadsheets $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveSpreadsheets execution.
     *
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveSpreadsheets execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheets_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveSpreadsheets Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheets_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveSpreadsheets Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheets_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveSpreadsheets execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists all of the replies to a comment.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_List extends Temboo_Choreography
{
    /**
     * Lists all of the replies to a comment.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Replies_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Replies/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Replies_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Replies_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Replies_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the IncludeDeleted input for this List Choreo.
     *
     * @param bool $value (optional, boolean) If set, this will succeed when retrieving a deleted reply. (Default: false)
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setIncludeDeleted($value)
    {
        return $this->set('IncludeDeleted', $value);
    }

    /**
     * Set the value for the MaxResults input for this List Choreo.
     *
     * @param int $value (optional, integer) The maximum number of replies to include in the response, used for paging. Acceptable values are 0 to 100, inclusive. (Default: 20).
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List Choreo.
     *
     * @param string $value (optional, string) The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Replies_List $choreo The choreography object for this execution.
     * @param Google_Drive_Replies_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Replies_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Replies_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Replies_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Replies_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Replies_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get a list of replies
	*/

	public function getReplyList() {
		return new Google_Drive_ReplyList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Removes a tag from a specified photo in Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag extends Temboo_Choreography
{
    /**
     * Removes a tag from a specified photo in Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this DeleteTag Choreo.
     * @return Google_Picasa_DeleteTag New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/DeleteTag/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteTag Choreo.
     *
     * @param Google_Picasa_DeleteTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteTag_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_DeleteTag_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteTag Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteTag_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_DeleteTag_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteTag Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteTag Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteTag_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteTag input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteTag Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumId input for this DeleteTag Choreo.
     *
     * @param int $value (required, integer) The id for the album which has the tagged photo. Note that this can be retrieved by running the ListAlbums Choreo.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setAlbumId($value)
    {
        return $this->set('AlbumId', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteTag Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteTag Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the PhotoID input for this DeleteTag Choreo.
     *
     * @param int $value (required, integer) The id for the photo that has a tag to delete.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setPhotoID($value)
    {
        return $this->set('PhotoID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteTag Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the TagID input for this DeleteTag Choreo.
     *
     * @param string $value (required, string) The Id (or tag name) for the tag that you want to delete.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setTagID($value)
    {
        return $this->set('TagID', $value);
    }

    /**
     * Set the value for the UserID input for this DeleteTag Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_DeleteTag_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the DeleteTag Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteTag Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteTag execution.
     * @param Google_Picasa_DeleteTag $choreo The choreography object for this execution.
     * @param Google_Picasa_DeleteTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteTag_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_DeleteTag $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteTag execution.
     *
     * @return Google_Picasa_DeleteTag_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteTag execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_DeleteTag_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_DeleteTag_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteTag Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteTag_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteTag Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_DeleteTag_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this DeleteTag execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteTag execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Generates an authorization URL that an application can use to complete the first step in the OAuth process.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_InitializeOAuth extends Temboo_Choreography
{
    /**
     * Generates an authorization URL that an application can use to complete the first step in the OAuth process.
     *
     * @param Temboo_Session $session The session that owns this InitializeOAuth Choreo.
     * @return Google_OAuth_InitializeOAuth New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/OAuth/InitializeOAuth/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this InitializeOAuth Choreo.
     *
     * @param Google_OAuth_InitializeOAuth_Inputs|array $inputs (optional) Inputs as Google_OAuth_InitializeOAuth_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_OAuth_InitializeOAuth_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_OAuth_InitializeOAuth_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this InitializeOAuth Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_OAuth_InitializeOAuth_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_OAuth_InitializeOAuth_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the InitializeOAuth Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_InitializeOAuth_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the InitializeOAuth Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_OAuth_InitializeOAuth_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this InitializeOAuth input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccountName input for this InitializeOAuth Choreo.
     *
     * @param string $value (optional, string) Deprecated (retained for backward compatibility only).
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setAccountName($value)
    {
        return $this->set('AccountName', $value);
    }

    /**
     * Set the value for the AppKeyName input for this InitializeOAuth Choreo.
     *
     * @param string $value (optional, string) Deprecated (retained for backward compatibility only).
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setAppKeyName($value)
    {
        return $this->set('AppKeyName', $value);
    }

    /**
     * Set the value for the AppKeyValue input for this InitializeOAuth Choreo.
     *
     * @param string $value (optional, string) Deprecated (retained for backward compatibility only).
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setAppKeyValue($value)
    {
        return $this->set('AppKeyValue', $value);
    }

    /**
     * Set the value for the ClientID input for this InitializeOAuth Choreo.
     *
     * @param string $value (required, string) The Client ID provided by Google after registering your application.
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the CustomCallbackID input for this InitializeOAuth Choreo.
     *
     * @param string $value (optional, string) A unique identifier that you can pass to eliminate the need to wait for a Temboo generated CallbackID. Callback identifiers may only contain numbers, letters, periods, and hyphens.
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setCustomCallbackID($value)
    {
        return $this->set('CustomCallbackID', $value);
    }

    /**
     * Set the value for the ForwardingURL input for this InitializeOAuth Choreo.
     *
     * @param string $value (optional, string) The URL that Temboo will redirect your users to after they grant your application access.
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setForwardingURL($value)
    {
        return $this->set('ForwardingURL', $value);
    }

    /**
     * Set the value for the Scope input for this InitializeOAuth Choreo.
     *
     * @param string $value (required, string) The OAuth scope that should be associated with the access token being requested. For example, to access Google Drive, you would specify the following scope: https://www.googleapis.com/auth/drive
     * @return Google_OAuth_InitializeOAuth_Inputs For method chaining.
     */
    public function setScope($value)
    {
        return $this->set('Scope', $value);
    }
}


/**
 * Execution object for the InitializeOAuth Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_InitializeOAuth_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the InitializeOAuth Choreo.
     *
     * @param Temboo_Session $session The session that owns this InitializeOAuth execution.
     * @param Google_OAuth_InitializeOAuth $choreo The choreography object for this execution.
     * @param Google_OAuth_InitializeOAuth_Inputs|array $inputs (optional) Inputs as Google_OAuth_InitializeOAuth_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_OAuth_InitializeOAuth_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_OAuth_InitializeOAuth $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this InitializeOAuth execution.
     *
     * @return Google_OAuth_InitializeOAuth_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this InitializeOAuth execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_OAuth_InitializeOAuth_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_OAuth_InitializeOAuth_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the InitializeOAuth Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_InitializeOAuth_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the InitializeOAuth Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_OAuth_InitializeOAuth_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AuthorizationURL" output from this InitializeOAuth execution.
     *
     * @return string (string) The authorization URL that the application's user needs to go to in order to grant access to your application.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAuthorizationURL()
    {
        return $this->get('AuthorizationURL');
    }
    /**
     * Retrieve the value for the "CallbackID" output from this InitializeOAuth execution.
     *
     * @return string (string) An ID used to retrieve the callback data that Temboo stores once your application's user authorizes.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCallbackID()
    {
        return $this->get('CallbackID');
    }
}

/**
 * Adds a comment to a specified photo in Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto extends Temboo_Choreography
{
    /**
     * Adds a comment to a specified photo in Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this AddCommentToPhoto Choreo.
     * @return Google_Picasa_AddCommentToPhoto New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/AddCommentToPhoto/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddCommentToPhoto Choreo.
     *
     * @param Google_Picasa_AddCommentToPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_AddCommentToPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_AddCommentToPhoto_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_AddCommentToPhoto_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddCommentToPhoto Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_AddCommentToPhoto_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_AddCommentToPhoto_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddCommentToPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddCommentToPhoto Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_AddCommentToPhoto_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddCommentToPhoto input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this AddCommentToPhoto Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this AddCommentToPhoto Choreo.
     *
     * @param int $value (required, integer) The id of the album which contains the photo you want to add a comment to.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this AddCommentToPhoto Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this AddCommentToPhoto Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Comment input for this AddCommentToPhoto Choreo.
     *
     * @param string $value (required, string) The comment that you want to add to a photo.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setComment($value)
    {
        return $this->set('Comment', $value);
    }

    /**
     * Set the value for the PhotoID input for this AddCommentToPhoto Choreo.
     *
     * @param int $value (required, integer) The id of the photo you want to add a comment to.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setPhotoID($value)
    {
        return $this->set('PhotoID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this AddCommentToPhoto Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this AddCommentToPhoto Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_AddCommentToPhoto_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the AddCommentToPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddCommentToPhoto Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddCommentToPhoto execution.
     * @param Google_Picasa_AddCommentToPhoto $choreo The choreography object for this execution.
     * @param Google_Picasa_AddCommentToPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_AddCommentToPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_AddCommentToPhoto_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_AddCommentToPhoto $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddCommentToPhoto execution.
     *
     * @return Google_Picasa_AddCommentToPhoto_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddCommentToPhoto execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_AddCommentToPhoto_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_AddCommentToPhoto_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddCommentToPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_AddCommentToPhoto_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddCommentToPhoto Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_AddCommentToPhoto_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this AddCommentToPhoto execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this AddCommentToPhoto execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of all documents, files, and collections in a Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments extends Temboo_Choreography
{
    /**
     * Retrieves a list of all documents, files, and collections in a Google account.
     *
     * @param Temboo_Session $session The session that owns this GetAllDocuments Choreo.
     * @return Google_Documents_GetAllDocuments New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/GetAllDocuments/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAllDocuments Choreo.
     *
     * @param Google_Documents_GetAllDocuments_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAllDocuments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAllDocuments_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_GetAllDocuments_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllDocuments Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAllDocuments_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_GetAllDocuments_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllDocuments Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAllDocuments Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAllDocuments_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllDocuments input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Deleted input for this GetAllDocuments Choreo.
     *
     * @param bool $value (optional, boolean) Returns deleted documents when set to "true" (the default). Skips deleted documents when set to "false".
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setDeleted($value)
    {
        return $this->set('Deleted', $value);
    }

    /**
     * Set the value for the Password input for this GetAllDocuments Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this GetAllDocuments Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_GetAllDocuments_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetAllDocuments Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllDocuments Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAllDocuments execution.
     * @param Google_Documents_GetAllDocuments $choreo The choreography object for this execution.
     * @param Google_Documents_GetAllDocuments_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAllDocuments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAllDocuments_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_GetAllDocuments $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllDocuments execution.
     *
     * @return Google_Documents_GetAllDocuments_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAllDocuments execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_GetAllDocuments_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_GetAllDocuments_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAllDocuments Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAllDocuments_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAllDocuments Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_GetAllDocuments_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetAllDocuments execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the contact or contacts in that account that match a specified query term.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery extends Temboo_Choreography
{
    /**
     * Retrieves the contact or contacts in that account that match a specified query term.
     *
     * @param Temboo_Session $session The session that owns this GetContactsWithQuery Choreo.
     * @return Google_Contacts_GetContactsWithQuery New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetContactsWithQuery/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetContactsWithQuery Choreo.
     *
     * @param Google_Contacts_GetContactsWithQuery_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactsWithQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactsWithQuery_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetContactsWithQuery_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetContactsWithQuery Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactsWithQuery_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetContactsWithQuery_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetContactsWithQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetContactsWithQuery Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactsWithQuery_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetContactsWithQuery input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetContactsWithQuery Choreo.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetContactsWithQuery Choreo.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetContactsWithQuery Choreo.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Query input for this GetContactsWithQuery Choreo.
     *
     * @param string $value (required, string) The contact criteria to search for, such as name or email address.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetContactsWithQuery Choreo.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetContactsWithQuery_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the GetContactsWithQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetContactsWithQuery Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetContactsWithQuery execution.
     * @param Google_Contacts_GetContactsWithQuery $choreo The choreography object for this execution.
     * @param Google_Contacts_GetContactsWithQuery_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactsWithQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactsWithQuery_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetContactsWithQuery $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetContactsWithQuery execution.
     *
     * @return Google_Contacts_GetContactsWithQuery_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetContactsWithQuery execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetContactsWithQuery_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetContactsWithQuery_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetContactsWithQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactsWithQuery_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetContactsWithQuery Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetContactsWithQuery_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this GetContactsWithQuery execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "ContactID" output from this GetContactsWithQuery execution.
     *
     * @return string (string) The unique ID string for the retrieved contact. If more than one contact is retrieved by the request, only the first contact's ID is output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContactID()
    {
        return $this->get('ContactID');
    }
    /**
     * Retrieve the value for the "Link" output from this GetContactsWithQuery execution.
     *
     * @return string (string) The unique edit link for the retrieved contact. If more than one contact is retrieved by the request, only the first contact's edit link is output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getLink()
    {
        return $this->get('Link');
    }
    /**
     * Retrieve the value for the "Response" output from this GetContactsWithQuery execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Delete a specific event from a specified calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent extends Temboo_Choreography
{
    /**
     * Delete a specific event from a specified calendar.
     *
     * @param Temboo_Session $session The session that owns this DeleteEvent Choreo.
     * @return Google_Calendar_DeleteEvent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/DeleteEvent/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteEvent Choreo.
     *
     * @param Google_Calendar_DeleteEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteEvent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_DeleteEvent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteEvent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteEvent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_DeleteEvent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteEvent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteEvent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteEvent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteEvent Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this DeleteEvent Choreo.
     *
     * @param string $value (required, string) The ID for the calendar to delete.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteEvent Choreo.
     *
     * @param string $value (conditional, string) The name of the calendar that you want to retrieve information for. Note that if there are multiple calendars with the same name, only the first one will be returned.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteEvent Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the EventID input for this DeleteEvent Choreo.
     *
     * @param string $value (required, string) The unique ID for the event to delete.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setEventID($value)
    {
        return $this->set('EventID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteEvent Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteEvent_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteEvent Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteEvent execution.
     * @param Google_Calendar_DeleteEvent $choreo The choreography object for this execution.
     * @param Google_Calendar_DeleteEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteEvent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_DeleteEvent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteEvent execution.
     *
     * @return Google_Calendar_DeleteEvent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteEvent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_DeleteEvent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_DeleteEvent_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteEvent_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteEvent Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_DeleteEvent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this DeleteEvent execution.
     *
     * @return string (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this DeleteEvent execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteEvent execution.
     *
     * @return string No content is returned for delete calendar operations.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Completes the OAuth process by retrieving a Google access token for a user, after they have visited the authorization URL returned by the InitializeOAuth Choreo and clicked "allow."
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_FinalizeOAuth extends Temboo_Choreography
{
    /**
     * Completes the OAuth process by retrieving a Google access token for a user, after they have visited the authorization URL returned by the InitializeOAuth Choreo and clicked "allow."
     *
     * @param Temboo_Session $session The session that owns this FinalizeOAuth Choreo.
     * @return Google_OAuth_FinalizeOAuth New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/OAuth/FinalizeOAuth/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this FinalizeOAuth Choreo.
     *
     * @param Google_OAuth_FinalizeOAuth_Inputs|array $inputs (optional) Inputs as Google_OAuth_FinalizeOAuth_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_OAuth_FinalizeOAuth_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_OAuth_FinalizeOAuth_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this FinalizeOAuth Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_OAuth_FinalizeOAuth_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_OAuth_FinalizeOAuth_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the FinalizeOAuth Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_FinalizeOAuth_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the FinalizeOAuth Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_OAuth_FinalizeOAuth_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this FinalizeOAuth input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccountName input for this FinalizeOAuth Choreo.
     *
     * @param string $value (optional, string) Deprecated (retained for backward compatibility only).
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setAccountName($value)
    {
        return $this->set('AccountName', $value);
    }

    /**
     * Set the value for the AppKeyName input for this FinalizeOAuth Choreo.
     *
     * @param string $value (optional, string) Deprecated (retained for backward compatibility only).
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setAppKeyName($value)
    {
        return $this->set('AppKeyName', $value);
    }

    /**
     * Set the value for the AppKeyValue input for this FinalizeOAuth Choreo.
     *
     * @param string $value (optional, string) Deprecated (retained for backward compatibility only).
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setAppKeyValue($value)
    {
        return $this->set('AppKeyValue', $value);
    }

    /**
     * Set the value for the CallbackID input for this FinalizeOAuth Choreo.
     *
     * @param string $value (required, string) The callback token returned by the InitializeOAuth Choreo. Used to retrieve the authorization code after the user authorizes.
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setCallbackID($value)
    {
        return $this->set('CallbackID', $value);
    }

    /**
     * Set the value for the ClientID input for this FinalizeOAuth Choreo.
     *
     * @param string $value (required, string) The Client ID provided by Google after registering your application.
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this FinalizeOAuth Choreo.
     *
     * @param string $value (required, string) The Client Secret provided by Google after registering your application.
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Timeout input for this FinalizeOAuth Choreo.
     *
     * @param int $value (optional, integer) The amount of time (in seconds) to poll your Temboo callback URL to see if your app's user has allowed or denied the request for access. Defaults to 20. Max is 60.
     * @return Google_OAuth_FinalizeOAuth_Inputs For method chaining.
     */
    public function setTimeout($value)
    {
        return $this->set('Timeout', $value);
    }
}


/**
 * Execution object for the FinalizeOAuth Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_FinalizeOAuth_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the FinalizeOAuth Choreo.
     *
     * @param Temboo_Session $session The session that owns this FinalizeOAuth execution.
     * @param Google_OAuth_FinalizeOAuth $choreo The choreography object for this execution.
     * @param Google_OAuth_FinalizeOAuth_Inputs|array $inputs (optional) Inputs as Google_OAuth_FinalizeOAuth_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_OAuth_FinalizeOAuth_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_OAuth_FinalizeOAuth $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this FinalizeOAuth execution.
     *
     * @return Google_OAuth_FinalizeOAuth_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this FinalizeOAuth execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_OAuth_FinalizeOAuth_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_OAuth_FinalizeOAuth_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the FinalizeOAuth Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_OAuth_FinalizeOAuth_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the FinalizeOAuth Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_OAuth_FinalizeOAuth_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this FinalizeOAuth execution.
     *
     * @return string (string) The access token for the user that has granted access to your application.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "Expires" output from this FinalizeOAuth execution.
     *
     * @return int (integer) The remaining lifetime of the short-lived access token.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getExpires()
    {
        return $this->get('Expires');
    }
    /**
     * Retrieve the value for the "RefreshToken" output from this FinalizeOAuth execution.
     *
     * @return string (string) A token that may be used to obtain a new access token when the short-lived access token expires.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getRefreshToken()
    {
        return $this->get('RefreshToken');
    }
}

/**
 * Retrieves a specified worksheet from a Google spreadsheet in CSV, XML, or JSON format.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheet extends Temboo_Choreography
{
    /**
     * Retrieves a specified worksheet from a Google spreadsheet in CSV, XML, or JSON format.
     *
     * @param Temboo_Session $session The session that owns this RetrieveWorksheet Choreo.
     * @return Google_Spreadsheets_RetrieveWorksheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveWorksheet/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveWorksheet Choreo.
     *
     * @param Google_Spreadsheets_RetrieveWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveWorksheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveWorksheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveWorksheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveWorksheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveWorksheet Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RetrieveWorksheet Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are: csv (the default), xml, and json.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveWorksheet Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the worksheet you want to retrieve. Required unless SpreadsheetName and WorksheetName are supplied.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the SpreadsheetName input for this RetrieveWorksheet Choreo.
     *
     * @param string $value (optional, string) The name of the spreadsheet to retrieve. This and WorksheetName can be used as an alternative to SpreadsheetKey and WorksheetId, but performing a lookup by name will slow down the request.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetName($value)
    {
        return $this->set('SpreadsheetName', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveWorksheet Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this RetrieveWorksheet Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet that you want to retrieve. Required unless SpreadsheetName and WorksheetName are supplied.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }

    /**
     * Set the value for the WorksheetName input for this RetrieveWorksheet Choreo.
     *
     * @param string $value (optional, string) The name of the worksheet to retrieve. This and SpreadsheetName can be used as an alternative to SpreadsheetKey and WorksheetId, but performing a lookup by name will slow down the request.
     * @return Google_Spreadsheets_RetrieveWorksheet_Inputs For method chaining.
     */
    public function setWorksheetName($value)
    {
        return $this->set('WorksheetName', $value);
    }
}


/**
 * Execution object for the RetrieveWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveWorksheet Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveWorksheet execution.
     * @param Google_Spreadsheets_RetrieveWorksheet $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_RetrieveWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveWorksheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveWorksheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveWorksheet execution.
     *
     * @return Google_Spreadsheets_RetrieveWorksheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveWorksheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveWorksheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveWorksheet_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheet_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveWorksheet Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveWorksheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveWorksheet execution.
     *
     * @return string (multiline) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a feed of the photo tags for a specified user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser extends Temboo_Choreography
{
    /**
     * Returns a feed of the photo tags for a specified user.
     *
     * @param Temboo_Session $session The session that owns this RetrieveTagsByUser Choreo.
     * @return Google_Picasa_RetrieveTagsByUser New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/RetrieveTagsByUser/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveTagsByUser Choreo.
     *
     * @param Google_Picasa_RetrieveTagsByUser_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveTagsByUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveTagsByUser_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_RetrieveTagsByUser_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveTagsByUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_RetrieveTagsByUser_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveTagsByUser Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveTagsByUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveTagsByUser input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this RetrieveTagsByUser Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this RetrieveTagsByUser Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this RetrieveTagsByUser Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this RetrieveTagsByUser Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this RetrieveTagsByUser Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_RetrieveTagsByUser_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the RetrieveTagsByUser Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveTagsByUser Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveTagsByUser execution.
     * @param Google_Picasa_RetrieveTagsByUser $choreo The choreography object for this execution.
     * @param Google_Picasa_RetrieveTagsByUser_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveTagsByUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveTagsByUser_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_RetrieveTagsByUser $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveTagsByUser execution.
     *
     * @return Google_Picasa_RetrieveTagsByUser_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveTagsByUser execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_RetrieveTagsByUser_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveTagsByUser Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveTagsByUser_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveTagsByUser Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_RetrieveTagsByUser_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this RetrieveTagsByUser execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveTagsByUser execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Request an authorization token for Google Documents.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication extends Temboo_Choreography
{
    /**
     * Request an authorization token for Google Documents.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication Choreo.
     * @return Google_Documents_ClientLoginAuthentication New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/ClientLoginAuthentication/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ClientLoginAuthentication Choreo.
     *
     * @param Google_Documents_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Documents_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ClientLoginAuthentication_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_ClientLoginAuthentication_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ClientLoginAuthentication Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ClientLoginAuthentication_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_ClientLoginAuthentication_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ClientLoginAuthentication Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ClientLoginAuthentication_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ClientLoginAuthentication input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ClientLoginAuthentication Choreo.
     *
     * @param string $value (required, password) Your Google password.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this ClientLoginAuthentication Choreo.
     *
     * @param string $value (required, string) Your Google email address.
     * @return Google_Documents_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ClientLoginAuthentication Choreo.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication execution.
     * @param Google_Documents_ClientLoginAuthentication $choreo The choreography object for this execution.
     * @param Google_Documents_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Documents_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ClientLoginAuthentication_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_ClientLoginAuthentication $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ClientLoginAuthentication execution.
     *
     * @return Google_Documents_ClientLoginAuthentication_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ClientLoginAuthentication execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_ClientLoginAuthentication_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_ClientLoginAuthentication_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ClientLoginAuthentication_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ClientLoginAuthentication Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_ClientLoginAuthentication_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AuthorizationKey" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) The authorization token parsed from the Google login response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAuthorizationKey()
    {
        return $this->get('AuthorizationKey');
    }
    /**
     * Retrieve the value for the "Response" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) Stores the response from Google login.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the metadata for a calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar extends Temboo_Choreography
{
    /**
     * Updates the metadata for a calendar.
     *
     * @param Temboo_Session $session The session that owns this UpdateCalendar Choreo.
     * @return Google_Calendar_UpdateCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/UpdateCalendar/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateCalendar Choreo.
     *
     * @param Google_Calendar_UpdateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_UpdateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_UpdateCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_UpdateCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_UpdateCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_UpdateCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_UpdateCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this UpdateCalendar Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this UpdateCalendar Choreo.
     *
     * @param string $value (required, string) The ID for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this UpdateCalendar Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this UpdateCalendar Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the NewDescription input for this UpdateCalendar Choreo.
     *
     * @param string $value (optional, string) The new description for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewDescription($value)
    {
        return $this->set('NewDescription', $value);
    }

    /**
     * Set the value for the NewLocation input for this UpdateCalendar Choreo.
     *
     * @param string $value (optional, string) The new location for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewLocation($value)
    {
        return $this->set('NewLocation', $value);
    }

    /**
     * Set the value for the NewSummary input for this UpdateCalendar Choreo.
     *
     * @param string $value (required, string) The new summary for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewSummary($value)
    {
        return $this->set('NewSummary', $value);
    }

    /**
     * Set the value for the NewTimezone input for this UpdateCalendar Choreo.
     *
     * @param string $value (optional, string) The new timezone for the calendar to update.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setNewTimezone($value)
    {
        return $this->set('NewTimezone', $value);
    }

    /**
     * Set the value for the RefreshToken input for this UpdateCalendar Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateCalendar Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_UpdateCalendar_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the UpdateCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateCalendar Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateCalendar execution.
     * @param Google_Calendar_UpdateCalendar $choreo The choreography object for this execution.
     * @param Google_Calendar_UpdateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_UpdateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_UpdateCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_UpdateCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateCalendar execution.
     *
     * @return Google_Calendar_UpdateCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_UpdateCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_UpdateCalendar_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_UpdateCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateCalendar Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_UpdateCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this UpdateCalendar execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateCalendar execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Represents a Google Calendar Resource.
	*/

	public function getCalendar() {
		return new Google_Calendar_Calendar_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Sends an email using a specified Gmail account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail extends Temboo_Choreography
{
    /**
     * Sends an email using a specified Gmail account.
     *
     * @param Temboo_Session $session The session that owns this SendEmail Choreo.
     * @return Google_Gmail_SendEmail New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Gmail/SendEmail/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SendEmail Choreo.
     *
     * @param Google_Gmail_SendEmail_Inputs|array $inputs (optional) Inputs as Google_Gmail_SendEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_SendEmail_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Gmail_SendEmail_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SendEmail Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_SendEmail_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Gmail_SendEmail_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SendEmail Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SendEmail Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Gmail_SendEmail_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SendEmail input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AttachmentName input for this SendEmail Choreo.
     *
     * @param string $value (optional, string) The name of the file to attach to the email.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setAttachmentName($value)
    {
        return $this->set('AttachmentName', $value);
    }

    /**
     * Set the value for the Attachment input for this SendEmail Choreo.
     *
     * @param string $value (optional, string) The Base64 encoded contents of the file to attach to the email.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setAttachment($value)
    {
        return $this->set('Attachment', $value);
    }

    /**
     * Set the value for the BCC input for this SendEmail Choreo.
     *
     * @param string $value (optional, string) An email address to BCC on the email you're sending. Can be a comma separated list of email addresses.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setBCC($value)
    {
        return $this->set('BCC', $value);
    }

    /**
     * Set the value for the CC input for this SendEmail Choreo.
     *
     * @param string $value (optional, string) An email address to CC on the email you're sending. Can be a comma separated list of email addresses.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setCC($value)
    {
        return $this->set('CC', $value);
    }

    /**
     * Set the value for the FromAddress input for this SendEmail Choreo.
     *
     * @param string $value (conditional, string) The name and email address that the message is being sent from.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setFromAddress($value)
    {
        return $this->set('FromAddress', $value);
    }

    /**
     * Set the value for the MessageBody input for this SendEmail Choreo.
     *
     * @param string $value (required, string) The message body for the email.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setMessageBody($value)
    {
        return $this->set('MessageBody', $value);
    }

    /**
     * Set the value for the Password input for this SendEmail Choreo.
     *
     * @param string $value (required, password) Your Gmail password.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Subject input for this SendEmail Choreo.
     *
     * @param string $value (required, string) The subject line of the email.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setSubject($value)
    {
        return $this->set('Subject', $value);
    }

    /**
     * Set the value for the ToAddress input for this SendEmail Choreo.
     *
     * @param string $value (required, string) The email address that you want to send an email to. Can be a comma separated list of email addresses.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setToAddress($value)
    {
        return $this->set('ToAddress', $value);
    }

    /**
     * Set the value for the Username input for this SendEmail Choreo.
     *
     * @param string $value (required, string) Your Gmail username used to authenticate your account.
     * @return Google_Gmail_SendEmail_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SendEmail Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SendEmail Choreo.
     *
     * @param Temboo_Session $session The session that owns this SendEmail execution.
     * @param Google_Gmail_SendEmail $choreo The choreography object for this execution.
     * @param Google_Gmail_SendEmail_Inputs|array $inputs (optional) Inputs as Google_Gmail_SendEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Gmail_SendEmail_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Gmail_SendEmail $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SendEmail execution.
     *
     * @return Google_Gmail_SendEmail_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SendEmail execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Gmail_SendEmail_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Gmail_SendEmail_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SendEmail Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Gmail_SendEmail_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SendEmail Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Gmail_SendEmail_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
}

/**
 * Allows you to search for events using a variety of search parameters.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents extends Temboo_Choreography
{
    /**
     * Allows you to search for events using a variety of search parameters.
     *
     * @param Temboo_Session $session The session that owns this SearchEvents Choreo.
     * @return Google_Calendar_SearchEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/SearchEvents/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SearchEvents Choreo.
     *
     * @param Google_Calendar_SearchEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_SearchEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_SearchEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SearchEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this SearchEvents Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this SearchEvents Choreo.
     *
     * @param string $value (required, string) The unique ID for the calendar with the events to retrieve.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this SearchEvents Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this SearchEvents Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the LastModified input for this SearchEvents Choreo.
     *
     * @param string $value (optional, date) An event's last modification time (as a RFC 3339 timestamp) to filter by.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setLastModified($value)
    {
        return $this->set('LastModified', $value);
    }

    /**
     * Set the value for the MaxAttendees input for this SearchEvents Choreo.
     *
     * @param int $value (optional, integer) The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMaxAttendees($value)
    {
        return $this->set('MaxAttendees', $value);
    }

    /**
     * Set the value for the MaxResults input for this SearchEvents Choreo.
     *
     * @param int $value (optional, integer) The maximum number of events to return on one result page.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the MaxTime input for this SearchEvents Choreo.
     *
     * @param string $value (optional, date) The max start time to filter by (formatted like 2012-05-22T00:47:43.000Z).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMaxTime($value)
    {
        return $this->set('MaxTime', $value);
    }

    /**
     * Set the value for the MinTime input for this SearchEvents Choreo.
     *
     * @param string $value (optional, date) The minimum start time to filter by (formatted like 2012-05-22T00:47:43.000Z).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setMinTime($value)
    {
        return $this->set('MinTime', $value);
    }

    /**
     * Set the value for the OrderBy input for this SearchEvents Choreo.
     *
     * @param string $value (optional, string) The order of the events returned in the result. Accepted values are: "startTime" (ordered by start date/time. Must set SingleEvents to 1 to use this) or "updated" (ordered by modification date/time).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setOrderBy($value)
    {
        return $this->set('OrderBy', $value);
    }

    /**
     * Set the value for the PageToken input for this SearchEvents Choreo.
     *
     * @param int $value (optional, integer) Indicates which result page to return. Used for paging through results.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the Query input for this SearchEvents Choreo.
     *
     * @param string $value (optional, string) A keyword search to find events.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this SearchEvents Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this SearchEvents Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ShowDeleted input for this SearchEvents Choreo.
     *
     * @param bool $value (optional, boolean) Whether to include deleted events. Set to 1 (true) to include deleted events. Defaults to 0 (false).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setShowDeleted($value)
    {
        return $this->set('ShowDeleted', $value);
    }

    /**
     * Set the value for the ShowHiddenInvitations input for this SearchEvents Choreo.
     *
     * @param bool $value (optional, boolean) Whether to include hidden invitations in the result. Set to 1 (true) to enable. The default is 0 (false).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setShowHiddenInvitations($value)
    {
        return $this->set('ShowHiddenInvitations', $value);
    }

    /**
     * Set the value for the SingleEvent input for this SearchEvents Choreo.
     *
     * @param bool $value (optional, boolean) Whether to expand recurring events into instances and only return single one-off events and instances of recurring events. Defaults to 0 (false).
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setSingleEvent($value)
    {
        return $this->set('SingleEvent', $value);
    }

    /**
     * Set the value for the Timezone input for this SearchEvents Choreo.
     *
     * @param string $value (optional, string) The time zone used in the response (i.e. America/Los_Angeles). The default is the time zone of the calendar.
     * @return Google_Calendar_SearchEvents_Inputs For method chaining.
     */
    public function setTimezone($value)
    {
        return $this->set('Timezone', $value);
    }
}


/**
 * Execution object for the SearchEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchEvents Choreo.
     *
     * @param Temboo_Session $session The session that owns this SearchEvents execution.
     * @param Google_Calendar_SearchEvents $choreo The choreography object for this execution.
     * @param Google_Calendar_SearchEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_SearchEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchEvents execution.
     *
     * @return Google_Calendar_SearchEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SearchEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_SearchEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_SearchEvents_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SearchEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchEvents_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SearchEvents Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_SearchEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this SearchEvents execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this SearchEvents execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get All Google Calendar Events
	*/

	public function getEventList() {
		return new Google_Calendar_EventList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Adds one or more rows to a worksheet in a Google spreadsheet using a simple XML file you provide.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows extends Temboo_Choreography
{
    /**
     * Adds one or more rows to a worksheet in a Google spreadsheet using a simple XML file you provide.
     *
     * @param Temboo_Session $session The session that owns this AddListRows Choreo.
     * @return Google_Spreadsheets_AddListRows New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/AddListRows/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddListRows Choreo.
     *
     * @param Google_Spreadsheets_AddListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddListRows_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_AddListRows_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddListRows Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddListRows_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_AddListRows_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddListRows Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddListRows Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddListRows_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddListRows input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RowsetXML input for this AddListRows Choreo.
     *
     * @param string $value (required, xml) The rows of data that you want to add to a worksheet in XML format. Your XML needs to be in the rowset/row schema described in the Choreo documentation.
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setRowsetXML($value)
    {
        return $this->set('RowsetXML', $value);
    }

    /**
     * Set the value for the Password input for this AddListRows Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this AddListRows Choreo.
     *
     * @param string $value (required, string) The unique key of the spreadsheet that contains the worksheet you want to add rows to
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this AddListRows Choreo.
     *
     * @param string $value (required, string) Your Google username
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this AddListRows Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet that you want to add rows to
     * @return Google_Spreadsheets_AddListRows_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the AddListRows Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddListRows Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddListRows execution.
     * @param Google_Spreadsheets_AddListRows $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_AddListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddListRows_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_AddListRows $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddListRows execution.
     *
     * @return Google_Spreadsheets_AddListRows_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddListRows execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_AddListRows_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_AddListRows_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddListRows Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddListRows_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddListRows Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_AddListRows_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AddListRows execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates a specified cell in a Google worksheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells extends Temboo_Choreography
{
    /**
     * Updates a specified cell in a Google worksheet.
     *
     * @param Temboo_Session $session The session that owns this UpdateCells Choreo.
     * @return Google_Spreadsheets_UpdateCells New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/UpdateCells/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateCells Choreo.
     *
     * @param Google_Spreadsheets_UpdateCells_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateCells_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateCells_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_UpdateCells_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateCells Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateCells_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_UpdateCells_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateCells Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateCells Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateCells_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateCells input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Column input for this UpdateCells Choreo.
     *
     * @param int $value (required, integer) The column number of the cell location that you want to update (for example, column A = 1, columnB = 2, etc).
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setColumn($value)
    {
        return $this->set('Column', $value);
    }

    /**
     * Set the value for the InputValue input for this UpdateCells Choreo.
     *
     * @param string $value (required, string) The new value for the cell
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setInputValue($value)
    {
        return $this->set('InputValue', $value);
    }

    /**
     * Set the value for the Password input for this UpdateCells Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Row input for this UpdateCells Choreo.
     *
     * @param int $value (required, integer) The row number of the cell location that you want to update
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setRow($value)
    {
        return $this->set('Row', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this UpdateCells Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the cell you want to update
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this UpdateCells Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this UpdateCells Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the cell you want to update
     * @return Google_Spreadsheets_UpdateCells_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the UpdateCells Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateCells Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateCells execution.
     * @param Google_Spreadsheets_UpdateCells $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_UpdateCells_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateCells_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateCells_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_UpdateCells $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateCells execution.
     *
     * @return Google_Spreadsheets_UpdateCells_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateCells execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateCells_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_UpdateCells_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateCells Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateCells_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateCells Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateCells_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateCells execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a person's profile.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get extends Temboo_Choreography
{
    /**
     * Retrieves a person's profile.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Plus_People_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/People/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Plus_People_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_People_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_People_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Get Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Get Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this Get Choreo.
     *
     * @param string $value (optional, string) The ID of the person to get the profile for. The value "me" is set as the default to indicate the authenticated user.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }

    /**
     * Set the value for the UserIP input for this Get Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_People_Get_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Plus_People_Get $choreo The choreography object for this execution.
     * @param Google_Plus_People_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_People_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Plus_People_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_People_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_People_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_People_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a tag for a specified photo in Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto extends Temboo_Choreography
{
    /**
     * Creates a tag for a specified photo in Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this TagPhoto Choreo.
     * @return Google_Picasa_TagPhoto New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/TagPhoto/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this TagPhoto Choreo.
     *
     * @param Google_Picasa_TagPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_TagPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_TagPhoto_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_TagPhoto_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this TagPhoto Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_TagPhoto_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_TagPhoto_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the TagPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the TagPhoto Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_TagPhoto_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this TagPhoto input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this TagPhoto Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this TagPhoto Choreo.
     *
     * @param int $value (required, integer) The id of the album which contains the photo you want to tag.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this TagPhoto Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this TagPhoto Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the PhotoID input for this TagPhoto Choreo.
     *
     * @param int $value (required, integer) The id of the photo you want to tag.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setPhotoID($value)
    {
        return $this->set('PhotoID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this TagPhoto Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the Tag input for this TagPhoto Choreo.
     *
     * @param string $value (required, string) The text for the photo tag.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setTag($value)
    {
        return $this->set('Tag', $value);
    }

    /**
     * Set the value for the UserID input for this TagPhoto Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to "default" which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_TagPhoto_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the TagPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the TagPhoto Choreo.
     *
     * @param Temboo_Session $session The session that owns this TagPhoto execution.
     * @param Google_Picasa_TagPhoto $choreo The choreography object for this execution.
     * @param Google_Picasa_TagPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_TagPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_TagPhoto_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_TagPhoto $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this TagPhoto execution.
     *
     * @return Google_Picasa_TagPhoto_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this TagPhoto execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_TagPhoto_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_TagPhoto_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the TagPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_TagPhoto_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the TagPhoto Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_TagPhoto_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this TagPhoto execution.
     *
     * @return string (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this TagPhoto execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this TagPhoto execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Converts latitude and longitude coordinates into a human-readable address.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates extends Temboo_Choreography
{
    /**
     * Converts latitude and longitude coordinates into a human-readable address.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByCoordinates Choreo.
     * @return Google_Geocoding_GeocodeByCoordinates New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Geocoding/GeocodeByCoordinates/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GeocodeByCoordinates Choreo.
     *
     * @param Google_Geocoding_GeocodeByCoordinates_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByCoordinates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByCoordinates_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Geocoding_GeocodeByCoordinates_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GeocodeByCoordinates Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Geocoding_GeocodeByCoordinates_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GeocodeByCoordinates Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GeocodeByCoordinates Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GeocodeByCoordinates input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Bounds input for this GeocodeByCoordinates Choreo.
     *
     * @param string $value (optional, string) The bounding box of the viewport within which to bias geocode results more prominently.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setBounds($value)
    {
        return $this->set('Bounds', $value);
    }

    /**
     * Set the value for the Language input for this GeocodeByCoordinates Choreo.
     *
     * @param string $value (optional, string) The language in which to return results. Defaults to 'en' (English).
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Latitude input for this GeocodeByCoordinates Choreo.
     *
     * @param float $value (required, decimal) The latitude value for which you wish to obtain the closest, human-readable address.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setLatitude($value)
    {
        return $this->set('Latitude', $value);
    }

    /**
     * Set the value for the Longitude input for this GeocodeByCoordinates Choreo.
     *
     * @param float $value (required, decimal) The longitude value for which you wish to obtain the closest, human-readable address.
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the Region input for this GeocodeByCoordinates Choreo.
     *
     * @param string $value (optional, string) The region code, specified as a ccTLD ("top-level domain") two-character value. Defaults to 'us' (United States).
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GeocodeByCoordinates Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this GeocodeByCoordinates Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the geocoding request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Geocoding_GeocodeByCoordinates_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GeocodeByCoordinates Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GeocodeByCoordinates Choreo.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByCoordinates execution.
     * @param Google_Geocoding_GeocodeByCoordinates $choreo The choreography object for this execution.
     * @param Google_Geocoding_GeocodeByCoordinates_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByCoordinates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByCoordinates_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Geocoding_GeocodeByCoordinates $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GeocodeByCoordinates execution.
     *
     * @return Google_Geocoding_GeocodeByCoordinates_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GeocodeByCoordinates execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Geocoding_GeocodeByCoordinates_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GeocodeByCoordinates Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByCoordinates_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GeocodeByCoordinates Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByCoordinates_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GeocodeByCoordinates execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Gets a comment by ID.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Get extends Temboo_Choreography
{
    /**
     * Gets a comment by ID.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Comments_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Comments/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Comments_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Comments_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Comments_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the IncludeDeleted input for this Get Choreo.
     *
     * @param bool $value (optional, boolean) If set, this will succeed when retrieving a deleted comment, and will include any deleted replies. (Default: false)
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setIncludeDeleted($value)
    {
        return $this->set('IncludeDeleted', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Comments_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Comments_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Comments_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Comments_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Comments_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Comments_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Comments_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive comment resource
	*/

	public function getComment() {
		return new Google_Drive_Comment_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves a specific location from a user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation extends Temboo_Choreography
{
    /**
     * Retrieves a specific location from a user's location history.
     *
     * @param Temboo_Session $session The session that owns this RetrievePastLocation Choreo.
     * @return Google_Latitude_RetrievePastLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/RetrievePastLocation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrievePastLocation Choreo.
     *
     * @param Google_Latitude_RetrievePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_RetrievePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_RetrievePastLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_RetrievePastLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrievePastLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_RetrievePastLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_RetrievePastLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrievePastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrievePastLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_RetrievePastLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrievePastLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this RetrievePastLocation Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this RetrievePastLocation Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this RetrievePastLocation Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Granularity input for this RetrievePastLocation Choreo.
     *
     * @param string $value (optional, string) Specify the level of detailed returned.  Enter: best, or city.  Default is: city.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setGranularity($value)
    {
        return $this->set('Granularity', $value);
    }

    /**
     * Set the value for the LocationID input for this RetrievePastLocation Choreo.
     *
     * @param string $value (required, date) The timestamp of a location as specified by its timestampMs property.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setLocationID($value)
    {
        return $this->set('LocationID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this RetrievePastLocation Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RetrievePastLocation Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Google_Latitude_RetrievePastLocation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the RetrievePastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrievePastLocation Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrievePastLocation execution.
     * @param Google_Latitude_RetrievePastLocation $choreo The choreography object for this execution.
     * @param Google_Latitude_RetrievePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_RetrievePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_RetrievePastLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_RetrievePastLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrievePastLocation execution.
     *
     * @return Google_Latitude_RetrievePastLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrievePastLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_RetrievePastLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_RetrievePastLocation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrievePastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_RetrievePastLocation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrievePastLocation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_RetrievePastLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this RetrievePastLocation execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this RetrievePastLocation execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves spreadsheet and worksheet IDs with a given spreadsheet name.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName extends Temboo_Choreography
{
    /**
     * Retrieves spreadsheet and worksheet IDs with a given spreadsheet name.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheetDetailsByName Choreo.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveSpreadsheetDetailsByName/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveSpreadsheetDetailsByName Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveSpreadsheetDetailsByName input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param string $value (required, password) Your Google password.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetName input for this RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param string $value (required, string) The title of the spreadsheet you want to retrieve details for.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setSpreadsheetName($value)
    {
        return $this->set('SpreadsheetName', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param string $value (required, string) Your Google email address.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RetrieveSpreadsheetDetailsByName Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpreadsheetDetailsByName execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheetDetailsByName $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveSpreadsheetDetailsByName $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveSpreadsheetDetailsByName execution.
     *
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveSpreadsheetDetailsByName execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveSpreadsheetDetailsByName Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveSpreadsheetDetailsByName Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpreadsheetDetailsByName_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "SpreadsheetDetails" output from this RetrieveSpreadsheetDetailsByName execution.
     *
     * @return string (xml) The spreadsheet details including spreadsheet name and key. Worksheet names and IDs associated with the spreadsheet are also included.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSpreadsheetDetails()
    {
        return $this->get('SpreadsheetDetails');
    }
}

/**
 * Permanently deletes the document or file you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile extends Temboo_Choreography
{
    /**
     * Permanently deletes the document or file you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteDocumentOrFile Choreo.
     * @return Google_Documents_DeleteDocumentOrFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/DeleteDocumentOrFile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteDocumentOrFile Choreo.
     *
     * @param Google_Documents_DeleteDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_DeleteDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DeleteDocumentOrFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_DeleteDocumentOrFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDocumentOrFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_DeleteDocumentOrFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteDocumentOrFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDocumentOrFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this DeleteDocumentOrFile Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the ResourceID input for this DeleteDocumentOrFile Choreo.
     *
     * @param string $value (required, string) The resource ID for the document or file to delete.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setResourceID($value)
    {
        return $this->set('ResourceID', $value);
    }

    /**
     * Set the value for the Username input for this DeleteDocumentOrFile Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_DeleteDocumentOrFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the DeleteDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDocumentOrFile Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteDocumentOrFile execution.
     * @param Google_Documents_DeleteDocumentOrFile $choreo The choreography object for this execution.
     * @param Google_Documents_DeleteDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_DeleteDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DeleteDocumentOrFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_DeleteDocumentOrFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDocumentOrFile execution.
     *
     * @return Google_Documents_DeleteDocumentOrFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteDocumentOrFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_DeleteDocumentOrFile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DeleteDocumentOrFile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteDocumentOrFile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_DeleteDocumentOrFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteDocumentOrFile execution.
     *
     * @return string There is no XML response for delete requests.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve data for all calendars.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars extends Temboo_Choreography
{
    /**
     * Retrieve data for all calendars.
     *
     * @param Temboo_Session $session The session that owns this GetAllCalendars Choreo.
     * @return Google_Calendar_GetAllCalendars New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetAllCalendars/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAllCalendars Choreo.
     *
     * @param Google_Calendar_GetAllCalendars_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllCalendars_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllCalendars_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetAllCalendars_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllCalendars Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllCalendars_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetAllCalendars_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllCalendars Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAllCalendars Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllCalendars_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllCalendars input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllCalendars Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllCalendars Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllCalendars Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Count input for this GetAllCalendars Choreo.
     *
     * @param int $value (optional, integer) The maximum number of calendars to return. The default is 15.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setCount($value)
    {
        return $this->set('Count', $value);
    }

    /**
     * Set the value for the Fields input for this GetAllCalendars Choreo.
     *
     * @param string $value (optional, string) The calendar fields to return. Accepted values are "etag", "items", "kind", and "nextPageToken". All calendar items are returned by default.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the Hidden input for this GetAllCalendars Choreo.
     *
     * @param bool $value (optional, boolean) Enter "1" to return hidden calendars in the results, or "0" (the default) to not return them.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setHidden($value)
    {
        return $this->set('Hidden', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllCalendars Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAllCalendars Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetAllCalendars_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAllCalendars Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllCalendars Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAllCalendars execution.
     * @param Google_Calendar_GetAllCalendars $choreo The choreography object for this execution.
     * @param Google_Calendar_GetAllCalendars_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllCalendars_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllCalendars_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetAllCalendars $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllCalendars execution.
     *
     * @return Google_Calendar_GetAllCalendars_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAllCalendars execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetAllCalendars_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetAllCalendars_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAllCalendars Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllCalendars_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAllCalendars Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetAllCalendars_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this GetAllCalendars execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetAllCalendars execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A list of Google Calendars.
	*/

	public function getCalendars() {
		$listEntries = Temboo_Results::getSubItemByKey(json_decode($this->get('Response'), true), "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Calendar_CalendarListEntry_output($entry));
			}
		}
		return $resultArray;
	}
}

/**
 * Retrieves specific rows or columns based on a specified range.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns extends Temboo_Choreography
{
    /**
     * Retrieves specific rows or columns based on a specified range.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpecificRowsOrColumns Choreo.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveSpecificRowsOrColumns/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveSpecificRowsOrColumns Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveSpecificRowsOrColumns input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the MaxColumn input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param int $value (optional, integer) The max column number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMaxColumn($value)
    {
        return $this->set('MaxColumn', $value);
    }

    /**
     * Set the value for the MaxRow input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param int $value (optional, integer) The max row number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMaxRow($value)
    {
        return $this->set('MaxRow', $value);
    }

    /**
     * Set the value for the MinColumn input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param int $value (optional, integer) The minimum column number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMinColumn($value)
    {
        return $this->set('MinColumn', $value);
    }

    /**
     * Set the value for the MinRow input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param int $value (optional, integer) The minimum row number to return.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setMinRow($value)
    {
        return $this->set('MinRow', $value);
    }

    /**
     * Set the value for the Password input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the RetrieveSpecificRowsOrColumns Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveSpecificRowsOrColumns execution.
     * @param Google_Spreadsheets_RetrieveSpecificRowsOrColumns $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveSpecificRowsOrColumns $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveSpecificRowsOrColumns execution.
     *
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveSpecificRowsOrColumns execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveSpecificRowsOrColumns Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveSpecificRowsOrColumns Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveSpecificRowsOrColumns_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveSpecificRowsOrColumns execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the children of a specified folder.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_List extends Temboo_Choreography
{
    /**
     * Lists the children of a specified folder.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Children_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Children/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Children_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Children_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Children_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FolderID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the folder. To list all files in the root folder, specify the value "root".
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setFolderID($value)
    {
        return $this->set('FolderID', $value);
    }

    /**
     * Set the value for the MaxResults input for this List Choreo.
     *
     * @param int $value (optional, integer) Maximum number of children to return.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List Choreo.
     *
     * @param string $value (optional, string) Page token for children.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the Query input for this List Choreo.
     *
     * @param string $value (optional, string) Query string for searching children.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Children_List $choreo The choreography object for this execution.
     * @param Google_Drive_Children_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Children_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Children_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Children_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Children_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Children_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get the list of children for specific folder
	*/

	public function getChildList() {
		return new Google_Drive_ChildList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Converts a human-readable address into geographic coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress extends Temboo_Choreography
{
    /**
     * Converts a human-readable address into geographic coordinates.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByAddress Choreo.
     * @return Google_Geocoding_GeocodeByAddress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Geocoding/GeocodeByAddress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GeocodeByAddress Choreo.
     *
     * @param Google_Geocoding_GeocodeByAddress_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByAddress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Geocoding_GeocodeByAddress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GeocodeByAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByAddress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Geocoding_GeocodeByAddress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GeocodeByAddress Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GeocodeByAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Geocoding_GeocodeByAddress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GeocodeByAddress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Address input for this GeocodeByAddress Choreo.
     *
     * @param string $value (required, string) The address that you want to geocode.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setAddress($value)
    {
        return $this->set('Address', $value);
    }

    /**
     * Set the value for the Bounds input for this GeocodeByAddress Choreo.
     *
     * @param string $value (optional, string) The bounding box of the viewport within which to bias geocode results more prominently.
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setBounds($value)
    {
        return $this->set('Bounds', $value);
    }

    /**
     * Set the value for the Language input for this GeocodeByAddress Choreo.
     *
     * @param string $value (optional, string) The language in which to return results. Defaults to 'en' (English).
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Region input for this GeocodeByAddress Choreo.
     *
     * @param string $value (optional, string) The region code, specified as a ccTLD ("top-level domain") two-character value. Defaults to 'us' (United States).
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GeocodeByAddress Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this GeocodeByAddress Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the geocoding request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Geocoding_GeocodeByAddress_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GeocodeByAddress Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GeocodeByAddress Choreo.
     *
     * @param Temboo_Session $session The session that owns this GeocodeByAddress execution.
     * @param Google_Geocoding_GeocodeByAddress $choreo The choreography object for this execution.
     * @param Google_Geocoding_GeocodeByAddress_Inputs|array $inputs (optional) Inputs as Google_Geocoding_GeocodeByAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Geocoding_GeocodeByAddress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Geocoding_GeocodeByAddress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GeocodeByAddress execution.
     *
     * @return Google_Geocoding_GeocodeByAddress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GeocodeByAddress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByAddress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Geocoding_GeocodeByAddress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GeocodeByAddress Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Geocoding_GeocodeByAddress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GeocodeByAddress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Geocoding_GeocodeByAddress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Latitude" output from this GeocodeByAddress execution.
     *
     * @return float (decimal) The latitude coordinate associated with the address provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getLatitude()
    {
        return $this->get('Latitude');
    }
    /**
     * Retrieve the value for the "Longitude" output from this GeocodeByAddress execution.
     *
     * @return float (decimal) The longitude coordinate associated with the address provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getLongitude()
    {
        return $this->get('Longitude');
    }
    /**
     * Retrieve the value for the "Response" output from this GeocodeByAddress execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates or creates an authenticated user's current location.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation extends Temboo_Choreography
{
    /**
     * Updates or creates an authenticated user's current location.
     *
     * @param Temboo_Session $session The session that owns this InsertCurrentLocation Choreo.
     * @return Google_Latitude_InsertCurrentLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/InsertCurrentLocation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this InsertCurrentLocation Choreo.
     *
     * @param Google_Latitude_InsertCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertCurrentLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_InsertCurrentLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this InsertCurrentLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertCurrentLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_InsertCurrentLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the InsertCurrentLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the InsertCurrentLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertCurrentLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this InsertCurrentLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this InsertCurrentLocation Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this InsertCurrentLocation Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this InsertCurrentLocation Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Latitude input for this InsertCurrentLocation Choreo.
     *
     * @param float $value (required, decimal) Enter latitude coordinates. For example: 37.420352.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setLatitude($value)
    {
        return $this->set('Latitude', $value);
    }

    /**
     * Set the value for the Longitude input for this InsertCurrentLocation Choreo.
     *
     * @param float $value (required, decimal) Enter longitude coordinates.  For example: -122.083389.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the RefreshToken input for this InsertCurrentLocation Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this InsertCurrentLocation Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Google_Latitude_InsertCurrentLocation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the InsertCurrentLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the InsertCurrentLocation Choreo.
     *
     * @param Temboo_Session $session The session that owns this InsertCurrentLocation execution.
     * @param Google_Latitude_InsertCurrentLocation $choreo The choreography object for this execution.
     * @param Google_Latitude_InsertCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertCurrentLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_InsertCurrentLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this InsertCurrentLocation execution.
     *
     * @return Google_Latitude_InsertCurrentLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this InsertCurrentLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_InsertCurrentLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_InsertCurrentLocation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the InsertCurrentLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertCurrentLocation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the InsertCurrentLocation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_InsertCurrentLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this InsertCurrentLocation execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this InsertCurrentLocation execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list-based feed containing data in your Google spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed extends Temboo_Choreography
{
    /**
     * Retrieves a list-based feed containing data in your Google spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this RetrieveListFeed Choreo.
     * @return Google_Spreadsheets_RetrieveListFeed New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveListFeed/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveListFeed Choreo.
     *
     * @param Google_Spreadsheets_RetrieveListFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveListFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveListFeed_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveListFeed_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveListFeed Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveListFeed_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveListFeed Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveListFeed Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveListFeed input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveListFeed Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveListFeed Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveListFeed Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this RetrieveListFeed Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_RetrieveListFeed_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the RetrieveListFeed Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveListFeed Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveListFeed execution.
     * @param Google_Spreadsheets_RetrieveListFeed $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_RetrieveListFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveListFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveListFeed_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveListFeed $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveListFeed execution.
     *
     * @return Google_Spreadsheets_RetrieveListFeed_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveListFeed execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveListFeed_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveListFeed Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveListFeed_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveListFeed Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveListFeed_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveListFeed execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain elevation information for a path generated by a set of geo-coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation extends Temboo_Choreography
{
    /**
     * Obtain elevation information for a path generated by a set of geo-coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetLocationElevation Choreo.
     * @return Google_Elevation_GetLocationElevation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Elevation/GetLocationElevation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetLocationElevation Choreo.
     *
     * @param Google_Elevation_GetLocationElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetLocationElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetLocationElevation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Elevation_GetLocationElevation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetLocationElevation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetLocationElevation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Elevation_GetLocationElevation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetLocationElevation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetLocationElevation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetLocationElevation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetLocationElevation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Locations input for this GetLocationElevation Choreo.
     *
     * @param string $value (required, string) Enter the location(s) for which elevation data will be obtained.  Input formats: a single latitude/longitude coordinate pair; an array of coordinates separated by a |. A set of encoded coordinates.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setLocations($value)
    {
        return $this->set('Locations', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetLocationElevation Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this GetLocationElevation Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Elevation_GetLocationElevation_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GetLocationElevation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetLocationElevation Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetLocationElevation execution.
     * @param Google_Elevation_GetLocationElevation $choreo The choreography object for this execution.
     * @param Google_Elevation_GetLocationElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetLocationElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetLocationElevation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Elevation_GetLocationElevation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetLocationElevation execution.
     *
     * @return Google_Elevation_GetLocationElevation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetLocationElevation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Elevation_GetLocationElevation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Elevation_GetLocationElevation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetLocationElevation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetLocationElevation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetLocationElevation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Elevation_GetLocationElevation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetLocationElevation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of worksheets in a given Google spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets extends Temboo_Choreography
{
    /**
     * Retrieves a list of worksheets in a given Google spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this RetrieveWorksheets Choreo.
     * @return Google_Spreadsheets_RetrieveWorksheets New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveWorksheets/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveWorksheets Choreo.
     *
     * @param Google_Spreadsheets_RetrieveWorksheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveWorksheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveWorksheets_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveWorksheets_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveWorksheets Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveWorksheets_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveWorksheets Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveWorksheets Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveWorksheets input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveWorksheets Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveWorksheets Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the worksheet(s) you want to retrieve. Can be retrieved from RetrieveSpreadsheets Choreo.
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveWorksheets Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveWorksheets_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RetrieveWorksheets Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveWorksheets Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveWorksheets execution.
     * @param Google_Spreadsheets_RetrieveWorksheets $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_RetrieveWorksheets_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveWorksheets_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveWorksheets_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveWorksheets $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveWorksheets execution.
     *
     * @return Google_Spreadsheets_RetrieveWorksheets_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveWorksheets execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveWorksheets_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveWorksheets Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveWorksheets_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveWorksheets Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveWorksheets_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveWorksheets execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows you to refund an order that's been submitted to your Google Checkout merchant account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder extends Temboo_Choreography
{
    /**
     * Allows you to refund an order that's been submitted to your Google Checkout merchant account.
     *
     * @param Temboo_Session $session The session that owns this RefundOrder Choreo.
     * @return Google_Checkout_RefundOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/RefundOrder/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RefundOrder Choreo.
     *
     * @param Google_Checkout_RefundOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_RefundOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_RefundOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_RefundOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RefundOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_RefundOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_RefundOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RefundOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RefundOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_RefundOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RefundOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Amount input for this RefundOrder Choreo.
     *
     * @param float $value (decimal) The amount to refund
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setAmount($value)
    {
        return $this->set('Amount', $value);
    }

    /**
     * Set the value for the Comment input for this RefundOrder Choreo.
     *
     * @param string $value (string) The comment for the order refund
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setComment($value)
    {
        return $this->set('Comment', $value);
    }

    /**
     * Set the value for the Endpoint input for this RefundOrder Choreo.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this RefundOrder Choreo.
     *
     * @param int $value (integer) The Merchant Id provided by Google
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this RefundOrder Choreo.
     *
     * @param string $value (string) The Merchant Key provided by Google
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the OrderNumber input for this RefundOrder Choreo.
     *
     * @param int $value (integer) The unique identifier for the order (There is an order number column in your Google Checkout Inbox).
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setOrderNumber($value)
    {
        return $this->set('OrderNumber', $value);
    }

    /**
     * Set the value for the Reason input for this RefundOrder Choreo.
     *
     * @param string $value (string) The reason for the refund
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setReason($value)
    {
        return $this->set('Reason', $value);
    }

    /**
     * Set the value for the SandboxMode input for this RefundOrder Choreo.
     *
     * @param bool $value (optional, boolean) Set this flag to 1 when using this Choreo with the Google Checkout sandbox endpoint (i.e. sandbox.google.com). Defaults to 0.
     * @return Google_Checkout_RefundOrder_Inputs For method chaining.
     */
    public function setSandboxMode($value)
    {
        return $this->set('SandboxMode', $value);
    }
}


/**
 * Execution object for the RefundOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RefundOrder Choreo.
     *
     * @param Temboo_Session $session The session that owns this RefundOrder execution.
     * @param Google_Checkout_RefundOrder $choreo The choreography object for this execution.
     * @param Google_Checkout_RefundOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_RefundOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_RefundOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_RefundOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RefundOrder execution.
     *
     * @return Google_Checkout_RefundOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RefundOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_RefundOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_RefundOrder_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RefundOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_RefundOrder_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RefundOrder Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_RefundOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ExecutionStatus" output from this RefundOrder execution.
     *
     * @return string Contains status information on the Choreo execution
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getExecutionStatus()
    {
        return $this->get('ExecutionStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this RefundOrder execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a copy of the specified file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Copy extends Temboo_Choreography
{
    /**
     * Creates a copy of the specified file.
     *
     * @param Temboo_Session $session The session that owns this Copy Choreo.
     * @return Google_Drive_Files_Copy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Copy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Copy Choreo.
     *
     * @param Google_Drive_Files_Copy_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Copy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Copy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Copy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Copy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Copy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Copy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Copy Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Copy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Copy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Copy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Copy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Copy Choreo.
     *
     * @param string $value (optional, json) A JSON representation of fields in a file resource. File metadata information (such as the title) can be set using this input. See documentation for formatting examples.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Copy Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Copy Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Copy Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Convert input for this Copy Choreo.
     *
     * @param bool $value (optional, boolean) Whether to convert this file to the corresponding Google Docs format. (Default: false).
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setConvert($value)
    {
        return $this->set('Convert', $value);
    }

    /**
     * Set the value for the Fields input for this Copy Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Copy Choreo.
     *
     * @param string $value (required, string) The ID of the file to copy.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the OCR input for this Copy Choreo.
     *
     * @param bool $value (optional, boolean) Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads. (Default: false)
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setOCR($value)
    {
        return $this->set('OCR', $value);
    }

    /**
     * Set the value for the OcrLanguage input for this Copy Choreo.
     *
     * @param string $value (optional, string) If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setOcrLanguage($value)
    {
        return $this->set('OcrLanguage', $value);
    }

    /**
     * Set the value for the Pinned input for this Copy Choreo.
     *
     * @param bool $value (optional, boolean) Whether to pin the head revision of the uploaded file. (Default: false).
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setPinned($value)
    {
        return $this->set('Pinned', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Copy Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the SourceLanguage input for this Copy Choreo.
     *
     * @param string $value (optional, string) The language of the original file to be translated.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setSourceLanguage($value)
    {
        return $this->set('SourceLanguage', $value);
    }

    /**
     * Set the value for the TargetLanguage input for this Copy Choreo.
     *
     * @param string $value (optional, string) Target language to translate the file to. If no sourceLanguage is provided, the API will attempt to detect the language.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setTargetLanguage($value)
    {
        return $this->set('TargetLanguage', $value);
    }

    /**
     * Set the value for the TimedTextLanguage input for this Copy Choreo.
     *
     * @param string $value (optional, string) The language of the timed text.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setTimedTextLanguage($value)
    {
        return $this->set('TimedTextLanguage', $value);
    }

    /**
     * Set the value for the TimedTextTrackName input for this Copy Choreo.
     *
     * @param string $value (optional, string) The timed text track name.
     * @return Google_Drive_Files_Copy_Inputs For method chaining.
     */
    public function setTimedTextTrackName($value)
    {
        return $this->set('TimedTextTrackName', $value);
    }
}


/**
 * Execution object for the Copy Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Copy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Copy Choreo.
     *
     * @param Temboo_Session $session The session that owns this Copy execution.
     * @param Google_Drive_Files_Copy $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Copy_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Copy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Copy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Copy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Copy execution.
     *
     * @return Google_Drive_Files_Copy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Copy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Copy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Copy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Copy Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Copy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Copy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Copy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Copy execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Copy execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive file resource
	*/

	public function getFile() {
		return new Google_Drive_File_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieve data for all events in a specified calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents extends Temboo_Choreography
{
    /**
     * Retrieve data for all events in a specified calendar.
     *
     * @param Temboo_Session $session The session that owns this GetAllEvents Choreo.
     * @return Google_Calendar_GetAllEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetAllEvents/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAllEvents Choreo.
     *
     * @param Google_Calendar_GetAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetAllEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetAllEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAllEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllEvents Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this GetAllEvents Choreo.
     *
     * @param string $value (required, string) The unique ID for the calendar with the events to retrieve.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllEvents Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllEvents Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllEvents Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAllEvents Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetAllEvents_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAllEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllEvents Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAllEvents execution.
     * @param Google_Calendar_GetAllEvents $choreo The choreography object for this execution.
     * @param Google_Calendar_GetAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetAllEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllEvents execution.
     *
     * @return Google_Calendar_GetAllEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAllEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetAllEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetAllEvents_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAllEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllEvents_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAllEvents Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetAllEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this GetAllEvents execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetAllEvents execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get All Google Calendar Events
	*/

	public function getEventList() {
		return new Google_Calendar_EventList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves a list of cell names and values in a specified Google worksheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed extends Temboo_Choreography
{
    /**
     * Retrieves a list of cell names and values in a specified Google worksheet.
     *
     * @param Temboo_Session $session The session that owns this RetrieveCellFeed Choreo.
     * @return Google_Spreadsheets_RetrieveCellFeed New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/RetrieveCellFeed/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveCellFeed Choreo.
     *
     * @param Google_Spreadsheets_RetrieveCellFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveCellFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveCellFeed_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_RetrieveCellFeed_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveCellFeed Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_RetrieveCellFeed_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveCellFeed Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveCellFeed Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveCellFeed input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this RetrieveCellFeed Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this RetrieveCellFeed Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this RetrieveCellFeed Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this RetrieveCellFeed Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_RetrieveCellFeed_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the RetrieveCellFeed Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveCellFeed Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveCellFeed execution.
     * @param Google_Spreadsheets_RetrieveCellFeed $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_RetrieveCellFeed_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_RetrieveCellFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_RetrieveCellFeed_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_RetrieveCellFeed $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveCellFeed execution.
     *
     * @return Google_Spreadsheets_RetrieveCellFeed_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveCellFeed execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_RetrieveCellFeed_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveCellFeed Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_RetrieveCellFeed_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveCellFeed Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_RetrieveCellFeed_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveCellFeed execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet extends Temboo_Choreography
{
    /**
     * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedSpreadsheet Choreo.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/DownloadBase64EncodedSpreadsheet/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DownloadBase64EncodedSpreadsheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DownloadBase64EncodedSpreadsheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Format input for this DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param string $value (optional, string) The format you want to export the spreadsheet to, such as "txt" or "pdf". The default download format is "txt".
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setFormat($value)
    {
        return $this->set('Format', $value);
    }

    /**
     * Set the value for the Link input for this DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param string $value (conditional, string) Enter the source links for the document to be retrieved. Required if Title is not specified.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setLink($value)
    {
        return $this->set('Link', $value);
    }

    /**
     * Set the value for the Password input for this DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param string $value (conditional, string) The title of the document to download. Required if the source Link is not specifed.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the DownloadBase64EncodedSpreadsheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedSpreadsheet execution.
     * @param Google_Spreadsheets_DownloadBase64EncodedSpreadsheet $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_DownloadBase64EncodedSpreadsheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DownloadBase64EncodedSpreadsheet execution.
     *
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DownloadBase64EncodedSpreadsheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DownloadBase64EncodedSpreadsheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DownloadBase64EncodedSpreadsheet Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_DownloadBase64EncodedSpreadsheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "FileContents" output from this DownloadBase64EncodedSpreadsheet execution.
     *
     * @return string (string) The Base64 encoded file content of the downloaded file.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFileContents()
    {
        return $this->get('FileContents');
    }
}

/**
 * Retrieves a range of cells from a specified Google worksheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery extends Temboo_Choreography
{
    /**
     * Retrieves a range of cells from a specified Google worksheet.
     *
     * @param Temboo_Session $session The session that owns this CellRangeQuery Choreo.
     * @return Google_Spreadsheets_CellRangeQuery New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/CellRangeQuery/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CellRangeQuery Choreo.
     *
     * @param Google_Spreadsheets_CellRangeQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CellRangeQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CellRangeQuery_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_CellRangeQuery_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CellRangeQuery Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_CellRangeQuery_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CellRangeQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CellRangeQuery Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CellRangeQuery input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the MaxColumn input for this CellRangeQuery Choreo.
     *
     * @param int $value (optional, integer) The maximum column number for the cell range that you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMaxColumn($value)
    {
        return $this->set('MaxColumn', $value);
    }

    /**
     * Set the value for the MaxRow input for this CellRangeQuery Choreo.
     *
     * @param int $value (optional, integer) The maximum row number for the cell range that you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMaxRow($value)
    {
        return $this->set('MaxRow', $value);
    }

    /**
     * Set the value for the MinColumn input for this CellRangeQuery Choreo.
     *
     * @param int $value (optional, integer) The minimum column number for the cell range you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMinColumn($value)
    {
        return $this->set('MinColumn', $value);
    }

    /**
     * Set the value for the MinRow input for this CellRangeQuery Choreo.
     *
     * @param int $value (optional, integer) The minimum row number for the cell range you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setMinRow($value)
    {
        return $this->set('MinRow', $value);
    }

    /**
     * Set the value for the Password input for this CellRangeQuery Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this CellRangeQuery Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this CellRangeQuery Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this CellRangeQuery Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the cells you want to retrieve
     * @return Google_Spreadsheets_CellRangeQuery_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the CellRangeQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CellRangeQuery Choreo.
     *
     * @param Temboo_Session $session The session that owns this CellRangeQuery execution.
     * @param Google_Spreadsheets_CellRangeQuery $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_CellRangeQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CellRangeQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CellRangeQuery_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_CellRangeQuery $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CellRangeQuery execution.
     *
     * @return Google_Spreadsheets_CellRangeQuery_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CellRangeQuery execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_CellRangeQuery_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CellRangeQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CellRangeQuery_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CellRangeQuery Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_CellRangeQuery_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CellRangeQuery execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Inserts a new file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Insert extends Temboo_Choreography
{
    /**
     * Inserts a new file.
     *
     * @param Temboo_Session $session The session that owns this Insert Choreo.
     * @return Google_Drive_Files_Insert New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Insert/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Insert Choreo.
     *
     * @param Google_Drive_Files_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Insert_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Insert_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Insert_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Insert_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Insert_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Insert_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Insert input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Insert Choreo.
     *
     * @param string $value (conditional, json) A JSON representation of fields in a file resource. File metadata information (such as the title) can be inserted using this input. See documentation for formatting examples.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Insert Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ContentType input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Content-Type of the file that is being uploaded (i.e. image/jpg). Required when specifying the FileContent input.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setContentType($value)
    {
        return $this->set('ContentType', $value);
    }

    /**
     * Set the value for the Convert input for this Insert Choreo.
     *
     * @param bool $value (optional, boolean) Whether to convert this file to the corresponding Google Docs format. (Default: false).
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setConvert($value)
    {
        return $this->set('Convert', $value);
    }

    /**
     * Set the value for the Fields input for this Insert Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileContent input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Base64 encoded contents of the file to upload.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setFileContent($value)
    {
        return $this->set('FileContent', $value);
    }

    /**
     * Set the value for the OCR input for this Insert Choreo.
     *
     * @param bool $value (optional, boolean) Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads. (Default: false)
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setOCR($value)
    {
        return $this->set('OCR', $value);
    }

    /**
     * Set the value for the OcrLanguage input for this Insert Choreo.
     *
     * @param string $value (optional, string) If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setOcrLanguage($value)
    {
        return $this->set('OcrLanguage', $value);
    }

    /**
     * Set the value for the Pinned input for this Insert Choreo.
     *
     * @param bool $value (optional, boolean) Whether to pin the head revision of the uploaded file. (Default: false).
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setPinned($value)
    {
        return $this->set('Pinned', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Insert Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the SourceLanguage input for this Insert Choreo.
     *
     * @param string $value (optional, string) The language of the original file to be translated.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setSourceLanguage($value)
    {
        return $this->set('SourceLanguage', $value);
    }

    /**
     * Set the value for the TargetLanguage input for this Insert Choreo.
     *
     * @param string $value (optional, string) Target language to translate the file to. If no sourceLanguage is provided, the API will attempt to detect the language.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setTargetLanguage($value)
    {
        return $this->set('TargetLanguage', $value);
    }

    /**
     * Set the value for the TimedTextLanguage input for this Insert Choreo.
     *
     * @param string $value (optional, string) The language of the timed text.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setTimedTextLanguage($value)
    {
        return $this->set('TimedTextLanguage', $value);
    }

    /**
     * Set the value for the TimedTextTrackName input for this Insert Choreo.
     *
     * @param string $value (optional, string) The timed text track name.
     * @return Google_Drive_Files_Insert_Inputs For method chaining.
     */
    public function setTimedTextTrackName($value)
    {
        return $this->set('TimedTextTrackName', $value);
    }

}


/**
 * Execution object for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Insert_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Insert Choreo.
     *
     * @param Temboo_Session $session The session that owns this Insert execution.
     * @param Google_Drive_Files_Insert $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Insert_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Insert $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Insert execution.
     *
     * @return Google_Drive_Files_Insert_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Insert execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Insert_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Insert_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Insert_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Insert Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Insert_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Insert execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Insert execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive file resource
	*/

	public function getFile() {
		return new Google_Drive_File_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Charge and ship an order once a shopping cart order has arrived in your Google Checkout Inbox.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder extends Temboo_Choreography
{
    /**
     * Charge and ship an order once a shopping cart order has arrived in your Google Checkout Inbox.
     *
     * @param Temboo_Session $session The session that owns this ChargeAndShipOrder Choreo.
     * @return Google_Checkout_ChargeAndShipOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/ChargeAndShipOrder/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ChargeAndShipOrder Choreo.
     *
     * @param Google_Checkout_ChargeAndShipOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_ChargeAndShipOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_ChargeAndShipOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_ChargeAndShipOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ChargeAndShipOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_ChargeAndShipOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ChargeAndShipOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ChargeAndShipOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ChargeAndShipOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Amount input for this ChargeAndShipOrder Choreo.
     *
     * @param float $value (decimal) The dollar amount to charge (i.e. 25.50)
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setAmount($value)
    {
        return $this->set('Amount', $value);
    }

    /**
     * Set the value for the Carrier input for this ChargeAndShipOrder Choreo.
     *
     * @param string $value (string) The desired postal carrier (i.e. UPS)
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setCarrier($value)
    {
        return $this->set('Carrier', $value);
    }

    /**
     * Set the value for the Endpoint input for this ChargeAndShipOrder Choreo.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this ChargeAndShipOrder Choreo.
     *
     * @param int $value (integer) The Merchant Id provided by Google
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this ChargeAndShipOrder Choreo.
     *
     * @param string $value (string) The Merchant Key provided by Google
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the OrderNumber input for this ChargeAndShipOrder Choreo.
     *
     * @param int $value (integer) The unique identifier for the order (There is an order number column in your Google Checkout Inbox).
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setOrderNumber($value)
    {
        return $this->set('OrderNumber', $value);
    }

    /**
     * Set the value for the TrackingNumber input for this ChargeAndShipOrder Choreo.
     *
     * @param string $value (string) The tracking number for the order package
     * @return Google_Checkout_ChargeAndShipOrder_Inputs For method chaining.
     */
    public function setTrackingNumber($value)
    {
        return $this->set('TrackingNumber', $value);
    }
}


/**
 * Execution object for the ChargeAndShipOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ChargeAndShipOrder Choreo.
     *
     * @param Temboo_Session $session The session that owns this ChargeAndShipOrder execution.
     * @param Google_Checkout_ChargeAndShipOrder $choreo The choreography object for this execution.
     * @param Google_Checkout_ChargeAndShipOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_ChargeAndShipOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_ChargeAndShipOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_ChargeAndShipOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ChargeAndShipOrder execution.
     *
     * @return Google_Checkout_ChargeAndShipOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ChargeAndShipOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_ChargeAndShipOrder_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ChargeAndShipOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_ChargeAndShipOrder_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ChargeAndShipOrder Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_ChargeAndShipOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ChargeAndShipOrder execution.
     *
     * @return string (XML) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Populates a shopping cart and sends order information to your merchant  account allowing a user to complete an order using Google Checkout.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder extends Temboo_Choreography
{
    /**
     * Populates a shopping cart and sends order information to your merchant  account allowing a user to complete an order using Google Checkout.
     *
     * @param Temboo_Session $session The session that owns this CreateOrder Choreo.
     * @return Google_Checkout_CreateOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/CreateOrder/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateOrder Choreo.
     *
     * @param Google_Checkout_CreateOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CreateOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CreateOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_CreateOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CreateOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_CreateOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CreateOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Endpoint input for this CreateOrder Choreo.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ItemDescription input for this CreateOrder Choreo.
     *
     * @param string $value (string) The description of the shopping cart item
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setItemDescription($value)
    {
        return $this->set('ItemDescription', $value);
    }

    /**
     * Set the value for the ItemName input for this CreateOrder Choreo.
     *
     * @param string $value (string) A name of the shopping cart item
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setItemName($value)
    {
        return $this->set('ItemName', $value);
    }

    /**
     * Set the value for the MerchantId input for this CreateOrder Choreo.
     *
     * @param int $value (integer) The Merchant Id provided by Google
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this CreateOrder Choreo.
     *
     * @param string $value (string) The Merchant Key provided by Google
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the Quanity input for this CreateOrder Choreo.
     *
     * @param int $value (integer) The quantity of the shopping cart item
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setQuanity($value)
    {
        return $this->set('Quanity', $value);
    }

    /**
     * Set the value for the ShippingMethod input for this CreateOrder Choreo.
     *
     * @param string $value (string) The shipping method for the order (i.e. SuperShip Ground)
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setShippingMethod($value)
    {
        return $this->set('ShippingMethod', $value);
    }

    /**
     * Set the value for the ShippingPrice input for this CreateOrder Choreo.
     *
     * @param float $value (decimal) The shipping price for the order
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setShippingPrice($value)
    {
        return $this->set('ShippingPrice', $value);
    }

    /**
     * Set the value for the UnitPrice input for this CreateOrder Choreo.
     *
     * @param float $value (decimal) The unit price of the item that is added to the shopping cart
     * @return Google_Checkout_CreateOrder_Inputs For method chaining.
     */
    public function setUnitPrice($value)
    {
        return $this->set('UnitPrice', $value);
    }
}


/**
 * Execution object for the CreateOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateOrder Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateOrder execution.
     * @param Google_Checkout_CreateOrder $choreo The choreography object for this execution.
     * @param Google_Checkout_CreateOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CreateOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CreateOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_CreateOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateOrder execution.
     *
     * @return Google_Checkout_CreateOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_CreateOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_CreateOrder_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CreateOrder_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateOrder Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_CreateOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateOrder execution.
     *
     * @return string (XML) The response from Google.  Contains the redirect URL that a customer will use to complete the order.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified worksheet row from a Google spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow extends Temboo_Choreography
{
    /**
     * Deletes a specified worksheet row from a Google spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this DeleteListRow Choreo.
     * @return Google_Spreadsheets_DeleteListRow New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/DeleteListRow/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteListRow Choreo.
     *
     * @param Google_Spreadsheets_DeleteListRow_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteListRow_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteListRow_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_DeleteListRow_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteListRow Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteListRow_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_DeleteListRow_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteListRow Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteListRow Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteListRow_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteListRow input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the EditLink input for this DeleteListRow Choreo.
     *
     * @param string $value (conditional, string) The entry's edit link URL. Can be retrieved by running RetrieveListFeed and parsing the 'edit' link returned. When the edit link is provided, SpreadsheetKey, WorksheetId, and RowId are not needed.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setEditLink($value)
    {
        return $this->set('EditLink', $value);
    }

    /**
     * Set the value for the Password input for this DeleteListRow Choreo.
     *
     * @param string $value (required, password) Your Google password.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowId input for this DeleteListRow Choreo.
     *
     * @param string $value (conditional, string) The unique id of the row you want to delete. Required unless providing the EditLink.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setRowId($value)
    {
        return $this->set('RowId', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this DeleteListRow Choreo.
     *
     * @param string $value (conditional, string) The unique key of the spreadsheet associated with the row you want to delete. Required unless providing the EditLink.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this DeleteListRow Choreo.
     *
     * @param string $value (required, string) Your Google username.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this DeleteListRow Choreo.
     *
     * @param string $value (conditional, string) The unique id of the worksheet associated with the row you want to delete. Required unless providing the EditLink.
     * @return Google_Spreadsheets_DeleteListRow_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the DeleteListRow Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteListRow Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteListRow execution.
     * @param Google_Spreadsheets_DeleteListRow $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_DeleteListRow_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteListRow_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteListRow_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_DeleteListRow $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteListRow execution.
     *
     * @return Google_Spreadsheets_DeleteListRow_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteListRow execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteListRow_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_DeleteListRow_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteListRow Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteListRow_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteListRow Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteListRow_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteListRow execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a comment.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Delete extends Temboo_Choreography
{
    /**
     * Deletes a comment.
     *
     * @param Temboo_Session $session The session that owns this Delete Choreo.
     * @return Google_Drive_Comments_Delete New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Comments/Delete/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Delete Choreo.
     *
     * @param Google_Drive_Comments_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Delete_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Comments_Delete_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Delete_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Comments_Delete_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Delete_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Delete_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Delete input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Delete Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the FileID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Delete Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Delete_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Delete_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Delete Choreo.
     *
     * @param Temboo_Session $session The session that owns this Delete execution.
     * @param Google_Drive_Comments_Delete $choreo The choreography object for this execution.
     * @param Google_Drive_Comments_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Delete_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Comments_Delete $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Delete execution.
     *
     * @return Google_Drive_Comments_Delete_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Delete execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Comments_Delete_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Comments_Delete_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Delete_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Delete Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Comments_Delete_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Delete execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Delete execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a new secondary calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar extends Temboo_Choreography
{
    /**
     * Create a new secondary calendar.
     *
     * @param Temboo_Session $session The session that owns this CreateCalendar Choreo.
     * @return Google_Calendar_CreateCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/CreateCalendar/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateCalendar Choreo.
     *
     * @param Google_Calendar_CreateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_CreateCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_CreateCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateCalendar Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateCalendar Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateCalendar Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Description input for this CreateCalendar Choreo.
     *
     * @param string $value (optional, string) A description of the calendar.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the Location input for this CreateCalendar Choreo.
     *
     * @param string $value (optional, string) Geographic location of the calendar such as "Los Angeles" or "New York".
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setLocation($value)
    {
        return $this->set('Location', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateCalendar Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateCalendar Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Timezone input for this CreateCalendar Choreo.
     *
     * @param string $value (optional, string) The timezone for the new calendar, such as "America/Los_Angeles". Defaults to UTC if left blank.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setTimezone($value)
    {
        return $this->set('Timezone', $value);
    }

    /**
     * Set the value for the Title input for this CreateCalendar Choreo.
     *
     * @param string $value (required, string) The name for the new calendar.
     * @return Google_Calendar_CreateCalendar_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }
}


/**
 * Execution object for the CreateCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateCalendar Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateCalendar execution.
     * @param Google_Calendar_CreateCalendar $choreo The choreography object for this execution.
     * @param Google_Calendar_CreateCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_CreateCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateCalendar execution.
     *
     * @return Google_Calendar_CreateCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_CreateCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_CreateCalendar_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateCalendar Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_CreateCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this CreateCalendar execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this CreateCalendar execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Represents a Google Calendar Resource.
	*/

	public function getCalendar() {
		return new Google_Calendar_Calendar_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Gets a specific revision.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Get extends Temboo_Choreography
{
    /**
     * Gets a specific revision.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Revisions_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Revisions/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Revisions_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Revisions_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Revisions_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the RevisionID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the revision.
     * @return Google_Drive_Revisions_Get_Inputs For method chaining.
     */
    public function setRevisionID($value)
    {
        return $this->set('RevisionID', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Revisions_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Revisions_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Revisions_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Revisions_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Revisions_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Revisions_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Revisions_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive revision resource
	*/

	public function getRevision() {
		return new Google_Drive_Revision_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Creates a photo album in a Google Picasa account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum extends Temboo_Choreography
{
    /**
     * Creates a photo album in a Google Picasa account.
     *
     * @param Temboo_Session $session The session that owns this CreateAlbum Choreo.
     * @return Google_Picasa_CreateAlbum New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/CreateAlbum/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateAlbum Choreo.
     *
     * @param Google_Picasa_CreateAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_CreateAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_CreateAlbum_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_CreateAlbum_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateAlbum Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_CreateAlbum_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_CreateAlbum_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateAlbum Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_CreateAlbum_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateAlbum input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateAlbum Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateAlbum Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateAlbum Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Keywords input for this CreateAlbum Choreo.
     *
     * @param string $value (optional, string) Keywords to associate with the album you are creating separated by commas.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setKeywords($value)
    {
        return $this->set('Keywords', $value);
    }

    /**
     * Set the value for the PhotoAccess input for this CreateAlbum Choreo.
     *
     * @param string $value (optional, string) The perssion level to specify for photo access. Defaults to 'public'.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setPhotoAccess($value)
    {
        return $this->set('PhotoAccess', $value);
    }

    /**
     * Set the value for the PhotoLocation input for this CreateAlbum Choreo.
     *
     * @param string $value (optional, string) The location to associate with the photo (i.e. Italy).
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setPhotoLocation($value)
    {
        return $this->set('PhotoLocation', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateAlbum Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the Summary input for this CreateAlbum Choreo.
     *
     * @param string $value (optional, string) The album summary.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setSummary($value)
    {
        return $this->set('Summary', $value);
    }

    /**
     * Set the value for the Timestamp input for this CreateAlbum Choreo.
     *
     * @param string $value (optional, date) The timestamp to associate with the photo.  Defaults to the current timestamp. Should be an epoch timestamp in milliseconds.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setTimestamp($value)
    {
        return $this->set('Timestamp', $value);
    }

    /**
     * Set the value for the Title input for this CreateAlbum Choreo.
     *
     * @param string $value (required, string) The title of the album.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the UserID input for this CreateAlbum Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_CreateAlbum_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the CreateAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateAlbum Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateAlbum execution.
     * @param Google_Picasa_CreateAlbum $choreo The choreography object for this execution.
     * @param Google_Picasa_CreateAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_CreateAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_CreateAlbum_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_CreateAlbum $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateAlbum execution.
     *
     * @return Google_Picasa_CreateAlbum_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateAlbum execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_CreateAlbum_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_CreateAlbum_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_CreateAlbum_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateAlbum Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_CreateAlbum_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this CreateAlbum execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this CreateAlbum execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves all settings for a Google Calendar account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings extends Temboo_Choreography
{
    /**
     * Retrieves all settings for a Google Calendar account.
     *
     * @param Temboo_Session $session The session that owns this GetAllSettings Choreo.
     * @return Google_Calendar_GetAllSettings New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetAllSettings/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAllSettings Choreo.
     *
     * @param Google_Calendar_GetAllSettings_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllSettings_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllSettings_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetAllSettings_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllSettings Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllSettings_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetAllSettings_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllSettings Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAllSettings Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetAllSettings_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllSettings input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllSettings Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllSettings Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllSettings Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this GetAllSettings Choreo.
     *
     * @param string $value (optional, string) The settings fields to return. Returns etag, item IDs, and item values by default.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllSettings Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAllSettings Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetAllSettings_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAllSettings Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllSettings Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAllSettings execution.
     * @param Google_Calendar_GetAllSettings $choreo The choreography object for this execution.
     * @param Google_Calendar_GetAllSettings_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetAllSettings_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetAllSettings_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetAllSettings $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllSettings execution.
     *
     * @return Google_Calendar_GetAllSettings_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAllSettings execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetAllSettings_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetAllSettings_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAllSettings Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetAllSettings_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAllSettings Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetAllSettings_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this GetAllSettings execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetAllSettings execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get All Google Calendar Settings
	*/

	public function getSettingList() {
		return new Google_Calendar_SettingList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Inserts a file into a folder.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Insert extends Temboo_Choreography
{
    /**
     * Inserts a file into a folder.
     *
     * @param Temboo_Session $session The session that owns this Insert Choreo.
     * @return Google_Drive_Children_Insert New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Children/Insert/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Insert Choreo.
     *
     * @param Google_Drive_Children_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_Insert_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Children_Insert_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_Insert_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Children_Insert_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Insert_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_Insert_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Insert input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Insert Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Insert Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FolderID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the folder.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setFolderID($value)
    {
        return $this->set('FolderID', $value);
    }

    /**
     * Set the value for the ID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the child.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setID($value)
    {
        return $this->set('ID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Insert Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Insert_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Insert_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Insert Choreo.
     *
     * @param Temboo_Session $session The session that owns this Insert execution.
     * @param Google_Drive_Children_Insert $choreo The choreography object for this execution.
     * @param Google_Drive_Children_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_Insert_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Children_Insert $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Insert execution.
     *
     * @return Google_Drive_Children_Insert_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Insert execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Children_Insert_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Children_Insert_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Insert_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Insert Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Children_Insert_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Insert execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Insert execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive child resource
	*/

	public function getChild() {
		return new Google_Drive_Child_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Appends a simple comma-separated row of data to a given Google Spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AppendRow extends Temboo_Choreography
{
    /**
     * Appends a simple comma-separated row of data to a given Google Spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this AppendRow Choreo.
     * @return Google_Spreadsheets_AppendRow New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/AppendRow/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AppendRow Choreo.
     *
     * @param Google_Spreadsheets_AppendRow_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AppendRow_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AppendRow_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_AppendRow_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AppendRow Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AppendRow_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_AppendRow_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AppendRow Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AppendRow_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AppendRow Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AppendRow_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AppendRow input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_AppendRow_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_AppendRow_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RowData input for this AppendRow Choreo.
     *
     * @param string $value (required, string) A comma separated list of items to be added as a new row to the spreadsheet.
     * @return Google_Spreadsheets_AppendRow_Inputs For method chaining.
     */
    public function setRowData($value)
    {
        return $this->set('RowData', $value);
    }

    /**
     * Set the value for the Password input for this AppendRow Choreo.
     *
     * @param string $value (required, password) Your Google password.
     * @return Google_Spreadsheets_AppendRow_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SheetName input for this AppendRow Choreo.
     *
     * @param string $value (optional, string) The name of the sheet to write to. If not specified, rows are written to the first sheet.
     * @return Google_Spreadsheets_AppendRow_Inputs For method chaining.
     */
    public function setSheetName($value)
    {
        return $this->set('SheetName', $value);
    }

    /**
     * Set the value for the SpreadsheetTitle input for this AppendRow Choreo.
     *
     * @param string $value (required, string) The title of the spreadsheet that you want to write rows to.
     * @return Google_Spreadsheets_AppendRow_Inputs For method chaining.
     */
    public function setSpreadsheetTitle($value)
    {
        return $this->set('SpreadsheetTitle', $value);
    }

    /**
     * Set the value for the Username input for this AppendRow Choreo.
     *
     * @param string $value (required, string) Your Google username.
     * @return Google_Spreadsheets_AppendRow_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the AppendRow Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AppendRow_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AppendRow Choreo.
     *
     * @param Temboo_Session $session The session that owns this AppendRow execution.
     * @param Google_Spreadsheets_AppendRow $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_AppendRow_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AppendRow_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AppendRow_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_AppendRow $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AppendRow execution.
     *
     * @return Google_Spreadsheets_AppendRow_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AppendRow execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_AppendRow_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_AppendRow_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AppendRow Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AppendRow_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AppendRow Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_AppendRow_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AppendRow execution.
     *
     * @return string (string) Returns the string "success" if no error occurs.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Uploads a photo to Google Picasa.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto extends Temboo_Choreography
{
    /**
     * Uploads a photo to Google Picasa.
     *
     * @param Temboo_Session $session The session that owns this PostPhoto Choreo.
     * @return Google_Picasa_PostPhoto New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/PostPhoto/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PostPhoto Choreo.
     *
     * @param Google_Picasa_PostPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_PostPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_PostPhoto_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_PostPhoto_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PostPhoto Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_PostPhoto_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_PostPhoto_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PostPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PostPhoto Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_PostPhoto_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PostPhoto input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FileContents input for this PostPhoto Choreo.
     *
     * @param string $value (conditional, string) The base64 encoded file contents of the photo you want to upload.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setFileContents($value)
    {
        return $this->set('FileContents', $value);
    }

    /**
     * Set the value for the AccessToken input for this PostPhoto Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this PostPhoto Choreo.
     *
     * @param int $value (optional, integer) The id of the album that you want to upload the photo to. Defaults to 'default' which means the photo will be uploaded to the dropbox album.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this PostPhoto Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this PostPhoto Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ImageName input for this PostPhoto Choreo.
     *
     * @param string $value (required, string) The name of the image you want to upload.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setImageName($value)
    {
        return $this->set('ImageName', $value);
    }

    /**
     * Set the value for the RefreshToken input for this PostPhoto Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this PostPhoto Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to "default" which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_PostPhoto_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }

}


/**
 * Execution object for the PostPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PostPhoto Choreo.
     *
     * @param Temboo_Session $session The session that owns this PostPhoto execution.
     * @param Google_Picasa_PostPhoto $choreo The choreography object for this execution.
     * @param Google_Picasa_PostPhoto_Inputs|array $inputs (optional) Inputs as Google_Picasa_PostPhoto_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_PostPhoto_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_PostPhoto $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PostPhoto execution.
     *
     * @return Google_Picasa_PostPhoto_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PostPhoto execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_PostPhoto_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_PostPhoto_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PostPhoto Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_PostPhoto_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PostPhoto Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_PostPhoto_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this PostPhoto execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this PostPhoto execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the metadata or content of an existing file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Update extends Temboo_Choreography
{
    /**
     * Updates the metadata or content of an existing file.
     *
     * @param Temboo_Session $session The session that owns this Update Choreo.
     * @return Google_Drive_Files_Update New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Update/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Update Choreo.
     *
     * @param Google_Drive_Files_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Update_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Update_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Update_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Update_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Update_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Update_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Update input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Update Choreo.
     *
     * @param string $value (conditional, json) A JSON representation of fields in a file resource. File metadata information (such as the title) can be updated using this input. See documentation for formatting examples.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Update Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ContentType input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Content-Type of the file that is being updated (i.e. image/jpeg). Required if modifying the file content.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setContentType($value)
    {
        return $this->set('ContentType', $value);
    }

    /**
     * Set the value for the Convert input for this Update Choreo.
     *
     * @param bool $value (optional, boolean) Whether to convert this file to the corresponding Google Docs format. (Default: false).
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setConvert($value)
    {
        return $this->set('Convert', $value);
    }

    /**
     * Set the value for the Fields input for this Update Choreo.
     *
     * @param string $value (optional, string) Selector specifying which fields to include in a partial response.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileContent input for this Update Choreo.
     *
     * @param string $value (conditional, string) The new Base64 encoded contents of the file that is being updated.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setFileContent($value)
    {
        return $this->set('FileContent', $value);
    }

    /**
     * Set the value for the FileID input for this Update Choreo.
     *
     * @param string $value (required, string) The id of the file to update.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the OCR input for this Update Choreo.
     *
     * @param bool $value (optional, boolean) Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads. (Default: false)
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setOCR($value)
    {
        return $this->set('OCR', $value);
    }

    /**
     * Set the value for the OcrLanguage input for this Update Choreo.
     *
     * @param string $value (optional, string) If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setOcrLanguage($value)
    {
        return $this->set('OcrLanguage', $value);
    }

    /**
     * Set the value for the Pinned input for this Update Choreo.
     *
     * @param bool $value (optional, boolean) Whether to pin the new revision. (Default: false).
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setPinned($value)
    {
        return $this->set('Pinned', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Update Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the SetModifiedDate input for this Update Choreo.
     *
     * @param bool $value (optional, boolean) Whether to set the modified date with the supplied modified date.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setSetModifiedDate($value)
    {
        return $this->set('SetModifiedDate', $value);
    }

    /**
     * Set the value for the SourceLanguage input for this Update Choreo.
     *
     * @param string $value (optional, string) The language of the original file to be translated.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setSourceLanguage($value)
    {
        return $this->set('SourceLanguage', $value);
    }

    /**
     * Set the value for the TargetLanguage input for this Update Choreo.
     *
     * @param string $value (optional, string) Target language to translate the file to. If no sourceLanguage is provided, the API will attempt to detect the language.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setTargetLanguage($value)
    {
        return $this->set('TargetLanguage', $value);
    }

    /**
     * Set the value for the TimedTextLanguage input for this Update Choreo.
     *
     * @param string $value (optional, string) The language of the timed text.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setTimedTextLanguage($value)
    {
        return $this->set('TimedTextLanguage', $value);
    }

    /**
     * Set the value for the TimedTextTrackName input for this Update Choreo.
     *
     * @param string $value (optional, string) The timed text track name.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setTimedTextTrackName($value)
    {
        return $this->set('TimedTextTrackName', $value);
    }

    /**
     * Set the value for the UpdateViewedDate input for this Update Choreo.
     *
     * @param bool $value (optional, boolean) Whether to update the view date after successfully updating the file.
     * @return Google_Drive_Files_Update_Inputs For method chaining.
     */
    public function setUpdateViewedDate($value)
    {
        return $this->set('UpdateViewedDate', $value);
    }

}


/**
 * Execution object for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Update_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Update Choreo.
     *
     * @param Temboo_Session $session The session that owns this Update execution.
     * @param Google_Drive_Files_Update $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Update_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Update $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Update execution.
     *
     * @return Google_Drive_Files_Update_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Update execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Update_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Update_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Update_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Update Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Update_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Update execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Update execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive file resource
	*/

	public function getFile() {
		return new Google_Drive_File_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Lists a file's revisions.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_List extends Temboo_Choreography
{
    /**
     * Lists a file's revisions.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Revisions_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Revisions/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Revisions_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Revisions_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Revisions_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Revisions_List $choreo The choreography object for this execution.
     * @param Google_Drive_Revisions_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Revisions_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Revisions_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Revisions_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Revisions_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Revisions_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get a list of revisions
	*/

	public function getRevisionList() {
		return new Google_Drive_RevisionList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves a list of all files of a MIME type you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType extends Temboo_Choreography
{
    /**
     * Retrieves a list of all files of a MIME type you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchByType Choreo.
     * @return Google_Documents_SearchByType New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchByType/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SearchByType Choreo.
     *
     * @param Google_Documents_SearchByType_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByType_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByType_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchByType_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchByType Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByType_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchByType_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchByType Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SearchByType Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByType_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchByType input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this SearchByType Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Type input for this SearchByType Choreo.
     *
     * @param string $value (required, string) The MIME type of the files to list: word, excel, powerpoint, pdf, csv, rtf, html, css, xml, plaintext, zip, jpg, or png.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setType($value)
    {
        return $this->set('Type', $value);
    }

    /**
     * Set the value for the Username input for this SearchByType Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchByType_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SearchByType Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchByType Choreo.
     *
     * @param Temboo_Session $session The session that owns this SearchByType execution.
     * @param Google_Documents_SearchByType $choreo The choreography object for this execution.
     * @param Google_Documents_SearchByType_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByType_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByType_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchByType $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchByType execution.
     *
     * @return Google_Documents_SearchByType_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SearchByType execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchByType_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchByType_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SearchByType Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByType_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SearchByType Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchByType_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this SearchByType execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Moves a file to the trash.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Trash extends Temboo_Choreography
{
    /**
     * Moves a file to the trash.
     *
     * @param Temboo_Session $session The session that owns this Trash Choreo.
     * @return Google_Drive_Files_Trash New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Trash/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Trash Choreo.
     *
     * @param Google_Drive_Files_Trash_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Trash_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Trash_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Trash_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Trash Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Trash_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Trash_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Trash Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Trash_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Trash Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Trash_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Trash input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Trash Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Trash Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Trash Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Trash Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Trash Choreo.
     *
     * @param string $value (required, string) The ID of the file to trash.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Trash Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Trash_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Trash Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Trash_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Trash Choreo.
     *
     * @param Temboo_Session $session The session that owns this Trash execution.
     * @param Google_Drive_Files_Trash $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Trash_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Trash_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Trash_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Trash $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Trash execution.
     *
     * @return Google_Drive_Files_Trash_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Trash execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Trash_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Trash_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Trash Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Trash_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Trash Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Trash_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Trash execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Trash execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive file resource
	*/

	public function getFile() {
		return new Google_Drive_File_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves a specific contact with a given id.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById extends Temboo_Choreography
{
    /**
     * Retrieves a specific contact with a given id.
     *
     * @param Temboo_Session $session The session that owns this GetContactById Choreo.
     * @return Google_Contacts_GetContactById New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetContactById/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetContactById Choreo.
     *
     * @param Google_Contacts_GetContactById_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactById_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetContactById_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetContactById Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactById_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetContactById_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetContactById Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetContactById Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetContactById_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetContactById input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetContactById Choreo.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetContactById Choreo.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetContactById Choreo.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ContactId input for this GetContactById Choreo.
     *
     * @param string $value (required, string) The id associated with the contact to return. This can either be the individual id of the contact, or the full 'edit' link returned in the entry nodes of the GetAllContacts output.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setContactId($value)
    {
        return $this->set('ContactId', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetContactById Choreo.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserEmail input for this GetContactById Choreo.
     *
     * @param string $value (required, string) The email address of the user whose contacts you want to retrieve. Defaults to "default," or the user whose OAuth access token is passed.
     * @return Google_Contacts_GetContactById_Inputs For method chaining.
     */
    public function setUserEmail($value)
    {
        return $this->set('UserEmail', $value);
    }
}


/**
 * Execution object for the GetContactById Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetContactById Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetContactById execution.
     * @param Google_Contacts_GetContactById $choreo The choreography object for this execution.
     * @param Google_Contacts_GetContactById_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetContactById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetContactById_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetContactById $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetContactById execution.
     *
     * @return Google_Contacts_GetContactById_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetContactById execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetContactById_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetContactById_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetContactById Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetContactById_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetContactById Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetContactById_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this GetContactById execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetContactById execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 *  Returns all of the people in the specified collection for a particular activity.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity extends Temboo_Choreography
{
    /**
     *  Returns all of the people in the specified collection for a particular activity.
     *
     * @param Temboo_Session $session The session that owns this ListByActivity Choreo.
     * @return Google_Plus_People_ListByActivity New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/People/ListByActivity/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListByActivity Choreo.
     *
     * @param Google_Plus_People_ListByActivity_Inputs|array $inputs (optional) Inputs as Google_Plus_People_ListByActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_ListByActivity_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_People_ListByActivity_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListByActivity Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_ListByActivity_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_People_ListByActivity_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListByActivity Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListByActivity Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_ListByActivity_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListByActivity input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListByActivity Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ActivityID input for this ListByActivity Choreo.
     *
     * @param string $value (required, string) The ID of the activity to get the list of people for. ActiviyIDs can be retrieved by running the Google.Plus.Activities.Search Choreo.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setActivityID($value)
    {
        return $this->set('ActivityID', $value);
    }

    /**
     * Set the value for the Callback input for this ListByActivity Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this ListByActivity Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListByActivity Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Collection input for this ListByActivity Choreo.
     *
     * @param string $value (required, string) Valid values are: "plusoners" (lists all people who have +1'd this activity) and "resharers" (lists all people who have reshared this activity).
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setCollection($value)
    {
        return $this->set('Collection', $value);
    }

    /**
     * Set the value for the Fields input for this ListByActivity Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the MaxResults input for this ListByActivity Choreo.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this ListByActivity Choreo.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this ListByActivity Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListByActivity Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this ListByActivity Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_People_ListByActivity_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the ListByActivity Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListByActivity Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListByActivity execution.
     * @param Google_Plus_People_ListByActivity $choreo The choreography object for this execution.
     * @param Google_Plus_People_ListByActivity_Inputs|array $inputs (optional) Inputs as Google_Plus_People_ListByActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_ListByActivity_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_People_ListByActivity $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListByActivity execution.
     *
     * @return Google_Plus_People_ListByActivity_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListByActivity execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_People_ListByActivity_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_People_ListByActivity_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListByActivity Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_ListByActivity_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListByActivity Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_People_ListByActivity_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this ListByActivity execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this ListByActivity execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Delete all events from a primary calendar of an account. Note that this operation can't be undone.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents extends Temboo_Choreography
{
    /**
     * Delete all events from a primary calendar of an account. Note that this operation can't be undone.
     *
     * @param Temboo_Session $session The session that owns this DeleteAllEvents Choreo.
     * @return Google_Calendar_DeleteAllEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/DeleteAllEvents/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteAllEvents Choreo.
     *
     * @param Google_Calendar_DeleteAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteAllEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_DeleteAllEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAllEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteAllEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_DeleteAllEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAllEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteAllEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteAllEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAllEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteAllEvents Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteAllEvents Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteAllEvents Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteAllEvents Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteAllEvents_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteAllEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAllEvents Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteAllEvents execution.
     * @param Google_Calendar_DeleteAllEvents $choreo The choreography object for this execution.
     * @param Google_Calendar_DeleteAllEvents_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteAllEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteAllEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_DeleteAllEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAllEvents execution.
     *
     * @return Google_Calendar_DeleteAllEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteAllEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_DeleteAllEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_DeleteAllEvents_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteAllEvents Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteAllEvents_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteAllEvents Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_DeleteAllEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this DeleteAllEvents execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteAllEvents execution.
     *
     * @return string No content is returned for delete calendar operations.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument extends Temboo_Choreography
{
    /**
     * Downloads a document with the title you specify, and returns the content as Base64 encoded data.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedDocument Choreo.
     * @return Google_Documents_DownloadBase64EncodedDocument New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/DownloadBase64EncodedDocument/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DownloadBase64EncodedDocument Choreo.
     *
     * @param Google_Documents_DownloadBase64EncodedDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_DownloadBase64EncodedDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DownloadBase64EncodedDocument_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_DownloadBase64EncodedDocument_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DownloadBase64EncodedDocument Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_DownloadBase64EncodedDocument_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DownloadBase64EncodedDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DownloadBase64EncodedDocument Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DownloadBase64EncodedDocument input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Format input for this DownloadBase64EncodedDocument Choreo.
     *
     * @param string $value (optional, string) The format you want to export the document to, such as "doc", "txt", "pdf", etc. The default download format is HTML.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setFormat($value)
    {
        return $this->set('Format', $value);
    }

    /**
     * Set the value for the Link input for this DownloadBase64EncodedDocument Choreo.
     *
     * @param string $value (conditional, string) Enter the source links for the document to be retrieved. Required unless specifying the Title.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setLink($value)
    {
        return $this->set('Link', $value);
    }

    /**
     * Set the value for the Password input for this DownloadBase64EncodedDocument Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this DownloadBase64EncodedDocument Choreo.
     *
     * @param string $value (conditional, string) The title of the document to download. Required unless specifying the download Link.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this DownloadBase64EncodedDocument Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_DownloadBase64EncodedDocument_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the DownloadBase64EncodedDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DownloadBase64EncodedDocument Choreo.
     *
     * @param Temboo_Session $session The session that owns this DownloadBase64EncodedDocument execution.
     * @param Google_Documents_DownloadBase64EncodedDocument $choreo The choreography object for this execution.
     * @param Google_Documents_DownloadBase64EncodedDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_DownloadBase64EncodedDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_DownloadBase64EncodedDocument_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_DownloadBase64EncodedDocument $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DownloadBase64EncodedDocument execution.
     *
     * @return Google_Documents_DownloadBase64EncodedDocument_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DownloadBase64EncodedDocument execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_DownloadBase64EncodedDocument_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DownloadBase64EncodedDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_DownloadBase64EncodedDocument_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DownloadBase64EncodedDocument Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_DownloadBase64EncodedDocument_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "FileContents" output from this DownloadBase64EncodedDocument execution.
     *
     * @return string (string) The Base64 encoded file content of the downloaded file.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFileContents()
    {
        return $this->get('FileContents');
    }
}

/**
 * Deletes a specific location from a user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation extends Temboo_Choreography
{
    /**
     * Deletes a specific location from a user's location history.
     *
     * @param Temboo_Session $session The session that owns this DeletePastLocation Choreo.
     * @return Google_Latitude_DeletePastLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/DeletePastLocation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeletePastLocation Choreo.
     *
     * @param Google_Latitude_DeletePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeletePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeletePastLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_DeletePastLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeletePastLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeletePastLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_DeletePastLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeletePastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeletePastLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeletePastLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeletePastLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeletePastLocation Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this DeletePastLocation Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeletePastLocation Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the LocationID input for this DeletePastLocation Choreo.
     *
     * @param string $value (required, date) Enter the timestamp (in epoch time) of the location to be deleted.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setLocationID($value)
    {
        return $this->set('LocationID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeletePastLocation Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Latitude_DeletePastLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeletePastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeletePastLocation Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeletePastLocation execution.
     * @param Google_Latitude_DeletePastLocation $choreo The choreography object for this execution.
     * @param Google_Latitude_DeletePastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeletePastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeletePastLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_DeletePastLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeletePastLocation execution.
     *
     * @return Google_Latitude_DeletePastLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeletePastLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_DeletePastLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_DeletePastLocation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeletePastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeletePastLocation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeletePastLocation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_DeletePastLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this DeletePastLocation execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeletePastLocation execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve data for a specific calendar in a Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar extends Temboo_Choreography
{
    /**
     * Retrieve data for a specific calendar in a Google account.
     *
     * @param Temboo_Session $session The session that owns this GetCalendar Choreo.
     * @return Google_Calendar_GetCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetCalendar/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetCalendar Choreo.
     *
     * @param Google_Calendar_GetCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetCalendar Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this GetCalendar Choreo.
     *
     * @param string $value (required, string) The ID for the calendar to retrieve.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this GetCalendar Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetCalendar Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetCalendar Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetCalendar Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetCalendar_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetCalendar Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetCalendar execution.
     * @param Google_Calendar_GetCalendar $choreo The choreography object for this execution.
     * @param Google_Calendar_GetCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetCalendar execution.
     *
     * @return Google_Calendar_GetCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetCalendar_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetCalendar Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this GetCalendar execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetCalendar execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Represents a Google Calendar Resource.
	*/

	public function getCalendar() {
		return new Google_Calendar_Calendar_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves a given comment.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get extends Temboo_Choreography
{
    /**
     * Retrieves a given comment.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Plus_Comments_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Comments/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Plus_Comments_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Comments_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Comments_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Get Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the comment to get.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Get Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Get Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Comments_Get_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Plus_Comments_Get $choreo The choreography object for this execution.
     * @param Google_Plus_Comments_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Comments_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Plus_Comments_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Comments_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Comments_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Comments_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of all resources in a category you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory extends Temboo_Choreography
{
    /**
     * Retrieves a list of all resources in a category you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchByCategory Choreo.
     * @return Google_Documents_SearchByCategory New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchByCategory/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SearchByCategory Choreo.
     *
     * @param Google_Documents_SearchByCategory_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByCategory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByCategory_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchByCategory_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchByCategory Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByCategory_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchByCategory_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchByCategory Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SearchByCategory Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByCategory_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchByCategory input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Category input for this SearchByCategory Choreo.
     *
     * @param string $value (required, string) The category to list: "document", "spreadsheet", "presentation", "drawing", "folder", "starred", or "trashed". Combine multiple categories with "/".
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setCategory($value)
    {
        return $this->set('Category', $value);
    }

    /**
     * Set the value for the MyDocs input for this SearchByCategory Choreo.
     *
     * @param bool $value (optional, boolean) Enter "true" to return resources for the requesting user only. The default is "false" (returns all account resources).
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setMyDocs($value)
    {
        return $this->set('MyDocs', $value);
    }

    /**
     * Set the value for the Password input for this SearchByCategory Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this SearchByCategory Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the Viewed input for this SearchByCategory Choreo.
     *
     * @param bool $value (optional, boolean) Enter "true" to return only viewed resources for the specified category. The default is "false" (viewed and unviewed category resources).
     * @return Google_Documents_SearchByCategory_Inputs For method chaining.
     */
    public function setViewed($value)
    {
        return $this->set('Viewed', $value);
    }
}


/**
 * Execution object for the SearchByCategory Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchByCategory Choreo.
     *
     * @param Temboo_Session $session The session that owns this SearchByCategory execution.
     * @param Google_Documents_SearchByCategory $choreo The choreography object for this execution.
     * @param Google_Documents_SearchByCategory_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByCategory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByCategory_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchByCategory $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchByCategory execution.
     *
     * @return Google_Documents_SearchByCategory_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SearchByCategory execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchByCategory_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchByCategory_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SearchByCategory Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByCategory_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SearchByCategory Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchByCategory_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this SearchByCategory execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes a child for a folder.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Delete extends Temboo_Choreography
{
    /**
     * Removes a child for a folder.
     *
     * @param Temboo_Session $session The session that owns this Delete Choreo.
     * @return Google_Drive_Children_Delete New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Children/Delete/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Delete Choreo.
     *
     * @param Google_Drive_Children_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_Delete_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Children_Delete_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_Delete_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Children_Delete_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Delete_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_Delete_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Delete input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Delete Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ChildID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the child.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setChildID($value)
    {
        return $this->set('ChildID', $value);
    }

    /**
     * Set the value for the ClientID input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Delete Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FolderID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the folder.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setFolderID($value)
    {
        return $this->set('FolderID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Delete Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Delete_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Delete_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Delete Choreo.
     *
     * @param Temboo_Session $session The session that owns this Delete execution.
     * @param Google_Drive_Children_Delete $choreo The choreography object for this execution.
     * @param Google_Drive_Children_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_Delete_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Children_Delete $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Delete execution.
     *
     * @return Google_Drive_Children_Delete_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Delete execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Children_Delete_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Children_Delete_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Delete_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Delete Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Children_Delete_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Delete execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Delete execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Request an authorization token for Google Analytics.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication extends Temboo_Choreography
{
    /**
     * Request an authorization token for Google Analytics.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication Choreo.
     * @return Google_Analytics_ClientLoginAuthentication New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Analytics/ClientLoginAuthentication/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ClientLoginAuthentication Choreo.
     *
     * @param Google_Analytics_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Analytics_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_ClientLoginAuthentication_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Analytics_ClientLoginAuthentication_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ClientLoginAuthentication Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Analytics_ClientLoginAuthentication_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ClientLoginAuthentication Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ClientLoginAuthentication input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ClientLoginAuthentication Choreo.
     *
     * @param string $value (required, password) Your Google password.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this ClientLoginAuthentication Choreo.
     *
     * @param string $value (required, string) Your Google username.
     * @return Google_Analytics_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ClientLoginAuthentication Choreo.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication execution.
     * @param Google_Analytics_ClientLoginAuthentication $choreo The choreography object for this execution.
     * @param Google_Analytics_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Analytics_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_ClientLoginAuthentication_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Analytics_ClientLoginAuthentication $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ClientLoginAuthentication execution.
     *
     * @return Google_Analytics_ClientLoginAuthentication_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ClientLoginAuthentication execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Analytics_ClientLoginAuthentication_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_ClientLoginAuthentication_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ClientLoginAuthentication Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Analytics_ClientLoginAuthentication_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AuthorizationKey" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) The authorization key which is parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAuthorizationKey()
    {
        return $this->get('AuthorizationKey');
    }
}

/**
 * Gets a file's metadata and content by ID.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Get extends Temboo_Choreography
{
    /**
     * Gets a file's metadata and content by ID.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Files_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Files_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ExportFormat input for this Get Choreo.
     *
     * @param string $value (optional, string) Indicates the download format (i.e. pdf, doc, txt, rtf, odt, etc). When specified, the FileContent output will contain the file's base64 encoded value.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setExportFormat($value)
    {
        return $this->set('ExportFormat', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the file to retrieve.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UpdateViewDate input for this Get Choreo.
     *
     * @param bool $value (optional, boolean) Whether to update the view date after successfully retrieving the file. Default value is false.
     * @return Google_Drive_Files_Get_Inputs For method chaining.
     */
    public function setUpdateViewDate($value)
    {
        return $this->set('UpdateViewDate', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Files_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Files_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "FileContent" output from this Get execution.
     *
     * @return string (string) The Base64 encoded file content.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFileContent()
    {
        return $this->get('FileContent');
    }
    /**
     * Retrieve the value for the "FileMetadata" output from this Get execution.
     *
     * @return string (json) The file metadata returned in the response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFileMetadata()
    {
        return $this->get('FileMetadata');
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
	/*
	A Google Drive file resource
	*/

	public function getFile() {
		return new Google_Drive_File_output(json_decode($this->get('FileMetadata'), true));
	}
}

/**
 * Update an existing contact's information.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact extends Temboo_Choreography
{
    /**
     * Update an existing contact's information.
     *
     * @param Temboo_Session $session The session that owns this UpdateContact Choreo.
     * @return Google_Contacts_UpdateContact New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/UpdateContact/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateContact Choreo.
     *
     * @param Google_Contacts_UpdateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_UpdateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_UpdateContact_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_UpdateContact_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateContact Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_UpdateContact_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_UpdateContact_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateContact Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_UpdateContact_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateContact input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this UpdateContact Choreo.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ID input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) The id of the contact to update. Required unless providing a value for the Query input.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setID($value)
    {
        return $this->set('ID', $value);
    }

    /**
     * Set the value for the NewEmail input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) The contact's new email address.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewEmail($value)
    {
        return $this->set('NewEmail', $value);
    }

    /**
     * Set the value for the NewFirstName input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) The contact's new first name.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewFirstName($value)
    {
        return $this->set('NewFirstName', $value);
    }

    /**
     * Set the value for the NewLastName input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) The contact's new last name.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewLastName($value)
    {
        return $this->set('NewLastName', $value);
    }

    /**
     * Set the value for the NewPhone input for this UpdateContact Choreo.
     *
     * @param string $value (optional, string) The contact's new telephone number.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setNewPhone($value)
    {
        return $this->set('NewPhone', $value);
    }

    /**
     * Set the value for the Query input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) A search term to retrieve the contact to update, such as an email address, last name, or address. Required unless providing a value for the ID input.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this UpdateContact Choreo.
     *
     * @param string $value (conditional, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_UpdateContact_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the UpdateContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateContact Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateContact execution.
     * @param Google_Contacts_UpdateContact $choreo The choreography object for this execution.
     * @param Google_Contacts_UpdateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_UpdateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_UpdateContact_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_UpdateContact $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateContact execution.
     *
     * @return Google_Contacts_UpdateContact_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateContact execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_UpdateContact_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_UpdateContact_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_UpdateContact_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateContact Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_UpdateContact_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this UpdateContact execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "ContactID" output from this UpdateContact execution.
     *
     * @return string (string) The unique ID for the contact returned by Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContactID()
    {
        return $this->get('ContactID');
    }
    /**
     * Retrieve the value for the "Email" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current email address.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEmail()
    {
        return $this->get('Email');
    }
    /**
     * Retrieve the value for the "FirstName" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current given name.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFirstName()
    {
        return $this->get('FirstName');
    }
    /**
     * Retrieve the value for the "LastName" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current family name.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getLastName()
    {
        return $this->get('LastName');
    }
    /**
     * Retrieve the value for the "Phone" output from this UpdateContact execution.
     *
     * @return string (string) The contact's current telephone number.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getPhone()
    {
        return $this->get('Phone');
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateContact execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists a file's permissions.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_List extends Temboo_Choreography
{
    /**
     * Lists a file's permissions.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Permissions_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Permissions/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Permissions_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Permissions_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Permissions_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Permissions_List $choreo The choreography object for this execution.
     * @param Google_Drive_Permissions_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Permissions_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Permissions_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Permissions_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Permissions_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Permissions_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get a list of permission for a file
	*/

	public function getPermissionList() {
		return new Google_Drive_PermissionList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves information for a file with the title you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle extends Temboo_Choreography
{
    /**
     * Retrieves information for a file with the title you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchByTitle Choreo.
     * @return Google_Documents_SearchByTitle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchByTitle/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SearchByTitle Choreo.
     *
     * @param Google_Documents_SearchByTitle_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByTitle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByTitle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchByTitle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchByTitle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByTitle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchByTitle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchByTitle Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SearchByTitle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchByTitle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchByTitle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this SearchByTitle Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this SearchByTitle Choreo.
     *
     * @param string $value (required, string) The title of the document to search for. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this SearchByTitle Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchByTitle_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SearchByTitle Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchByTitle Choreo.
     *
     * @param Temboo_Session $session The session that owns this SearchByTitle execution.
     * @param Google_Documents_SearchByTitle $choreo The choreography object for this execution.
     * @param Google_Documents_SearchByTitle_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchByTitle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchByTitle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchByTitle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchByTitle execution.
     *
     * @return Google_Documents_SearchByTitle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SearchByTitle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchByTitle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchByTitle_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SearchByTitle Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchByTitle_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SearchByTitle Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchByTitle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "EditMediaLink" output from this SearchByTitle execution.
     *
     * @return string (string) The 'resumable-edit-media' link of the document. This link is used when editing the content of an existing Google doc.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditMediaLink()
    {
        return $this->get('EditMediaLink');
    }
    /**
     * Retrieve the value for the "EditMetaDataLink" output from this SearchByTitle execution.
     *
     * @return string (string) The 'edit' link of the document. This link is used when editing the metadata of an existing Google doc.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditMetaDataLink()
    {
        return $this->get('EditMetaDataLink');
    }
    /**
     * Retrieve the value for the "ResourceID" output from this SearchByTitle execution.
     *
     * @return string (string) The document resource ID returned from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
    /**
     * Retrieve the value for the "Response" output from this SearchByTitle execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified contact.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact extends Temboo_Choreography
{
    /**
     * Deletes a specified contact.
     *
     * @param Temboo_Session $session The session that owns this DeleteContact Choreo.
     * @return Google_Contacts_DeleteContact New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/DeleteContact/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteContact Choreo.
     *
     * @param Google_Contacts_DeleteContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_DeleteContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_DeleteContact_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_DeleteContact_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteContact Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_DeleteContact_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_DeleteContact_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteContact Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_DeleteContact_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteContact input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteContact Choreo.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteContact Choreo.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteContact Choreo.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the ContactID input for this DeleteContact Choreo.
     *
     * @param string $value (required, string) The unique ID string for the contact you want to delete.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setContactID($value)
    {
        return $this->set('ContactID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteContact Choreo.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_DeleteContact_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteContact Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteContact execution.
     * @param Google_Contacts_DeleteContact $choreo The choreography object for this execution.
     * @param Google_Contacts_DeleteContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_DeleteContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_DeleteContact_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_DeleteContact $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteContact execution.
     *
     * @return Google_Contacts_DeleteContact_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteContact execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_DeleteContact_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_DeleteContact_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_DeleteContact_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteContact Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_DeleteContact_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this DeleteContact execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteContact execution.
     *
     * @return string The response from Google. No content is returned for a successful delete request.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Inserts a permission for a file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Insert extends Temboo_Choreography
{
    /**
     * Inserts a permission for a file.
     *
     * @param Temboo_Session $session The session that owns this Insert Choreo.
     * @return Google_Drive_Permissions_Insert New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Permissions/Insert/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Insert Choreo.
     *
     * @param Google_Drive_Permissions_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Insert_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Permissions_Insert_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Insert_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Permissions_Insert_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Insert_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Insert_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Insert input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Insert Choreo.
     *
     * @param string $value (required, json) A JSON representation of fields in a permissions resource. The JSON string must contain keys for role, type, and value. See documentation for formatting examples.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Insert Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Insert Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Insert Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the SendNotificationEmails input for this Insert Choreo.
     *
     * @param bool $value (optional, boolean) Whether to send notification emails. (Default: true).
     * @return Google_Drive_Permissions_Insert_Inputs For method chaining.
     */
    public function setSendNotificationEmails($value)
    {
        return $this->set('SendNotificationEmails', $value);
    }
}


/**
 * Execution object for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Insert_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Insert Choreo.
     *
     * @param Temboo_Session $session The session that owns this Insert execution.
     * @param Google_Drive_Permissions_Insert $choreo The choreography object for this execution.
     * @param Google_Drive_Permissions_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Insert_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Permissions_Insert $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Insert execution.
     *
     * @return Google_Drive_Permissions_Insert_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Insert execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Permissions_Insert_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Permissions_Insert_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Insert_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Insert Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Permissions_Insert_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Insert execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Insert execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive permission resource
	*/

	public function getPermissions() {
		return new Google_Drive_Permission_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Returns a feed of the photo comments for a specified user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments extends Temboo_Choreography
{
    /**
     * Returns a feed of the photo comments for a specified user.
     *
     * @param Temboo_Session $session The session that owns this RetrieveComments Choreo.
     * @return Google_Picasa_RetrieveComments New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/RetrieveComments/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveComments Choreo.
     *
     * @param Google_Picasa_RetrieveComments_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveComments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveComments_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_RetrieveComments_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveComments Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveComments_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_RetrieveComments_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveComments Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveComments Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_RetrieveComments_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveComments input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this RetrieveComments Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this RetrieveComments Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this RetrieveComments Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the MaxResults input for this RetrieveComments Choreo.
     *
     * @param int $value (optional, integer) The max number of comments to return. Defaults to 10.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the RefreshToken input for this RetrieveComments Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this RetrieveComments Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_RetrieveComments_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the RetrieveComments Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveComments Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveComments execution.
     * @param Google_Picasa_RetrieveComments $choreo The choreography object for this execution.
     * @param Google_Picasa_RetrieveComments_Inputs|array $inputs (optional) Inputs as Google_Picasa_RetrieveComments_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_RetrieveComments_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_RetrieveComments $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveComments execution.
     *
     * @return Google_Picasa_RetrieveComments_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveComments execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_RetrieveComments_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_RetrieveComments_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveComments Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_RetrieveComments_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveComments Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_RetrieveComments_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this RetrieveComments execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this RetrieveComments execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a new event in a specified calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent extends Temboo_Choreography
{
    /**
     * Create a new event in a specified calendar.
     *
     * @param Temboo_Session $session The session that owns this CreateEvent Choreo.
     * @return Google_Calendar_CreateEvent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/CreateEvent/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateEvent Choreo.
     *
     * @param Google_Calendar_CreateEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateEvent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_CreateEvent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateEvent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateEvent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_CreateEvent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateEvent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_CreateEvent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateEvent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateEvent Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this CreateEvent Choreo.
     *
     * @param string $value (required, string) The ID for the calendar in which to add the event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateEvent Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateEvent Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the EndDate input for this CreateEvent Choreo.
     *
     * @param string $value (required, string) The end date of the event, in the format "2012-04-10".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the EndTime input for this CreateEvent Choreo.
     *
     * @param string $value (required, string) The end time for the event, in the format "10:30:00".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEndTime($value)
    {
        return $this->set('EndTime', $value);
    }

    /**
     * Set the value for the EventDescription input for this CreateEvent Choreo.
     *
     * @param string $value (optional, string) A short description of the event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEventDescription($value)
    {
        return $this->set('EventDescription', $value);
    }

    /**
     * Set the value for the EventLocation input for this CreateEvent Choreo.
     *
     * @param string $value (optional, string) The location for the new event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEventLocation($value)
    {
        return $this->set('EventLocation', $value);
    }

    /**
     * Set the value for the EventTitle input for this CreateEvent Choreo.
     *
     * @param string $value (required, string) The title for the new event.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setEventTitle($value)
    {
        return $this->set('EventTitle', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateEvent Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateEvent Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the StartDate input for this CreateEvent Choreo.
     *
     * @param string $value (required, string) The start date of the event, in the format "2012-11-03".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }

    /**
     * Set the value for the StartTime input for this CreateEvent Choreo.
     *
     * @param string $value (required, string) The start time for the event, in the format "10:00:00".
     * @return Google_Calendar_CreateEvent_Inputs For method chaining.
     */
    public function setStartTime($value)
    {
        return $this->set('StartTime', $value);
    }
}


/**
 * Execution object for the CreateEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateEvent Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateEvent execution.
     * @param Google_Calendar_CreateEvent $choreo The choreography object for this execution.
     * @param Google_Calendar_CreateEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_CreateEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_CreateEvent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_CreateEvent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateEvent execution.
     *
     * @return Google_Calendar_CreateEvent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateEvent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_CreateEvent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_CreateEvent_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_CreateEvent_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateEvent Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_CreateEvent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "CreateEvent" output from this CreateEvent execution.
     *
     * @return string The request template with appropriate inputs passed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCreateEvent()
    {
        return $this->get('CreateEvent');
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this CreateEvent execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this CreateEvent execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "TimezoneSetting" output from this CreateEvent execution.
     *
     * @return string (string) The timezone setting retrieved from the specified calendar.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getTimezoneSetting()
    {
        return $this->get('TimezoneSetting');
    }
	/*
	A Google Calendar Event resource.
	*/

	public function getEvent() {
		return new Google_Calendar_Event_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Updates a worksheet row in a Google spreadsheet using a simple XML file you provide.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows extends Temboo_Choreography
{
    /**
     * Updates a worksheet row in a Google spreadsheet using a simple XML file you provide.
     *
     * @param Temboo_Session $session The session that owns this UpdateListRows Choreo.
     * @return Google_Spreadsheets_UpdateListRows New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/UpdateListRows/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateListRows Choreo.
     *
     * @param Google_Spreadsheets_UpdateListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateListRows_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_UpdateListRows_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateListRows Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateListRows_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_UpdateListRows_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateListRows Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateListRows Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateListRows_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateListRows input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RowsetXML input for this UpdateListRows Choreo.
     *
     * @param string $value (required, xml) The row of data that you want to update in XML format. Your XML needs to be in the rowset/row schema described in the Choreo documentation.
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setRowsetXML($value)
    {
        return $this->set('RowsetXML', $value);
    }

    /**
     * Set the value for the Password input for this UpdateListRows Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowId input for this UpdateListRows Choreo.
     *
     * @param string $value (required, string) The unique id of the row you want to update
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setRowId($value)
    {
        return $this->set('RowId', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this UpdateListRows Choreo.
     *
     * @param string $value (required, string) The unique key of the spreadsheet that contains the worksheet you want to update
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this UpdateListRows Choreo.
     *
     * @param string $value (required, string) Your Google username
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this UpdateListRows Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet that you want to update
     * @return Google_Spreadsheets_UpdateListRows_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the UpdateListRows Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateListRows Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateListRows execution.
     * @param Google_Spreadsheets_UpdateListRows $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_UpdateListRows_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateListRows_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateListRows_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_UpdateListRows $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateListRows execution.
     *
     * @return Google_Spreadsheets_UpdateListRows_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateListRows execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateListRows_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_UpdateListRows_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateListRows Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateListRows_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateListRows Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateListRows_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateListRows execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates a revision.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Update extends Temboo_Choreography
{
    /**
     * Updates a revision.
     *
     * @param Temboo_Session $session The session that owns this Update Choreo.
     * @return Google_Drive_Revisions_Update New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Revisions/Update/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Update Choreo.
     *
     * @param Google_Drive_Revisions_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_Update_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Revisions_Update_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_Update_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Revisions_Update_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Update_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_Update_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Update input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Update Choreo.
     *
     * @param string $value (required, json) A JSON representation of fields in a reply resource which shoud contain at least one key for pinned, publishAuto, published, or publishedOutsideDomain. See documentation for formatting examples.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Update Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Update Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Update Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the RevisionID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the revision.
     * @return Google_Drive_Revisions_Update_Inputs For method chaining.
     */
    public function setRevisionID($value)
    {
        return $this->set('RevisionID', $value);
    }
}


/**
 * Execution object for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Update_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Update Choreo.
     *
     * @param Temboo_Session $session The session that owns this Update execution.
     * @param Google_Drive_Revisions_Update $choreo The choreography object for this execution.
     * @param Google_Drive_Revisions_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_Update_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Revisions_Update $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Update execution.
     *
     * @return Google_Drive_Revisions_Update_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Update execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Revisions_Update_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Revisions_Update_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Update_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Update Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Revisions_Update_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Update execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Update execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive revision resource
	*/

	public function getRevision() {
		return new Google_Drive_Revision_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Updates existing worksheet metadata such as: Title, Row Count, and Column Count.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet extends Temboo_Choreography
{
    /**
     * Updates existing worksheet metadata such as: Title, Row Count, and Column Count.
     *
     * @param Temboo_Session $session The session that owns this UpdateWorksheet Choreo.
     * @return Google_Spreadsheets_UpdateWorksheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/UpdateWorksheet/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateWorksheet Choreo.
     *
     * @param Google_Spreadsheets_UpdateWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateWorksheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_UpdateWorksheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_UpdateWorksheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateWorksheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ColumnCount input for this UpdateWorksheet Choreo.
     *
     * @param int $value (required, integer) The number of columns that you want to specify for the worksheet
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setColumnCount($value)
    {
        return $this->set('ColumnCount', $value);
    }

    /**
     * Set the value for the Password input for this UpdateWorksheet Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowCount input for this UpdateWorksheet Choreo.
     *
     * @param int $value (required, integer) The number of rows that you want to specify for the worksheet
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setRowCount($value)
    {
        return $this->set('RowCount', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this UpdateWorksheet Choreo.
     *
     * @param string $value (required, string) The unique key associated with the spreadsheet that contains a worksheet you want to update
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Title input for this UpdateWorksheet Choreo.
     *
     * @param string $value (required, string) The new title of the worksheet
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this UpdateWorksheet Choreo.
     *
     * @param string $value (required, string) Your Google username
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this UpdateWorksheet Choreo.
     *
     * @param string $value (required, string) The unique id associated with the worksheet that you want to update
     * @return Google_Spreadsheets_UpdateWorksheet_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the UpdateWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateWorksheet Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateWorksheet execution.
     * @param Google_Spreadsheets_UpdateWorksheet $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_UpdateWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_UpdateWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_UpdateWorksheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_UpdateWorksheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateWorksheet execution.
     *
     * @return Google_Spreadsheets_UpdateWorksheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateWorksheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_UpdateWorksheet_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_UpdateWorksheet_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateWorksheet Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_UpdateWorksheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateWorksheet execution.
     *
     * @return string (xml) Response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new comment on the given file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Insert extends Temboo_Choreography
{
    /**
     * Creates a new comment on the given file.
     *
     * @param Temboo_Session $session The session that owns this Insert Choreo.
     * @return Google_Drive_Comments_Insert New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Comments/Insert/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Insert Choreo.
     *
     * @param Google_Drive_Comments_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Insert_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Comments_Insert_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Insert_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Comments_Insert_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Insert_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Insert_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Insert input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Insert Choreo.
     *
     * @param string $value (required, json) A JSON representation of fields in a comment resource which shoud contain at least one key for content. See documentation for formatting examples.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Insert Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Insert Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Insert Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Insert_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Insert_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Insert Choreo.
     *
     * @param Temboo_Session $session The session that owns this Insert execution.
     * @param Google_Drive_Comments_Insert $choreo The choreography object for this execution.
     * @param Google_Drive_Comments_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Insert_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Comments_Insert $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Insert execution.
     *
     * @return Google_Drive_Comments_Insert_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Insert execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Comments_Insert_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Comments_Insert_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Insert_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Insert Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Comments_Insert_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Insert execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Insert execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive comment resource
	*/

	public function getComment() {
		return new Google_Drive_Comment_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Updates an existing comment.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Update extends Temboo_Choreography
{
    /**
     * Updates an existing comment.
     *
     * @param Temboo_Session $session The session that owns this Update Choreo.
     * @return Google_Drive_Comments_Update New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Comments/Update/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Update Choreo.
     *
     * @param Google_Drive_Comments_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Update_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Comments_Update_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Update_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Comments_Update_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Update_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_Update_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Update input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Update Choreo.
     *
     * @param string $value (required, json) A JSON representation of fields in a comment resource which shoud contain at least one key for content. See documentation for formatting examples.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Update Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this Update Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Update Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_Update_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Update_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Update Choreo.
     *
     * @param Temboo_Session $session The session that owns this Update execution.
     * @param Google_Drive_Comments_Update $choreo The choreography object for this execution.
     * @param Google_Drive_Comments_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_Update_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Comments_Update $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Update execution.
     *
     * @return Google_Drive_Comments_Update_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Update execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Comments_Update_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Comments_Update_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_Update_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Update Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Comments_Update_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Update execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Update execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive comment resource
	*/

	public function getComment() {
		return new Google_Drive_Comment_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Deletes a specified worksheet from an existing spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet extends Temboo_Choreography
{
    /**
     * Deletes a specified worksheet from an existing spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this DeleteWorksheet Choreo.
     * @return Google_Spreadsheets_DeleteWorksheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/DeleteWorksheet/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteWorksheet Choreo.
     *
     * @param Google_Spreadsheets_DeleteWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteWorksheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_DeleteWorksheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_DeleteWorksheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteWorksheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this DeleteWorksheet Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this DeleteWorksheet Choreo.
     *
     * @param string $value (required, string) The unique key associated with the spreadsheet that contains a worksheet you want to delete
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this DeleteWorksheet Choreo.
     *
     * @param string $value (required, string) Your Google username
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this DeleteWorksheet Choreo.
     *
     * @param string $value (required, string) The unique id associated with the worksheet that you want to delete
     * @return Google_Spreadsheets_DeleteWorksheet_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the DeleteWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteWorksheet Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteWorksheet execution.
     * @param Google_Spreadsheets_DeleteWorksheet $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_DeleteWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_DeleteWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_DeleteWorksheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_DeleteWorksheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteWorksheet execution.
     *
     * @return Google_Spreadsheets_DeleteWorksheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteWorksheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_DeleteWorksheet_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_DeleteWorksheet_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteWorksheet Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_DeleteWorksheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteWorksheet execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain elevation information for a path specified by a set of  geo-coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation extends Temboo_Choreography
{
    /**
     * Obtain elevation information for a path specified by a set of  geo-coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetPathElevation Choreo.
     * @return Google_Elevation_GetPathElevation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Elevation/GetPathElevation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetPathElevation Choreo.
     *
     * @param Google_Elevation_GetPathElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetPathElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetPathElevation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Elevation_GetPathElevation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetPathElevation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetPathElevation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Elevation_GetPathElevation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetPathElevation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetPathElevation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Elevation_GetPathElevation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetPathElevation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Path input for this GetPathElevation Choreo.
     *
     * @param string $value (required, string) Specify the path for which elevation data will be obtained.  Input formats: an array of two or more lat/longitude coordinate pairs; A set of encoded coordinates using the Encoded Polyline Algorithm.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setPath($value)
    {
        return $this->set('Path', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetPathElevation Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Samples input for this GetPathElevation Choreo.
     *
     * @param int $value (required, integer) Enter the number of sample points.  See API docs for additional information.
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setSamples($value)
    {
        return $this->set('Samples', $value);
    }

    /**
     * Set the value for the Sensor input for this GetPathElevation Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Elevation_GetPathElevation_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the GetPathElevation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetPathElevation Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetPathElevation execution.
     * @param Google_Elevation_GetPathElevation $choreo The choreography object for this execution.
     * @param Google_Elevation_GetPathElevation_Inputs|array $inputs (optional) Inputs as Google_Elevation_GetPathElevation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Elevation_GetPathElevation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Elevation_GetPathElevation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetPathElevation execution.
     *
     * @return Google_Elevation_GetPathElevation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetPathElevation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Elevation_GetPathElevation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Elevation_GetPathElevation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetPathElevation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Elevation_GetPathElevation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetPathElevation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Elevation_GetPathElevation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetPathElevation execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows you to perform simple test to verify connectivity with your Google Checkout account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount extends Temboo_Choreography
{
    /**
     * Allows you to perform simple test to verify connectivity with your Google Checkout account.
     *
     * @param Temboo_Session $session The session that owns this TestAccount Choreo.
     * @return Google_Checkout_TestAccount New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/TestAccount/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this TestAccount Choreo.
     *
     * @param Google_Checkout_TestAccount_Inputs|array $inputs (optional) Inputs as Google_Checkout_TestAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_TestAccount_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_TestAccount_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this TestAccount Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_TestAccount_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_TestAccount_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the TestAccount Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the TestAccount Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_TestAccount_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this TestAccount input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Endpoint input for this TestAccount Choreo.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this TestAccount Choreo.
     *
     * @param int $value (required, integer) The Merchant Id provided by Google
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this TestAccount Choreo.
     *
     * @param string $value (required, string) The Merchant Key provided by Google
     * @return Google_Checkout_TestAccount_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }
}


/**
 * Execution object for the TestAccount Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the TestAccount Choreo.
     *
     * @param Temboo_Session $session The session that owns this TestAccount execution.
     * @param Google_Checkout_TestAccount $choreo The choreography object for this execution.
     * @param Google_Checkout_TestAccount_Inputs|array $inputs (optional) Inputs as Google_Checkout_TestAccount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_TestAccount_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_TestAccount $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this TestAccount execution.
     *
     * @return Google_Checkout_TestAccount_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this TestAccount execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_TestAccount_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_TestAccount_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the TestAccount Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_TestAccount_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the TestAccount Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_TestAccount_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this TestAccount execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new reply to the given comment.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Insert extends Temboo_Choreography
{
    /**
     * Creates a new reply to the given comment.
     *
     * @param Temboo_Session $session The session that owns this Insert Choreo.
     * @return Google_Drive_Replies_Insert New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Replies/Insert/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Insert Choreo.
     *
     * @param Google_Drive_Replies_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Insert_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Replies_Insert_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Insert_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Replies_Insert_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Insert_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Insert Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Insert_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Insert input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Insert Choreo.
     *
     * @param string $value (required, json) A JSON representation of fields in a reply resource. The JSON string must contain a key for content or verb. See documentation for formatting examples.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Insert Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Insert Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this Insert Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Insert Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Insert Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Insert_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Insert_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Insert Choreo.
     *
     * @param Temboo_Session $session The session that owns this Insert execution.
     * @param Google_Drive_Replies_Insert $choreo The choreography object for this execution.
     * @param Google_Drive_Replies_Insert_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Insert_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Insert_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Replies_Insert $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Insert execution.
     *
     * @return Google_Drive_Replies_Insert_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Insert execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Replies_Insert_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Replies_Insert_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Insert Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Insert_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Insert Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Replies_Insert_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Insert execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Insert execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A reply to a comment
	*/

	public function getReply() {
		return new Google_Drive_Reply_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Creates a new worksheet within an existing spreadsheet.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet extends Temboo_Choreography
{
    /**
     * Creates a new worksheet within an existing spreadsheet.
     *
     * @param Temboo_Session $session The session that owns this AddWorksheet Choreo.
     * @return Google_Spreadsheets_AddWorksheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/AddWorksheet/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddWorksheet Choreo.
     *
     * @param Google_Spreadsheets_AddWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddWorksheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_AddWorksheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddWorksheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_AddWorksheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddWorksheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_AddWorksheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddWorksheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ColumnCount input for this AddWorksheet Choreo.
     *
     * @param int $value (required, integer) The number of columns that you want to specify for the new worksheet
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setColumnCount($value)
    {
        return $this->set('ColumnCount', $value);
    }

    /**
     * Set the value for the Password input for this AddWorksheet Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the RowCount input for this AddWorksheet Choreo.
     *
     * @param int $value (required, integer) The number of rows that you want to specify for the new worksheet
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setRowCount($value)
    {
        return $this->set('RowCount', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this AddWorksheet Choreo.
     *
     * @param string $value (required, string) The unique key associated with the spreadsheet that you want to add a worksheet to
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Title input for this AddWorksheet Choreo.
     *
     * @param string $value (required, string) The title of the new document to create
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this AddWorksheet Choreo.
     *
     * @param string $value (required, string) Your Google username
     * @return Google_Spreadsheets_AddWorksheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the AddWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddWorksheet Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddWorksheet execution.
     * @param Google_Spreadsheets_AddWorksheet $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_AddWorksheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_AddWorksheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_AddWorksheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_AddWorksheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddWorksheet execution.
     *
     * @return Google_Spreadsheets_AddWorksheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddWorksheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_AddWorksheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_AddWorksheet_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddWorksheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_AddWorksheet_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddWorksheet Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_AddWorksheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AddWorksheet execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Toggle settings for a document or file on or off, depending on its current state.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties extends Temboo_Choreography
{
    /**
     * Toggle settings for a document or file on or off, depending on its current state.
     *
     * @param Temboo_Session $session The session that owns this ToggleProperties Choreo.
     * @return Google_Documents_ToggleProperties New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/ToggleProperties/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ToggleProperties Choreo.
     *
     * @param Google_Documents_ToggleProperties_Inputs|array $inputs (optional) Inputs as Google_Documents_ToggleProperties_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ToggleProperties_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_ToggleProperties_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ToggleProperties Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ToggleProperties_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_ToggleProperties_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ToggleProperties Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ToggleProperties Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_ToggleProperties_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ToggleProperties input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ToggleProperties Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this ToggleProperties Choreo.
     *
     * @param string $value (required, string) The title of the document with the properties you want to toggle. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this ToggleProperties Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_ToggleProperties_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ToggleProperties Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ToggleProperties Choreo.
     *
     * @param Temboo_Session $session The session that owns this ToggleProperties execution.
     * @param Google_Documents_ToggleProperties $choreo The choreography object for this execution.
     * @param Google_Documents_ToggleProperties_Inputs|array $inputs (optional) Inputs as Google_Documents_ToggleProperties_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_ToggleProperties_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_ToggleProperties $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ToggleProperties execution.
     *
     * @return Google_Documents_ToggleProperties_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ToggleProperties execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_ToggleProperties_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_ToggleProperties_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ToggleProperties Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_ToggleProperties_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ToggleProperties Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_ToggleProperties_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "EditLink" output from this ToggleProperties execution.
     *
     * @return string (string) The edit link URL for the document, parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditLink()
    {
        return $this->get('EditLink');
    }
    /**
     * Retrieve the value for the "Response" output from this ToggleProperties execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a specifed setting for a Google Calendar account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting extends Temboo_Choreography
{
    /**
     * Retrieves a specifed setting for a Google Calendar account.
     *
     * @param Temboo_Session $session The session that owns this GetSetting Choreo.
     * @return Google_Calendar_GetSetting New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetSetting/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetSetting Choreo.
     *
     * @param Google_Calendar_GetSetting_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetSetting_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetSetting_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetSetting_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetSetting Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetSetting_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetSetting_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetSetting Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetSetting Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetSetting_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetSetting input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetSetting Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetSetting Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetSetting Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetSetting Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetSetting Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SettingID input for this GetSetting Choreo.
     *
     * @param string $value (required, string) The unique ID for the setting to retrieve. Use the GetAllSettings Choreo to retrieve settings IDs.
     * @return Google_Calendar_GetSetting_Inputs For method chaining.
     */
    public function setSettingID($value)
    {
        return $this->set('SettingID', $value);
    }
}


/**
 * Execution object for the GetSetting Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetSetting Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetSetting execution.
     * @param Google_Calendar_GetSetting $choreo The choreography object for this execution.
     * @param Google_Calendar_GetSetting_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetSetting_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetSetting_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetSetting $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetSetting execution.
     *
     * @return Google_Calendar_GetSetting_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetSetting execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetSetting_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetSetting_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetSetting Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetSetting_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetSetting Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetSetting_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this GetSetting execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetSetting execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Calendar Setting.
	*/

	public function getSetting() {
		return new Google_Calendar_Setting_output(json_decode($this->get('Response'), true));
	}
}

/**
 * List all albums created in a Google Picasa account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums extends Temboo_Choreography
{
    /**
     * List all albums created in a Google Picasa account.
     *
     * @param Temboo_Session $session The session that owns this ListAlbums Choreo.
     * @return Google_Picasa_ListAlbums New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/ListAlbums/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListAlbums Choreo.
     *
     * @param Google_Picasa_ListAlbums_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListAlbums_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListAlbums_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_ListAlbums_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListAlbums Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListAlbums_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_ListAlbums_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListAlbums Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListAlbums Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListAlbums_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListAlbums input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListAlbums Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this ListAlbums Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListAlbums Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListAlbums Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this ListAlbums Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_ListAlbums_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the ListAlbums Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListAlbums Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListAlbums execution.
     * @param Google_Picasa_ListAlbums $choreo The choreography object for this execution.
     * @param Google_Picasa_ListAlbums_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListAlbums_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListAlbums_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_ListAlbums $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListAlbums execution.
     *
     * @return Google_Picasa_ListAlbums_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListAlbums execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_ListAlbums_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_ListAlbums_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListAlbums Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListAlbums_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListAlbums Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_ListAlbums_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this ListAlbums execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this ListAlbums execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the user's files.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_List extends Temboo_Choreography
{
    /**
     * Lists the user's files.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Files_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Files_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the MaxResults input for this List Choreo.
     *
     * @param int $value (optional, integer) The maximum number of results to return.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List Choreo.
     *
     * @param string $value (optional, string) The "nextPageToken" found in the response which is used to page through results.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the Query input for this List Choreo.
     *
     * @param string $value (optional, string) A query string for searching files.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Files_List $choreo The choreography object for this execution.
     * @param Google_Drive_Files_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Files_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "FileID" output from this List execution.
     *
     * @return string (string) The id of the file returned. This is returned only when using the Query input to search for specific files.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFileID()
    {
        return $this->get('FileID');
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get a list of files
	*/

	public function getFileList() {
		return new Google_Drive_FileList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Updates an existing reply.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Update extends Temboo_Choreography
{
    /**
     * Updates an existing reply.
     *
     * @param Temboo_Session $session The session that owns this Update Choreo.
     * @return Google_Drive_Replies_Update New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Replies/Update/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Update Choreo.
     *
     * @param Google_Drive_Replies_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Update_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Replies_Update_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Update_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Replies_Update_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Update_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Update_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Update input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Update Choreo.
     *
     * @param string $value (required, json) A JSON representation of fields in a reply resource. The JSON string must contain a key for content. See documentation for formatting examples.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Update Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this Update Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Update Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ReplyID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the reply.
     * @return Google_Drive_Replies_Update_Inputs For method chaining.
     */
    public function setReplyID($value)
    {
        return $this->set('ReplyID', $value);
    }
}


/**
 * Execution object for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Update_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Update Choreo.
     *
     * @param Temboo_Session $session The session that owns this Update execution.
     * @param Google_Drive_Replies_Update $choreo The choreography object for this execution.
     * @param Google_Drive_Replies_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Update_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Replies_Update $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Update execution.
     *
     * @return Google_Drive_Replies_Update_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Update execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Replies_Update_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Replies_Update_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Update_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Update Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Replies_Update_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Update execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Update execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A reply to a comment
	*/

	public function getReply() {
		return new Google_Drive_Reply_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Sets the file's updated time to the current server time.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Touch extends Temboo_Choreography
{
    /**
     * Sets the file's updated time to the current server time.
     *
     * @param Temboo_Session $session The session that owns this Touch Choreo.
     * @return Google_Drive_Files_Touch New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Touch/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Touch Choreo.
     *
     * @param Google_Drive_Files_Touch_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Touch_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Touch_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Touch_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Touch Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Touch_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Touch_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Touch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Touch_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Touch Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Touch_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Touch input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Touch Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Touch Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Touch Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Touch Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Touch Choreo.
     *
     * @param string $value (required, string) The ID of the file to update.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Touch Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Touch_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Touch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Touch_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Touch Choreo.
     *
     * @param Temboo_Session $session The session that owns this Touch execution.
     * @param Google_Drive_Files_Touch $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Touch_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Touch_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Touch_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Touch $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Touch execution.
     *
     * @return Google_Drive_Files_Touch_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Touch execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Touch_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Touch_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Touch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Touch_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Touch Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Touch_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Touch execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Touch execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive file resource
	*/

	public function getFile() {
		return new Google_Drive_File_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Removes a parent from a file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Delete extends Temboo_Choreography
{
    /**
     * Removes a parent from a file.
     *
     * @param Temboo_Session $session The session that owns this Delete Choreo.
     * @return Google_Drive_Parents_Delete New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Parents/Delete/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Delete Choreo.
     *
     * @param Google_Drive_Parents_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_Delete_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Parents_Delete_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_Delete_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Parents_Delete_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Delete_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_Delete_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Delete input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Delete Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the FileID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the ParentID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the parent.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function setParentID($value)
    {
        return $this->set('ParentID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Delete Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Delete_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Delete_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Delete Choreo.
     *
     * @param Temboo_Session $session The session that owns this Delete execution.
     * @param Google_Drive_Parents_Delete $choreo The choreography object for this execution.
     * @param Google_Drive_Parents_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_Delete_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Parents_Delete $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Delete execution.
     *
     * @return Google_Drive_Parents_Delete_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Delete execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Parents_Delete_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Parents_Delete_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Delete_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Delete Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Parents_Delete_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Delete execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Delete execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a new, empty document.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument extends Temboo_Choreography
{
    /**
     * Create a new, empty document.
     *
     * @param Temboo_Session $session The session that owns this CreateEmptyDocument Choreo.
     * @return Google_Documents_CreateEmptyDocument New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/CreateEmptyDocument/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateEmptyDocument Choreo.
     *
     * @param Google_Documents_CreateEmptyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateEmptyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateEmptyDocument_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_CreateEmptyDocument_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateEmptyDocument Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateEmptyDocument_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_CreateEmptyDocument_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateEmptyDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateEmptyDocument Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateEmptyDocument_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateEmptyDocument input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this CreateEmptyDocument Choreo.
     *
     * @param string $value (required, password) Your Google password.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this CreateEmptyDocument Choreo.
     *
     * @param string $value (required, string) The title of the new document to create.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this CreateEmptyDocument Choreo.
     *
     * @param string $value (required, string) Your Google username.
     * @return Google_Documents_CreateEmptyDocument_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the CreateEmptyDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateEmptyDocument Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateEmptyDocument execution.
     * @param Google_Documents_CreateEmptyDocument $choreo The choreography object for this execution.
     * @param Google_Documents_CreateEmptyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateEmptyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateEmptyDocument_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_CreateEmptyDocument $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateEmptyDocument execution.
     *
     * @return Google_Documents_CreateEmptyDocument_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateEmptyDocument execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_CreateEmptyDocument_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_CreateEmptyDocument_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateEmptyDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateEmptyDocument_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateEmptyDocument Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_CreateEmptyDocument_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "EditLink" output from this CreateEmptyDocument execution.
     *
     * @return string The edit link URL parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditLink()
    {
        return $this->get('EditLink');
    }
    /**
     * Retrieve the value for the "ResourceID" output from this CreateEmptyDocument execution.
     *
     * @return string (string) The document resource ID returned from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
    /**
     * Retrieve the value for the "Response" output from this CreateEmptyDocument execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of all documents shared by the two users you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared extends Temboo_Choreography
{
    /**
     * Retrieves a list of all documents shared by the two users you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchForShared Choreo.
     * @return Google_Documents_SearchForShared New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/SearchForShared/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SearchForShared Choreo.
     *
     * @param Google_Documents_SearchForShared_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchForShared_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchForShared_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_SearchForShared_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchForShared Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchForShared_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_SearchForShared_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchForShared Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SearchForShared Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_SearchForShared_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchForShared input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this SearchForShared Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the User1 input for this SearchForShared Choreo.
     *
     * @param string $value (required, string) The email address of the first document collaborator.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setUser1($value)
    {
        return $this->set('User1', $value);
    }

    /**
     * Set the value for the User2 input for this SearchForShared Choreo.
     *
     * @param string $value (required, string) The email address for the second document collaborator.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setUser2($value)
    {
        return $this->set('User2', $value);
    }

    /**
     * Set the value for the Username input for this SearchForShared Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_SearchForShared_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the SearchForShared Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchForShared Choreo.
     *
     * @param Temboo_Session $session The session that owns this SearchForShared execution.
     * @param Google_Documents_SearchForShared $choreo The choreography object for this execution.
     * @param Google_Documents_SearchForShared_Inputs|array $inputs (optional) Inputs as Google_Documents_SearchForShared_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_SearchForShared_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_SearchForShared $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchForShared execution.
     *
     * @return Google_Documents_SearchForShared_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SearchForShared execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_SearchForShared_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_SearchForShared_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SearchForShared Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_SearchForShared_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SearchForShared Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_SearchForShared_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this SearchForShared execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Gets a reply
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Get extends Temboo_Choreography
{
    /**
     * Gets a reply
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Replies_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Replies/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Replies_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Replies_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Replies_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the IncludeDeleted input for this Get Choreo.
     *
     * @param bool $value (optional, boolean) If set, this will succeed when retrieving a deleted reply. (Default: false)
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setIncludeDeleted($value)
    {
        return $this->set('IncludeDeleted', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ReplyID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the reply.
     * @return Google_Drive_Replies_Get_Inputs For method chaining.
     */
    public function setReplyID($value)
    {
        return $this->set('ReplyID', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Replies_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Replies_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Replies_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Replies_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Replies_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Replies_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Replies_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A reply to a comment
	*/

	public function getReply() {
		return new Google_Drive_Reply_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Returns the authenticated user's current location.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo extends Temboo_Choreography
{
    /**
     * Returns the authenticated user's current location.
     *
     * @param Temboo_Session $session The session that owns this GetCurrentLocationInfo Choreo.
     * @return Google_Latitude_GetCurrentLocationInfo New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/GetCurrentLocationInfo/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetCurrentLocationInfo Choreo.
     *
     * @param Google_Latitude_GetCurrentLocationInfo_Inputs|array $inputs (optional) Inputs as Google_Latitude_GetCurrentLocationInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_GetCurrentLocationInfo_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_GetCurrentLocationInfo_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetCurrentLocationInfo Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_GetCurrentLocationInfo_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetCurrentLocationInfo Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetCurrentLocationInfo Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetCurrentLocationInfo input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetCurrentLocationInfo Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetCurrentLocationInfo Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetCurrentLocationInfo Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Granularity input for this GetCurrentLocationInfo Choreo.
     *
     * @param string $value (optional, string) Specify the level of detailed returned.  Enter: best, or city.  Default is city.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setGranularity($value)
    {
        return $this->set('Granularity', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetCurrentLocationInfo Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetCurrentLocationInfo Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Google_Latitude_GetCurrentLocationInfo_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetCurrentLocationInfo Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetCurrentLocationInfo Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetCurrentLocationInfo execution.
     * @param Google_Latitude_GetCurrentLocationInfo $choreo The choreography object for this execution.
     * @param Google_Latitude_GetCurrentLocationInfo_Inputs|array $inputs (optional) Inputs as Google_Latitude_GetCurrentLocationInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_GetCurrentLocationInfo_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_GetCurrentLocationInfo $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetCurrentLocationInfo execution.
     *
     * @return Google_Latitude_GetCurrentLocationInfo_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetCurrentLocationInfo execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_GetCurrentLocationInfo_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetCurrentLocationInfo Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_GetCurrentLocationInfo_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetCurrentLocationInfo Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_GetCurrentLocationInfo_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this GetCurrentLocationInfo execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetCurrentLocationInfo execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a given activity.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get extends Temboo_Choreography
{
    /**
     * Retrieves a given activity.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Plus_Activities_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Activities/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Plus_Activities_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Activities_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Activities_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ActivityID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the activity to get.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setActivityID($value)
    {
        return $this->set('ActivityID', $value);
    }

    /**
     * Set the value for the Callback input for this Get Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Get Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Get Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Activities_Get_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Plus_Activities_Get $choreo The choreography object for this execution.
     * @param Google_Plus_Activities_Get_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Activities_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Plus_Activities_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Activities_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Activities_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Activities_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a permission from a file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Delete extends Temboo_Choreography
{
    /**
     * Deletes a permission from a file.
     *
     * @param Temboo_Session $session The session that owns this Delete Choreo.
     * @return Google_Drive_Permissions_Delete New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Permissions/Delete/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Delete Choreo.
     *
     * @param Google_Drive_Permissions_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Delete_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Permissions_Delete_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Delete_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Permissions_Delete_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Delete_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Delete_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Delete input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Delete Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the FileID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the PermissionID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID for the permission.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function setPermissionID($value)
    {
        return $this->set('PermissionID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Delete Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Delete_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Delete_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Delete Choreo.
     *
     * @param Temboo_Session $session The session that owns this Delete execution.
     * @param Google_Drive_Permissions_Delete $choreo The choreography object for this execution.
     * @param Google_Drive_Permissions_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Delete_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Permissions_Delete $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Delete execution.
     *
     * @return Google_Drive_Permissions_Delete_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Delete execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Permissions_Delete_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Permissions_Delete_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Delete_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Delete Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Permissions_Delete_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Delete execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Delete execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Specify whether a user has checked into a place.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests extends Temboo_Choreography
{
    /**
     * Specify whether a user has checked into a place.
     *
     * @param Temboo_Session $session The session that owns this PlaceCheckInRequests Choreo.
     * @return Google_Places_PlaceCheckInRequests New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/PlaceCheckInRequests/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PlaceCheckInRequests Choreo.
     *
     * @param Google_Places_PlaceCheckInRequests_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceCheckInRequests_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceCheckInRequests_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_PlaceCheckInRequests_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PlaceCheckInRequests Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceCheckInRequests_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_PlaceCheckInRequests_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PlaceCheckInRequests Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PlaceCheckInRequests Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceCheckInRequests_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PlaceCheckInRequests input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this PlaceCheckInRequests Choreo.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the PlaceReference input for this PlaceCheckInRequests Choreo.
     *
     * @param string $value (required, string) The unique place reference. This is returned in the PlaceSearch Choreo.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setPlaceReference($value)
    {
        return $this->set('PlaceReference', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this PlaceCheckInRequests Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this PlaceCheckInRequests Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_PlaceCheckInRequests_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the PlaceCheckInRequests Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PlaceCheckInRequests Choreo.
     *
     * @param Temboo_Session $session The session that owns this PlaceCheckInRequests execution.
     * @param Google_Places_PlaceCheckInRequests $choreo The choreography object for this execution.
     * @param Google_Places_PlaceCheckInRequests_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceCheckInRequests_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceCheckInRequests_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_PlaceCheckInRequests $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PlaceCheckInRequests execution.
     *
     * @return Google_Places_PlaceCheckInRequests_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PlaceCheckInRequests execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_PlaceCheckInRequests_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_PlaceCheckInRequests_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PlaceCheckInRequests Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceCheckInRequests_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PlaceCheckInRequests Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_PlaceCheckInRequests_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PlaceCheckInRequests execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Permanently deletes a file by ID.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Delete extends Temboo_Choreography
{
    /**
     * Permanently deletes a file by ID.
     *
     * @param Temboo_Session $session The session that owns this Delete Choreo.
     * @return Google_Drive_Files_Delete New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Delete/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Delete Choreo.
     *
     * @param Google_Drive_Files_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Delete_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Delete_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Delete_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Delete_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Delete_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Delete_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Delete input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Delete_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Delete_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Delete Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Delete_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Delete_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Delete_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the FileID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the file to delete.
     * @return Google_Drive_Files_Delete_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Delete Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Delete_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Delete_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Delete Choreo.
     *
     * @param Temboo_Session $session The session that owns this Delete execution.
     * @param Google_Drive_Files_Delete $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Delete_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Delete $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Delete execution.
     *
     * @return Google_Drive_Files_Delete_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Delete execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Delete_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Delete_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Delete_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Delete Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Delete_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Delete execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Delete execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes an album in Google Picasa with a specified album Id.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum extends Temboo_Choreography
{
    /**
     * Deletes an album in Google Picasa with a specified album Id.
     *
     * @param Temboo_Session $session The session that owns this DeleteAlbum Choreo.
     * @return Google_Picasa_DeleteAlbum New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/DeleteAlbum/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteAlbum Choreo.
     *
     * @param Google_Picasa_DeleteAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteAlbum_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_DeleteAlbum_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAlbum Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteAlbum_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_DeleteAlbum_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteAlbum Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_DeleteAlbum_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAlbum input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteAlbum Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this DeleteAlbum Choreo.
     *
     * @param int $value (required, integer) The album id. Note that this can be retrieved by running the ListAlbums Choreo.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteAlbum Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteAlbum Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteAlbum Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this DeleteAlbum Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_DeleteAlbum_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the DeleteAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAlbum Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteAlbum execution.
     * @param Google_Picasa_DeleteAlbum $choreo The choreography object for this execution.
     * @param Google_Picasa_DeleteAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_DeleteAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_DeleteAlbum_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_DeleteAlbum $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAlbum execution.
     *
     * @return Google_Picasa_DeleteAlbum_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteAlbum execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_DeleteAlbum_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_DeleteAlbum_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_DeleteAlbum_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteAlbum Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_DeleteAlbum_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this DeleteAlbum execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteAlbum execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 *  Returns a list of all activities in the specified collection for a particular user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List extends Temboo_Choreography
{
    /**
     *  Returns a list of all activities in the specified collection for a particular user.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Plus_Activities_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Activities/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Plus_Activities_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Activities_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Activities_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this List Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Collection input for this List Choreo.
     *
     * @param string $value (required, string) The collection of activities to list. Defaults to "public".
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setCollection($value)
    {
        return $this->set('Collection', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the MaxResults input for this List Choreo.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List Choreo.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this List Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the person to get the profile for. The value "me" is set as the default to indicate the authenticated user.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }

    /**
     * Set the value for the UserIP input for this List Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Activities_List_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Plus_Activities_List $choreo The choreography object for this execution.
     * @param Google_Plus_Activities_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Activities_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Plus_Activities_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Activities_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Activities_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Activities_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a new contact.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact extends Temboo_Choreography
{
    /**
     * Create a new contact.
     *
     * @param Temboo_Session $session The session that owns this CreateContact Choreo.
     * @return Google_Contacts_CreateContact New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/CreateContact/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateContact Choreo.
     *
     * @param Google_Contacts_CreateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_CreateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_CreateContact_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_CreateContact_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateContact Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_CreateContact_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_CreateContact_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateContact Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_CreateContact_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateContact input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this CreateContact Choreo.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this CreateContact Choreo.
     *
     * @param string $value (conditional, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this CreateContact Choreo.
     *
     * @param string $value (conditional, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Email input for this CreateContact Choreo.
     *
     * @param string $value (conditional, string) The new contact's email address.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setEmail($value)
    {
        return $this->set('Email', $value);
    }

    /**
     * Set the value for the FirstName input for this CreateContact Choreo.
     *
     * @param string $value (conditional, string) The new contact's first name.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setFirstName($value)
    {
        return $this->set('FirstName', $value);
    }

    /**
     * Set the value for the LastName input for this CreateContact Choreo.
     *
     * @param string $value (conditional, string) The new contact's last name.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setLastName($value)
    {
        return $this->set('LastName', $value);
    }

    /**
     * Set the value for the Phone input for this CreateContact Choreo.
     *
     * @param string $value (optional, string) The phone number for the new contact. It's best to use the "(555) 123-4567" format.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setPhone($value)
    {
        return $this->set('Phone', $value);
    }

    /**
     * Set the value for the RefreshToken input for this CreateContact Choreo.
     *
     * @param string $value (conditional, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_CreateContact_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the CreateContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateContact Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateContact execution.
     * @param Google_Contacts_CreateContact $choreo The choreography object for this execution.
     * @param Google_Contacts_CreateContact_Inputs|array $inputs (optional) Inputs as Google_Contacts_CreateContact_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_CreateContact_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_CreateContact $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateContact execution.
     *
     * @return Google_Contacts_CreateContact_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateContact execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_CreateContact_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_CreateContact_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateContact Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_CreateContact_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateContact Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_CreateContact_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this CreateContact execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "ContactID" output from this CreateContact execution.
     *
     * @return string (string) The unique ID supplied by Google for the new user.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContactID()
    {
        return $this->get('ContactID');
    }
    /**
     * Retrieve the value for the "Response" output from this CreateContact execution.
     *
     * @return string (xml) The response from the API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve data for all contacts in an account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts extends Temboo_Choreography
{
    /**
     * Retrieve data for all contacts in an account.
     *
     * @param Temboo_Session $session The session that owns this GetAllContacts Choreo.
     * @return Google_Contacts_GetAllContacts New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetAllContacts/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAllContacts Choreo.
     *
     * @param Google_Contacts_GetAllContacts_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllContacts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllContacts_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetAllContacts_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllContacts Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllContacts_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetAllContacts_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllContacts Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAllContacts Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllContacts_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllContacts input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllContacts Choreo.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllContacts Choreo.
     *
     * @param string $value (required, string) The client ID provided by Google when you register your application.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllContacts Choreo.
     *
     * @param string $value (required, string) The client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllContacts Choreo.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserEmail input for this GetAllContacts Choreo.
     *
     * @param string $value (optional, string) The email address of the user whose contacts you want to retrieve. Defaults to "default," or the user whose OAuth access token is passed.
     * @return Google_Contacts_GetAllContacts_Inputs For method chaining.
     */
    public function setUserEmail($value)
    {
        return $this->set('UserEmail', $value);
    }
}


/**
 * Execution object for the GetAllContacts Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllContacts Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAllContacts execution.
     * @param Google_Contacts_GetAllContacts $choreo The choreography object for this execution.
     * @param Google_Contacts_GetAllContacts_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllContacts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllContacts_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetAllContacts $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllContacts execution.
     *
     * @return Google_Contacts_GetAllContacts_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAllContacts execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetAllContacts_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetAllContacts_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAllContacts Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllContacts_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAllContacts Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetAllContacts_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this GetAllContacts execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetAllContacts execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Cancels an order that's been submitted to a Google Checkout merchant account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder extends Temboo_Choreography
{
    /**
     * Cancels an order that's been submitted to a Google Checkout merchant account.
     *
     * @param Temboo_Session $session The session that owns this CancelOrder Choreo.
     * @return Google_Checkout_CancelOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Checkout/CancelOrder/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CancelOrder Choreo.
     *
     * @param Google_Checkout_CancelOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CancelOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CancelOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Checkout_CancelOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CancelOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CancelOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Checkout_CancelOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CancelOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CancelOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Checkout_CancelOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CancelOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Comment input for this CancelOrder Choreo.
     *
     * @param string $value (required, string) The comment for the order cancellation
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setComment($value)
    {
        return $this->set('Comment', $value);
    }

    /**
     * Set the value for the Endpoint input for this CancelOrder Choreo.
     *
     * @param string $value (optional, string) Set to checkout.google.com when running in production. Defaults to sandbox.google.com for sandbox testing.
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MerchantId input for this CancelOrder Choreo.
     *
     * @param int $value (required, integer) The Merchant Id provided by Google
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setMerchantId($value)
    {
        return $this->set('MerchantId', $value);
    }

    /**
     * Set the value for the MerchantKey input for this CancelOrder Choreo.
     *
     * @param string $value (required, string) The Merchant Key provided by Google
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setMerchantKey($value)
    {
        return $this->set('MerchantKey', $value);
    }

    /**
     * Set the value for the OrderNumber input for this CancelOrder Choreo.
     *
     * @param int $value (required, integer) The unique identifier for the order (There is an order number column in your Google Checkout Inbox).
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setOrderNumber($value)
    {
        return $this->set('OrderNumber', $value);
    }

    /**
     * Set the value for the Reason input for this CancelOrder Choreo.
     *
     * @param string $value (required, string) The reason for the cancellation
     * @return Google_Checkout_CancelOrder_Inputs For method chaining.
     */
    public function setReason($value)
    {
        return $this->set('Reason', $value);
    }
}


/**
 * Execution object for the CancelOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CancelOrder Choreo.
     *
     * @param Temboo_Session $session The session that owns this CancelOrder execution.
     * @param Google_Checkout_CancelOrder $choreo The choreography object for this execution.
     * @param Google_Checkout_CancelOrder_Inputs|array $inputs (optional) Inputs as Google_Checkout_CancelOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Checkout_CancelOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Checkout_CancelOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CancelOrder execution.
     *
     * @return Google_Checkout_CancelOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CancelOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Checkout_CancelOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Checkout_CancelOrder_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CancelOrder Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Checkout_CancelOrder_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CancelOrder Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Checkout_CancelOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CancelOrder execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Searches all public activities.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search extends Temboo_Choreography
{
    /**
     * Searches all public activities.
     *
     * @param Temboo_Session $session The session that owns this Search Choreo.
     * @return Google_Plus_Activities_Search New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Activities/Search/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Search Choreo.
     *
     * @param Google_Plus_Activities_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Search_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Activities_Search_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Search Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Search_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Activities_Search_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Search Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Search Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Activities_Search_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Search input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Search Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Search Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Search Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Search Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Search Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the Language input for this Search Choreo.
     *
     * @param string $value (optional, string) Indicates the preferred language to search with. Defaults to "en-US".
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the MaxResults input for this Search Choreo.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the OrderBy input for this Search Choreo.
     *
     * @param string $value (optional, string) Specifies how to order search results. Valid values are: "best" (Sort activities by relevance to the user) or "recent" (Sort activities by published date). Default is "recent".
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setOrderBy($value)
    {
        return $this->set('OrderBy', $value);
    }

    /**
     * Set the value for the PageToken input for this Search Choreo.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Search Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the Query input for this Search Choreo.
     *
     * @param string $value (required, string) Full-text search query string.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Search Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Search Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Activities_Search_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Search Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Search Choreo.
     *
     * @param Temboo_Session $session The session that owns this Search execution.
     * @param Google_Plus_Activities_Search $choreo The choreography object for this execution.
     * @param Google_Plus_Activities_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_Activities_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Activities_Search_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Activities_Search $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Search execution.
     *
     * @return Google_Plus_Activities_Search_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Search execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Activities_Search_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Activities_Search_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Search Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Activities_Search_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Search Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Activities_Search_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Search execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Search execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Search for places based on latitude/longitude coordinates, keywords, and distance.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch extends Temboo_Choreography
{
    /**
     * Search for places based on latitude/longitude coordinates, keywords, and distance.
     *
     * @param Temboo_Session $session The session that owns this PlaceSearch Choreo.
     * @return Google_Places_PlaceSearch New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/PlaceSearch/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PlaceSearch Choreo.
     *
     * @param Google_Places_PlaceSearch_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceSearch_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceSearch_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_PlaceSearch_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PlaceSearch Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceSearch_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_PlaceSearch_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PlaceSearch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PlaceSearch Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceSearch_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PlaceSearch input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this PlaceSearch Choreo.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the Keyword input for this PlaceSearch Choreo.
     *
     * @param string $value (optional, string) Enter a keyword (term, address, type, customer review, etc.) to be matched against all results retrieved for this Place.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setKeyword($value)
    {
        return $this->set('Keyword', $value);
    }

    /**
     * Set the value for the Language input for this PlaceSearch Choreo.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Latitude input for this PlaceSearch Choreo.
     *
     * @param string $value (required, string) Specify a latitude point around which Places results will be retrieved.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setLatitude($value)
    {
        return $this->set('Latitude', $value);
    }

    /**
     * Set the value for the Longitude input for this PlaceSearch Choreo.
     *
     * @param string $value (required, string) Specify a longitude point around which Places results will be retrieved.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the Name input for this PlaceSearch Choreo.
     *
     * @param string $value (optional, string) Enter a name to be matched when results are retrieved for this specified Place.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }

    /**
     * Set the value for the Radius input for this PlaceSearch Choreo.
     *
     * @param int $value (optional, integer) Specify the radius in meters, for which Places results will be returned. Maximum radius is limited to 50,000 meters. If rankby=distance, then radius must not be specified.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setRadius($value)
    {
        return $this->set('Radius', $value);
    }

    /**
     * Set the value for the RankBy input for this PlaceSearch Choreo.
     *
     * @param string $value (optional, string) Specify how results are listed. Values include: prominence (default); distance - sorts results by distance from specified location. Radius must not be used, and Keyword, Name, or Types are required).
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setRankBy($value)
    {
        return $this->set('RankBy', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this PlaceSearch Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this PlaceSearch Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Types input for this PlaceSearch Choreo.
     *
     * @param string $value (optional, string) Filter results by types, such as: bar, dentist.  Multiple types must be separated by the pipe ("|") symbol: bar|dentist||airport.
     * @return Google_Places_PlaceSearch_Inputs For method chaining.
     */
    public function setTypes($value)
    {
        return $this->set('Types', $value);
    }
}


/**
 * Execution object for the PlaceSearch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PlaceSearch Choreo.
     *
     * @param Temboo_Session $session The session that owns this PlaceSearch execution.
     * @param Google_Places_PlaceSearch $choreo The choreography object for this execution.
     * @param Google_Places_PlaceSearch_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceSearch_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceSearch_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_PlaceSearch $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PlaceSearch execution.
     *
     * @return Google_Places_PlaceSearch_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PlaceSearch execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_PlaceSearch_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_PlaceSearch_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PlaceSearch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceSearch_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PlaceSearch Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_PlaceSearch_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PlaceSearch execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes a revision.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Delete extends Temboo_Choreography
{
    /**
     * Removes a revision.
     *
     * @param Temboo_Session $session The session that owns this Delete Choreo.
     * @return Google_Drive_Revisions_Delete New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Revisions/Delete/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Delete Choreo.
     *
     * @param Google_Drive_Revisions_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_Delete_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Revisions_Delete_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_Delete_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Revisions_Delete_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Delete_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Revisions_Delete_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Delete input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Delete Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the FileID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Delete Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the RevisionID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the revision.
     * @return Google_Drive_Revisions_Delete_Inputs For method chaining.
     */
    public function setRevisionID($value)
    {
        return $this->set('RevisionID', $value);
    }
}


/**
 * Execution object for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Delete_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Delete Choreo.
     *
     * @param Temboo_Session $session The session that owns this Delete execution.
     * @param Google_Drive_Revisions_Delete $choreo The choreography object for this execution.
     * @param Google_Drive_Revisions_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Revisions_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Revisions_Delete_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Revisions_Delete $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Delete execution.
     *
     * @return Google_Drive_Revisions_Delete_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Delete execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Revisions_Delete_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Revisions_Delete_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Revisions_Delete_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Delete Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Revisions_Delete_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Delete execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Delete execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Delete a secondary calendar.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar extends Temboo_Choreography
{
    /**
     * Delete a secondary calendar.
     *
     * @param Temboo_Session $session The session that owns this DeleteCalendar Choreo.
     * @return Google_Calendar_DeleteCalendar New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/DeleteCalendar/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteCalendar Choreo.
     *
     * @param Google_Calendar_DeleteCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteCalendar_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_DeleteCalendar_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteCalendar_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_DeleteCalendar_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteCalendar Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_DeleteCalendar_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteCalendar input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteCalendar Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this DeleteCalendar Choreo.
     *
     * @param string $value (required, string) The ID for the calendar to delete.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteCalendar Choreo.
     *
     * @param string $value (required, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteCalendar Choreo.
     *
     * @param string $value (required, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteCalendar Choreo.
     *
     * @param string $value (required, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_DeleteCalendar_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteCalendar Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteCalendar execution.
     * @param Google_Calendar_DeleteCalendar $choreo The choreography object for this execution.
     * @param Google_Calendar_DeleteCalendar_Inputs|array $inputs (optional) Inputs as Google_Calendar_DeleteCalendar_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_DeleteCalendar_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_DeleteCalendar $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteCalendar execution.
     *
     * @return Google_Calendar_DeleteCalendar_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteCalendar execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_DeleteCalendar_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_DeleteCalendar_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteCalendar Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_DeleteCalendar_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteCalendar Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_DeleteCalendar_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this DeleteCalendar execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteCalendar execution.
     *
     * @return string No content is returned for delete calendar operations.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Searches all public profiles.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search extends Temboo_Choreography
{
    /**
     * Searches all public profiles.
     *
     * @param Temboo_Session $session The session that owns this Search Choreo.
     * @return Google_Plus_People_Search New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/People/Search/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Search Choreo.
     *
     * @param Google_Plus_People_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Search_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_People_Search_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Search Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Search_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_People_Search_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Search Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Search Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_People_Search_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Search input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Search Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the Callback input for this Search Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this Search Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Search Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Search Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the Language input for this Search Choreo.
     *
     * @param string $value (optional, string) Indicates the preferred language to search with. Defaults to "en-US".
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the MaxResults input for this Search Choreo.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this Search Choreo.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this Search Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the Query input for this Search Choreo.
     *
     * @param string $value (required, string) A query string for full text search of public text in all profiles.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Search Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserIP input for this Search Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_People_Search_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the Search Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Search Choreo.
     *
     * @param Temboo_Session $session The session that owns this Search execution.
     * @param Google_Plus_People_Search $choreo The choreography object for this execution.
     * @param Google_Plus_People_Search_Inputs|array $inputs (optional) Inputs as Google_Plus_People_Search_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_People_Search_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_People_Search $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Search execution.
     *
     * @return Google_Plus_People_Search_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Search execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_People_Search_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_People_Search_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Search Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_People_Search_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Search Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_People_Search_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this Search execution.
     *
     * @return string (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Search execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Search execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves metrics such as visits, page views, bounces within a specified time frame.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics extends Temboo_Choreography
{
    /**
     * Retrieves metrics such as visits, page views, bounces within a specified time frame.
     *
     * @param Temboo_Session $session The session that owns this GetMetrics Choreo.
     * @return Google_Analytics_GetMetrics New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Analytics/GetMetrics/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetMetrics Choreo.
     *
     * @param Google_Analytics_GetMetrics_Inputs|array $inputs (optional) Inputs as Google_Analytics_GetMetrics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_GetMetrics_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Analytics_GetMetrics_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetMetrics Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_GetMetrics_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Analytics_GetMetrics_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetMetrics Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetMetrics Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Analytics_GetMetrics_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetMetrics input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Dimensions input for this GetMetrics Choreo.
     *
     * @param string $value (optional, string) Defines the primary data keys for your Analytics report. Use dimensions to segment your web property metrics (e.g.  ga:browser or ga:city).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setDimensions($value)
    {
        return $this->set('Dimensions', $value);
    }

    /**
     * Set the value for the EndDate input for this GetMetrics Choreo.
     *
     * @param string $value (required, date) The end date for the range of data you want to retrieve. Epoch timestamp in milliseconds or formatted as yyyy-MM-dd.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the Filters input for this GetMetrics Choreo.
     *
     * @param string $value (optional, string) Restricts the data returned by a dimension or metric you want to filter by using an expression (i.e. ga:timeOnPage==10).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setFilters($value)
    {
        return $this->set('Filters', $value);
    }

    /**
     * Set the value for the MaxResults input for this GetMetrics Choreo.
     *
     * @param int $value (optional, integer) The max results to be returned in the feed. Defaults to 50.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the Metrics input for this GetMetrics Choreo.
     *
     * @param string $value (optional, string) This is a comma separated list of metrics you want to retrieve. Defaults to: ga:visits,ga:bounces,ga:pageviews.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setMetrics($value)
    {
        return $this->set('Metrics', $value);
    }

    /**
     * Set the value for the Password input for this GetMetrics Choreo.
     *
     * @param string $value (required, password) The password for your Google analytics account.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the ProfileId input for this GetMetrics Choreo.
     *
     * @param int $value (required, integer) The Google Analytics profile ID to access (this can be found under Profile Settings).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setProfileId($value)
    {
        return $this->set('ProfileId', $value);
    }

    /**
     * Set the value for the Segment input for this GetMetrics Choreo.
     *
     * @param string $value (optional, string) Used to segment your data by dimensions and/or metrics. You can use expressions for segments just as you would for the Filters parameter.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setSegment($value)
    {
        return $this->set('Segment', $value);
    }

    /**
     * Set the value for the Sort input for this GetMetrics Choreo.
     *
     * @param string $value (optional, string) Indicates the sorting order and direction for the returned data. Values can be separated by commas (i.e. ga:browser,ga:pageviews).
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setSort($value)
    {
        return $this->set('Sort', $value);
    }

    /**
     * Set the value for the StartDate input for this GetMetrics Choreo.
     *
     * @param string $value (required, date) The start date for the range of data to retrieve. Use epoch timestamp in milliseconds or formatted as yyyy-MM-dd.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }

    /**
     * Set the value for the StartIndex input for this GetMetrics Choreo.
     *
     * @param int $value (optional, integer) The starting entry for the feed. Defaults to 1.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setStartIndex($value)
    {
        return $this->set('StartIndex', $value);
    }

    /**
     * Set the value for the Username input for this GetMetrics Choreo.
     *
     * @param string $value (required, string) The username for your Google analytics account.
     * @return Google_Analytics_GetMetrics_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetMetrics Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetMetrics Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetMetrics execution.
     * @param Google_Analytics_GetMetrics $choreo The choreography object for this execution.
     * @param Google_Analytics_GetMetrics_Inputs|array $inputs (optional) Inputs as Google_Analytics_GetMetrics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Analytics_GetMetrics_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Analytics_GetMetrics $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetMetrics execution.
     *
     * @return Google_Analytics_GetMetrics_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetMetrics execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Analytics_GetMetrics_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Analytics_GetMetrics_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetMetrics Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Analytics_GetMetrics_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetMetrics Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Analytics_GetMetrics_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Bounces" output from this GetMetrics execution.
     *
     * @return int (integer) The bounces metrics parsed from the Google Analytics response
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getBounces()
    {
        return $this->get('Bounces');
    }
    /**
     * Retrieve the value for the "PageViews" output from this GetMetrics execution.
     *
     * @return int (integer) The page views parsed from the Google Analytics response
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getPageViews()
    {
        return $this->get('PageViews');
    }
    /**
     * Retrieve the value for the "Response" output from this GetMetrics execution.
     *
     * @return string (xml) The full response from Google Analytics.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "Visits" output from this GetMetrics execution.
     *
     * @return int (integer) The visits metrics parsed from the Google Analytics response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getVisits()
    {
        return $this->get('Visits');
    }
}

/**
 * Delete a new Place from Google Places.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace extends Temboo_Choreography
{
    /**
     * Delete a new Place from Google Places.
     *
     * @param Temboo_Session $session The session that owns this DeletePlace Choreo.
     * @return Google_Places_DeletePlace New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/DeletePlace/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeletePlace Choreo.
     *
     * @param Google_Places_DeletePlace_Inputs|array $inputs (optional) Inputs as Google_Places_DeletePlace_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_DeletePlace_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_DeletePlace_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeletePlace Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_DeletePlace_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_DeletePlace_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeletePlace Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeletePlace Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_DeletePlace_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeletePlace input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this DeletePlace Choreo.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the PlaceReference input for this DeletePlace Choreo.
     *
     * @param string $value (required, string) The unique place reference. This is returned in the PlaceSearch Choreo.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setPlaceReference($value)
    {
        return $this->set('PlaceReference', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeletePlace Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this DeletePlace Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_DeletePlace_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the DeletePlace Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeletePlace Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeletePlace execution.
     * @param Google_Places_DeletePlace $choreo The choreography object for this execution.
     * @param Google_Places_DeletePlace_Inputs|array $inputs (optional) Inputs as Google_Places_DeletePlace_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_DeletePlace_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_DeletePlace $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeletePlace execution.
     *
     * @return Google_Places_DeletePlace_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeletePlace execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_DeletePlace_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_DeletePlace_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeletePlace Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_DeletePlace_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeletePlace Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_DeletePlace_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeletePlace execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieve detailed information about places retrieved by the PlaceSearch Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails extends Temboo_Choreography
{
    /**
     * Retrieve detailed information about places retrieved by the PlaceSearch Choreo.
     *
     * @param Temboo_Session $session The session that owns this PlaceDetails Choreo.
     * @return Google_Places_PlaceDetails New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/PlaceDetails/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PlaceDetails Choreo.
     *
     * @param Google_Places_PlaceDetails_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceDetails_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceDetails_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_PlaceDetails_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PlaceDetails Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceDetails_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_PlaceDetails_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PlaceDetails Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PlaceDetails Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_PlaceDetails_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PlaceDetails input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Key input for this PlaceDetails Choreo.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the Language input for this PlaceDetails Choreo.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Reference input for this PlaceDetails Choreo.
     *
     * @param string $value (required, string) Enter a textual identifier that uniquely identidies a place obtained from the PlaceSearch Choreo.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setReference($value)
    {
        return $this->set('Reference', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this PlaceDetails Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this PlaceDetails Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_PlaceDetails_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the PlaceDetails Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PlaceDetails Choreo.
     *
     * @param Temboo_Session $session The session that owns this PlaceDetails execution.
     * @param Google_Places_PlaceDetails $choreo The choreography object for this execution.
     * @param Google_Places_PlaceDetails_Inputs|array $inputs (optional) Inputs as Google_Places_PlaceDetails_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_PlaceDetails_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_PlaceDetails $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PlaceDetails execution.
     *
     * @return Google_Places_PlaceDetails_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PlaceDetails execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_PlaceDetails_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_PlaceDetails_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PlaceDetails Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_PlaceDetails_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PlaceDetails Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_PlaceDetails_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PlaceDetails execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a Google spreadsheet from a CSV file.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet extends Temboo_Choreography
{
    /**
     * Creates a Google spreadsheet from a CSV file.
     *
     * @param Temboo_Session $session The session that owns this CreateSpreadsheet Choreo.
     * @return Google_Spreadsheets_CreateSpreadsheet New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/CreateSpreadsheet/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateSpreadsheet Choreo.
     *
     * @param Google_Spreadsheets_CreateSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CreateSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CreateSpreadsheet_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_CreateSpreadsheet_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSpreadsheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_CreateSpreadsheet_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSpreadsheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateSpreadsheet Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSpreadsheet input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the UploadFile input for this CreateSpreadsheet Choreo.
     *
     * @param string $value (conditional, multiline) The data to be written to the Google spreadsheet. Should be in CSV format. This is required unless using the VaultCSVFile alias (an advanced option used when running Choreos in the Temboo Designer).
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setUploadFile($value)
    {
        return $this->set('UploadFile', $value);
    }

    /**
     * Set the value for the Password input for this CreateSpreadsheet Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this CreateSpreadsheet Choreo.
     *
     * @param string $value (required, string) The name of the new document.
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this CreateSpreadsheet Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_CreateSpreadsheet_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

}


/**
 * Execution object for the CreateSpreadsheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSpreadsheet Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateSpreadsheet execution.
     * @param Google_Spreadsheets_CreateSpreadsheet $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_CreateSpreadsheet_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_CreateSpreadsheet_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_CreateSpreadsheet_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_CreateSpreadsheet $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSpreadsheet execution.
     *
     * @return Google_Spreadsheets_CreateSpreadsheet_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateSpreadsheet execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_CreateSpreadsheet_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateSpreadsheet Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_CreateSpreadsheet_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateSpreadsheet Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_CreateSpreadsheet_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateSpreadsheet execution.
     *
     * @return string (xml) Response from Google upload
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates an existing permission.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Update extends Temboo_Choreography
{
    /**
     * Updates an existing permission.
     *
     * @param Temboo_Session $session The session that owns this Update Choreo.
     * @return Google_Drive_Permissions_Update New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Permissions/Update/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Update Choreo.
     *
     * @param Google_Drive_Permissions_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Update_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Permissions_Update_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Update_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Permissions_Update_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Update_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Update Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Update_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Update input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the RequestBody input for this Update Choreo.
     *
     * @param string $value (required, json) A JSON representation of fields in a permissions resource. The JSON string can contain keys for role and additionalRoles. See documentation for formatting examples.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setRequestBody($value)
    {
        return $this->set('RequestBody', $value);
    }

    /**
     * Set the value for the AccessToken input for this Update Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Update Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Update Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the PermissionID input for this Update Choreo.
     *
     * @param string $value (required, string) The ID for the permission.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setPermissionID($value)
    {
        return $this->set('PermissionID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Update Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Update_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Update_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Update Choreo.
     *
     * @param Temboo_Session $session The session that owns this Update execution.
     * @param Google_Drive_Permissions_Update $choreo The choreography object for this execution.
     * @param Google_Drive_Permissions_Update_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Update_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Update_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Permissions_Update $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Update execution.
     *
     * @return Google_Drive_Permissions_Update_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Update execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Permissions_Update_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Permissions_Update_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Update Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Update_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Update Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Permissions_Update_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Update execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Update execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive permission resource
	*/

	public function getPermissions() {
		return new Google_Drive_Permission_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieve data for all calendars in an account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent extends Temboo_Choreography
{
    /**
     * Retrieve data for all calendars in an account.
     *
     * @param Temboo_Session $session The session that owns this GetEvent Choreo.
     * @return Google_Calendar_GetEvent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/GetEvent/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetEvent Choreo.
     *
     * @param Google_Calendar_GetEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetEvent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_GetEvent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetEvent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetEvent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_GetEvent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetEvent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_GetEvent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetEvent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetEvent Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarID input for this GetEvent Choreo.
     *
     * @param string $value (required, string) The unique ID for the calendar with the events to retrieve.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setCalendarID($value)
    {
        return $this->set('CalendarID', $value);
    }

    /**
     * Set the value for the ClientID input for this GetEvent Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetEvent Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the EventID input for this GetEvent Choreo.
     *
     * @param string $value (required, string) The unique ID for the event to retrieve.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setEventID($value)
    {
        return $this->set('EventID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetEvent Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetEvent Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Calendar_GetEvent_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetEvent Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetEvent execution.
     * @param Google_Calendar_GetEvent $choreo The choreography object for this execution.
     * @param Google_Calendar_GetEvent_Inputs|array $inputs (optional) Inputs as Google_Calendar_GetEvent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_GetEvent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_GetEvent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetEvent execution.
     *
     * @return Google_Calendar_GetEvent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetEvent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_GetEvent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_GetEvent_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetEvent Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_GetEvent_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetEvent Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_GetEvent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this GetEvent execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetEvent execution.
     *
     * @return string The response from Google. Corresponds to the ResponseFormat input. Defaults to JSON.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Calendar Event resource.
	*/

	public function getEvent() {
		return new Google_Calendar_Event_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Retrieves information about a calendar including the id with a given calendar name.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName extends Temboo_Choreography
{
    /**
     * Retrieves information about a calendar including the id with a given calendar name.
     *
     * @param Temboo_Session $session The session that owns this SearchCalendarsByName Choreo.
     * @return Google_Calendar_SearchCalendarsByName New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Calendar/SearchCalendarsByName/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SearchCalendarsByName Choreo.
     *
     * @param Google_Calendar_SearchCalendarsByName_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchCalendarsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchCalendarsByName_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Calendar_SearchCalendarsByName_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchCalendarsByName Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchCalendarsByName_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Calendar_SearchCalendarsByName_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchCalendarsByName Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SearchCalendarsByName Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Calendar_SearchCalendarsByName_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchCalendarsByName input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this SearchCalendarsByName Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the CalendarName input for this SearchCalendarsByName Choreo.
     *
     * @param string $value (required, string) The name of the calendar that you want to retrieve information for. Note that if there are multiple calendars with the same name, only the first one will be returned.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setCalendarName($value)
    {
        return $this->set('CalendarName', $value);
    }

    /**
     * Set the value for the ClientID input for this SearchCalendarsByName Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this SearchCalendarsByName Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Count input for this SearchCalendarsByName Choreo.
     *
     * @param int $value (optional, integer) The maximum number of calendars to search by name. The default is 15.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setCount($value)
    {
        return $this->set('Count', $value);
    }

    /**
     * Set the value for the RefreshToken input for this SearchCalendarsByName Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Calendar_SearchCalendarsByName_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the SearchCalendarsByName Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchCalendarsByName Choreo.
     *
     * @param Temboo_Session $session The session that owns this SearchCalendarsByName execution.
     * @param Google_Calendar_SearchCalendarsByName $choreo The choreography object for this execution.
     * @param Google_Calendar_SearchCalendarsByName_Inputs|array $inputs (optional) Inputs as Google_Calendar_SearchCalendarsByName_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Calendar_SearchCalendarsByName_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Calendar_SearchCalendarsByName $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchCalendarsByName execution.
     *
     * @return Google_Calendar_SearchCalendarsByName_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SearchCalendarsByName execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Calendar_SearchCalendarsByName_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Calendar_SearchCalendarsByName_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SearchCalendarsByName Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Calendar_SearchCalendarsByName_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SearchCalendarsByName Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Calendar_SearchCalendarsByName_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "CalendarDescription" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The calendar description parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarDescription()
    {
        return $this->get('CalendarDescription');
    }
    /**
     * Retrieve the value for the "CalendarId" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The calendar id parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarId()
    {
        return $this->get('CalendarId');
    }
    /**
     * Retrieve the value for the "CalendarSummary" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The summary or calendar name parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarSummary()
    {
        return $this->get('CalendarSummary');
    }
    /**
     * Retrieve the value for the "CalendarTimezone" output from this SearchCalendarsByName execution.
     *
     * @return string (string) The calendar timezone parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCalendarTimezone()
    {
        return $this->get('CalendarTimezone');
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this SearchCalendarsByName execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
}

/**
 * Retrieve data for all groups in an account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups extends Temboo_Choreography
{
    /**
     * Retrieve data for all groups in an account.
     *
     * @param Temboo_Session $session The session that owns this GetAllGroups Choreo.
     * @return Google_Contacts_GetAllGroups New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Contacts/GetAllGroups/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAllGroups Choreo.
     *
     * @param Google_Contacts_GetAllGroups_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllGroups_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Contacts_GetAllGroups_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAllGroups Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllGroups_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Contacts_GetAllGroups_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAllGroups Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAllGroups Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Contacts_GetAllGroups_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAllGroups input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this GetAllGroups Choreo.
     *
     * @param string $value (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this GetAllGroups Choreo.
     *
     * @param string $value (required, string) The OAuth client ID provided by Google when you register your application.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this GetAllGroups Choreo.
     *
     * @param string $value (required, string) The OAuth client secret provided by Google when you registered your application.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this GetAllGroups Choreo.
     *
     * @param string $value (required, string) The refresh token retrieved in the last step of the OAuth process. This is used when an access token is expired or not provided.
     * @return Google_Contacts_GetAllGroups_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the GetAllGroups Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAllGroups Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAllGroups execution.
     * @param Google_Contacts_GetAllGroups $choreo The choreography object for this execution.
     * @param Google_Contacts_GetAllGroups_Inputs|array $inputs (optional) Inputs as Google_Contacts_GetAllGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Contacts_GetAllGroups_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Contacts_GetAllGroups $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAllGroups execution.
     *
     * @return Google_Contacts_GetAllGroups_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAllGroups execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Contacts_GetAllGroups_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Contacts_GetAllGroups_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAllGroups Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Contacts_GetAllGroups_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAllGroups Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Contacts_GetAllGroups_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AccessToken" output from this GetAllGroups execution.
     *
     * @return string (optional, string) The access token retrieved in the last step of the OAuth process. Access tokens that are expired will be refreshed and returned in the Choreo output.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAccessToken()
    {
        return $this->get('AccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this GetAllGroups execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Rename a document or file with the new title you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile extends Temboo_Choreography
{
    /**
     * Rename a document or file with the new title you specify.
     *
     * @param Temboo_Session $session The session that owns this RenameDocumentOrFile Choreo.
     * @return Google_Documents_RenameDocumentOrFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/RenameDocumentOrFile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RenameDocumentOrFile Choreo.
     *
     * @param Google_Documents_RenameDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_RenameDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_RenameDocumentOrFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_RenameDocumentOrFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RenameDocumentOrFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_RenameDocumentOrFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_RenameDocumentOrFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RenameDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RenameDocumentOrFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_RenameDocumentOrFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RenameDocumentOrFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the NewTitle input for this RenameDocumentOrFile Choreo.
     *
     * @param string $value (required, string) The new title for the document. It will appear exactly as you type it, so be sure to use the proper capitalization.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setNewTitle($value)
    {
        return $this->set('NewTitle', $value);
    }

    /**
     * Set the value for the Password input for this RenameDocumentOrFile Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this RenameDocumentOrFile Choreo.
     *
     * @param string $value (required, string) The title of the document to rename.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this RenameDocumentOrFile Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_RenameDocumentOrFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the RenameDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RenameDocumentOrFile Choreo.
     *
     * @param Temboo_Session $session The session that owns this RenameDocumentOrFile execution.
     * @param Google_Documents_RenameDocumentOrFile $choreo The choreography object for this execution.
     * @param Google_Documents_RenameDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_RenameDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_RenameDocumentOrFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_RenameDocumentOrFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RenameDocumentOrFile execution.
     *
     * @return Google_Documents_RenameDocumentOrFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RenameDocumentOrFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_RenameDocumentOrFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_RenameDocumentOrFile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RenameDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_RenameDocumentOrFile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RenameDocumentOrFile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_RenameDocumentOrFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "EditLink" output from this RenameDocumentOrFile execution.
     *
     * @return string (string) The edit link URL for the document to rename, parsed from the Google response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getEditLink()
    {
        return $this->get('EditLink');
    }
    /**
     * Retrieve the value for the "Response" output from this RenameDocumentOrFile execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Gets a specific parent reference.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Get extends Temboo_Choreography
{
    /**
     * Gets a specific parent reference.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Parents_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Parents/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Parents_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Parents_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Parents_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the FileID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the ParentID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the parent.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function setParentID($value)
    {
        return $this->set('ParentID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Parents_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Parents_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Parents_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Parents_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Parents_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Parents_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Parents_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive parent resource
	*/

	public function getParent() {
		return new Google_Drive_Parent_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Lists the changes for a user.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_List extends Temboo_Choreography
{
    /**
     * Lists the changes for a user.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Changes_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Changes/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Changes_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Changes_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Changes_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Changes_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Changes_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Changes_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Changes_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the IncludeDeleted input for this List Choreo.
     *
     * @param bool $value (optional, boolean) Whether to include deleted items. (Default: true).
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setIncludeDeleted($value)
    {
        return $this->set('IncludeDeleted', $value);
    }

    /**
     * Set the value for the IncludeSubscribed input for this List Choreo.
     *
     * @param bool $value (optional, boolean) Whether to include shared files and public files the user opened. If false, the list includes owned files plus any shared or public files the user explictly added to a folder in Drive. (Default: true)
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setIncludeSubscribed($value)
    {
        return $this->set('IncludeSubscribed', $value);
    }

    /**
     * Set the value for the MaxResults input for this List Choreo.
     *
     * @param bool $value (optional, boolean) Maximum number of changes to return.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List Choreo.
     *
     * @param string $value (optional, string) Page token for changes.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the StartChangeID input for this List Choreo.
     *
     * @param string $value (optional, multiline) Change ID to start listing changes from.
     * @return Google_Drive_Changes_List_Inputs For method chaining.
     */
    public function setStartChangeID($value)
    {
        return $this->set('StartChangeID', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Changes_List $choreo The choreography object for this execution.
     * @param Google_Drive_Changes_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Changes_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Changes_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Changes_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Changes_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Changes_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Changes_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Changes_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get the change listing for the Google Drive account
	*/

	public function getChangeList() {
		return new Google_Drive_ChangeList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Deletes a reply.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Delete extends Temboo_Choreography
{
    /**
     * Deletes a reply.
     *
     * @param Temboo_Session $session The session that owns this Delete Choreo.
     * @return Google_Drive_Replies_Delete New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Replies/Delete/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Delete Choreo.
     *
     * @param Google_Drive_Replies_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Delete_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Replies_Delete_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Delete_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Replies_Delete_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Delete_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Delete Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Replies_Delete_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Delete input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Delete Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Delete Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the CommentID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the comment.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setCommentID($value)
    {
        return $this->set('CommentID', $value);
    }

    /**
     * Set the value for the FileID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Delete Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ReplyID input for this Delete Choreo.
     *
     * @param string $value (required, string) The ID of the reply.
     * @return Google_Drive_Replies_Delete_Inputs For method chaining.
     */
    public function setReplyID($value)
    {
        return $this->set('ReplyID', $value);
    }
}


/**
 * Execution object for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Delete_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Delete Choreo.
     *
     * @param Temboo_Session $session The session that owns this Delete execution.
     * @param Google_Drive_Replies_Delete $choreo The choreography object for this execution.
     * @param Google_Drive_Replies_Delete_Inputs|array $inputs (optional) Inputs as Google_Drive_Replies_Delete_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Replies_Delete_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Replies_Delete $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Delete execution.
     *
     * @return Google_Drive_Replies_Delete_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Delete execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Replies_Delete_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Replies_Delete_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Delete Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Replies_Delete_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Delete Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Replies_Delete_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Delete execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Delete execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list-based feed containing data in your Google spreadsheet that meets a specified criteria.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery extends Temboo_Choreography
{
    /**
     * Retrieves a list-based feed containing data in your Google spreadsheet that meets a specified criteria.
     *
     * @param Temboo_Session $session The session that owns this StructuredQuery Choreo.
     * @return Google_Spreadsheets_StructuredQuery New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/StructuredQuery/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this StructuredQuery Choreo.
     *
     * @param Google_Spreadsheets_StructuredQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_StructuredQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_StructuredQuery_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_StructuredQuery_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this StructuredQuery Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_StructuredQuery_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_StructuredQuery_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the StructuredQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the StructuredQuery Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_StructuredQuery_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this StructuredQuery input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this StructuredQuery Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Query input for this StructuredQuery Choreo.
     *
     * @param string $value (required, string) A valid structured query (i.e. id>4)
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the SpreadsheetKey input for this StructuredQuery Choreo.
     *
     * @param string $value (required, string) The unique for key for the spreadsheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setSpreadsheetKey($value)
    {
        return $this->set('SpreadsheetKey', $value);
    }

    /**
     * Set the value for the Username input for this StructuredQuery Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

    /**
     * Set the value for the WorksheetId input for this StructuredQuery Choreo.
     *
     * @param string $value (required, string) The unique id of the worksheet associated with the feed you want to retrieve
     * @return Google_Spreadsheets_StructuredQuery_Inputs For method chaining.
     */
    public function setWorksheetId($value)
    {
        return $this->set('WorksheetId', $value);
    }
}


/**
 * Execution object for the StructuredQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the StructuredQuery Choreo.
     *
     * @param Temboo_Session $session The session that owns this StructuredQuery execution.
     * @param Google_Spreadsheets_StructuredQuery $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_StructuredQuery_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_StructuredQuery_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_StructuredQuery_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_StructuredQuery $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this StructuredQuery execution.
     *
     * @return Google_Spreadsheets_StructuredQuery_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this StructuredQuery execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_StructuredQuery_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_StructuredQuery_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the StructuredQuery Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_StructuredQuery_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the StructuredQuery Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_StructuredQuery_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this StructuredQuery execution.
     *
     * @return string (xml) The response from Google
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Request an authorization token for Google Documents.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication extends Temboo_Choreography
{
    /**
     * Request an authorization token for Google Documents.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication Choreo.
     * @return Google_Spreadsheets_ClientLoginAuthentication New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Spreadsheets/ClientLoginAuthentication/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ClientLoginAuthentication Choreo.
     *
     * @param Google_Spreadsheets_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Spreadsheets_ClientLoginAuthentication_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ClientLoginAuthentication Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Spreadsheets_ClientLoginAuthentication_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ClientLoginAuthentication Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ClientLoginAuthentication input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this ClientLoginAuthentication Choreo.
     *
     * @param string $value (required, password) Your Google password
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Service input for this ClientLoginAuthentication Choreo.
     *
     * @param string $value (required, string) The service that you are requesting an authorization token for. Defaults to 'wise' for Spreadsheets API.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setService($value)
    {
        return $this->set('Service', $value);
    }

    /**
     * Set the value for the Username input for this ClientLoginAuthentication Choreo.
     *
     * @param string $value (required, string) Your Google email address
     * @return Google_Spreadsheets_ClientLoginAuthentication_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ClientLoginAuthentication Choreo.
     *
     * @param Temboo_Session $session The session that owns this ClientLoginAuthentication execution.
     * @param Google_Spreadsheets_ClientLoginAuthentication $choreo The choreography object for this execution.
     * @param Google_Spreadsheets_ClientLoginAuthentication_Inputs|array $inputs (optional) Inputs as Google_Spreadsheets_ClientLoginAuthentication_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Spreadsheets_ClientLoginAuthentication $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ClientLoginAuthentication execution.
     *
     * @return Google_Spreadsheets_ClientLoginAuthentication_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ClientLoginAuthentication execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Spreadsheets_ClientLoginAuthentication_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ClientLoginAuthentication Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Spreadsheets_ClientLoginAuthentication_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ClientLoginAuthentication Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Spreadsheets_ClientLoginAuthentication_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "AuthorizationKey" output from this ClientLoginAuthentication execution.
     *
     * @return string (string) The auth token parsed from the Google login response
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getAuthorizationKey()
    {
        return $this->get('AuthorizationKey');
    }
}

/**
 * Retrieves information about a specified Google Documents account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo extends Temboo_Choreography
{
    /**
     * Retrieves information about a specified Google Documents account.
     *
     * @param Temboo_Session $session The session that owns this GetAccountInfo Choreo.
     * @return Google_Documents_GetAccountInfo New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/GetAccountInfo/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAccountInfo Choreo.
     *
     * @param Google_Documents_GetAccountInfo_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAccountInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAccountInfo_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_GetAccountInfo_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountInfo Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAccountInfo_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_GetAccountInfo_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountInfo Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAccountInfo Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_GetAccountInfo_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountInfo input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this GetAccountInfo Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Username input for this GetAccountInfo Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_GetAccountInfo_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the GetAccountInfo Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountInfo Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAccountInfo execution.
     * @param Google_Documents_GetAccountInfo $choreo The choreography object for this execution.
     * @param Google_Documents_GetAccountInfo_Inputs|array $inputs (optional) Inputs as Google_Documents_GetAccountInfo_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_GetAccountInfo_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_GetAccountInfo $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountInfo execution.
     *
     * @return Google_Documents_GetAccountInfo_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAccountInfo execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_GetAccountInfo_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_GetAccountInfo_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAccountInfo Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_GetAccountInfo_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAccountInfo Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_GetAccountInfo_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetAccountInfo execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists a file's parents.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_List extends Temboo_Choreography
{
    /**
     * Lists a file's parents.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Parents_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Parents/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Parents_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Parents_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Parents_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Parents_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Parents_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Parents_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Parents_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the FileID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Parents_List_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Parents_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Parents_List $choreo The choreography object for this execution.
     * @param Google_Drive_Parents_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Parents_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Parents_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Parents_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Parents_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Parents_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Parents_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Parents_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Parents_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get a list of parents for a file
	*/

	public function getParentList() {
		return new Google_Drive_ParentList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Gets a specific change.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_Get extends Temboo_Choreography
{
    /**
     * Gets a specific change.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Changes_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Changes/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Changes_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Changes_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Changes_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Changes_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Changes_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Changes_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Changes_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ChangeID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the change.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function setChangeID($value)
    {
        return $this->set('ChangeID', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Changes_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Changes_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Changes_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Changes_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Changes_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Changes_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Changes_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Changes_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Changes_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Changes_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Changes_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive change resource
	*/

	public function getChange() {
		return new Google_Drive_Change_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Gets a specific child reference.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Get extends Temboo_Choreography
{
    /**
     * Gets a specific child reference.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Children_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Children/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Children_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Children_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Children_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Children_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ChildID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the child.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setChildID($value)
    {
        return $this->set('ChildID', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FolderID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the folder.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setFolderID($value)
    {
        return $this->set('FolderID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Children_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Children_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Children_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Children_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Children_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Children_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Children_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Children_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Children_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Children_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Children_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive child resource
	*/

	public function getChild() {
		return new Google_Drive_Child_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Updates the content of an existing Google document.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UpdateFile extends Temboo_Choreography
{
    /**
     * Updates the content of an existing Google document.
     *
     * @param Temboo_Session $session The session that owns this UpdateFile Choreo.
     * @return Google_Documents_UpdateFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/UpdateFile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateFile Choreo.
     *
     * @param Google_Documents_UpdateFile_Inputs|array $inputs (optional) Inputs as Google_Documents_UpdateFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_UpdateFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_UpdateFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_UpdateFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_UpdateFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UpdateFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_UpdateFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_UpdateFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_UpdateFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FileContents input for this UpdateFile Choreo.
     *
     * @param string $value (conditional, string) The base64-encoded contents of the file you want to update.
     * @return Google_Documents_UpdateFile_Inputs For method chaining.
     */
    public function setFileContents($value)
    {
        return $this->set('FileContents', $value);
    }

    /**
     * Set the value for the ContentType input for this UpdateFile Choreo.
     *
     * @param string $value (required, string) Enter the content type for the file. Currently, the supported content types are: application/pdf, application/rtf, application/msword, application/vnd.ms-excel, text/plain, and text/csv.
     * @return Google_Documents_UpdateFile_Inputs For method chaining.
     */
    public function setContentType($value)
    {
        return $this->set('ContentType', $value);
    }

    /**
     * Set the value for the Password input for this UpdateFile Choreo.
     *
     * @param string $value (required, password) The password for your Google account.
     * @return Google_Documents_UpdateFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this UpdateFile Choreo.
     *
     * @param string $value (required, string) The title of the document that you want to update.
     * @return Google_Documents_UpdateFile_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this UpdateFile Choreo.
     *
     * @param string $value (required, string) The email address for your Google account.
     * @return Google_Documents_UpdateFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

}


/**
 * Execution object for the UpdateFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UpdateFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateFile Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateFile execution.
     * @param Google_Documents_UpdateFile $choreo The choreography object for this execution.
     * @param Google_Documents_UpdateFile_Inputs|array $inputs (optional) Inputs as Google_Documents_UpdateFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_UpdateFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_UpdateFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateFile execution.
     *
     * @return Google_Documents_UpdateFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_UpdateFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_UpdateFile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UpdateFile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateFile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_UpdateFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateFile execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists a file's comments.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_List extends Temboo_Choreography
{
    /**
     * Lists a file's comments.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Drive_Comments_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Comments/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Drive_Comments_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Comments_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Comments_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Comments_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the IncludeDeleted input for this List Choreo.
     *
     * @param bool $value (optional, boolean) If set, this will succeed when retrieving a deleted comment, and will include any deleted replies. (Default: false)
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setIncludeDeleted($value)
    {
        return $this->set('IncludeDeleted', $value);
    }

    /**
     * Set the value for the MaxResults input for this List Choreo.
     *
     * @param string $value (optional, string) The maximum number of discussions to include in the response, used for paging. Acceptable values are 0 to 100, inclusive. (Default: 20)
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List Choreo.
     *
     * @param string $value (optional, string) The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UpdatedMIn input for this List Choreo.
     *
     * @param string $value (optional, string) Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.
     * @return Google_Drive_Comments_List_Inputs For method chaining.
     */
    public function setUpdatedMIn($value)
    {
        return $this->set('UpdatedMIn', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Drive_Comments_List $choreo The choreography object for this execution.
     * @param Google_Drive_Comments_List_Inputs|array $inputs (optional) Inputs as Google_Drive_Comments_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Comments_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Comments_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Drive_Comments_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Comments_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Comments_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Comments_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Comments_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	Get comment list
	*/

	public function getCommentList() {
		return new Google_Drive_CommentList_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Add a new Place to Google Places.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports extends Temboo_Choreography
{
    /**
     * Add a new Place to Google Places.
     *
     * @param Temboo_Session $session The session that owns this UserPlaceReports Choreo.
     * @return Google_Places_UserPlaceReports New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Places/UserPlaceReports/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UserPlaceReports Choreo.
     *
     * @param Google_Places_UserPlaceReports_Inputs|array $inputs (optional) Inputs as Google_Places_UserPlaceReports_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_UserPlaceReports_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Places_UserPlaceReports_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UserPlaceReports Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_UserPlaceReports_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Places_UserPlaceReports_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UserPlaceReports Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UserPlaceReports Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Places_UserPlaceReports_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UserPlaceReports input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the POSTForm input for this UserPlaceReports Choreo.
     *
     * @param mixed $value (required, any) Enter the required POST parameter, reference in the body of this JSON form.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setPOSTForm($value)
    {
        return $this->set('POSTForm', $value);
    }

    /**
     * Set the value for the Key input for this UserPlaceReports Choreo.
     *
     * @param string $value (required, string) Enter your Google API key.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UserPlaceReports Choreo.
     *
     * @param string $value (optional, string) The format that response should be in. Can be set to xml or json. Defaults to json.
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Sensor input for this UserPlaceReports Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Places_UserPlaceReports_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }
}


/**
 * Execution object for the UserPlaceReports Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UserPlaceReports Choreo.
     *
     * @param Temboo_Session $session The session that owns this UserPlaceReports execution.
     * @param Google_Places_UserPlaceReports $choreo The choreography object for this execution.
     * @param Google_Places_UserPlaceReports_Inputs|array $inputs (optional) Inputs as Google_Places_UserPlaceReports_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Places_UserPlaceReports_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Places_UserPlaceReports $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UserPlaceReports execution.
     *
     * @return Google_Places_UserPlaceReports_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UserPlaceReports execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Places_UserPlaceReports_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Places_UserPlaceReports_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UserPlaceReports Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Places_UserPlaceReports_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UserPlaceReports Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Places_UserPlaceReports_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UserPlaceReports execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list all of the comments for a given activity.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List extends Temboo_Choreography
{
    /**
     * Retrieves a list all of the comments for a given activity.
     *
     * @param Temboo_Session $session The session that owns this List Choreo.
     * @return Google_Plus_Comments_List New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Plus/Comments/List/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this List Choreo.
     *
     * @param Google_Plus_Comments_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_List_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Plus_Comments_List_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_List_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Plus_Comments_List_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the List Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Plus_Comments_List_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this List input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this List Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ActivityID input for this List Choreo.
     *
     * @param string $value (required, string) The ID of the activity to get.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setActivityID($value)
    {
        return $this->set('ActivityID', $value);
    }

    /**
     * Set the value for the Callback input for this List Choreo.
     *
     * @param string $value (optional, string) Specifies a JavaScript function that will be passed the response data for using the API with JSONP.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setCallback($value)
    {
        return $this->set('Callback', $value);
    }

    /**
     * Set the value for the ClientID input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this List Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this List Choreo.
     *
     * @param string $value (optional, string) Used to specify fields to include in a partial response. This can be used to reduce the amount of data returned. See documentation for syntax rules.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the MaxResults input for this List Choreo.
     *
     * @param int $value (optional, integer) The maximum number of people to include in the response. Used for paging through results. Valid values are: 1 to 20. Default is 10.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the PageToken input for this List Choreo.
     *
     * @param string $value (optional, string) The "NextPageToken" returned in the Choreo output. Used to page through large result sets.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the PrettyPrint input for this List Choreo.
     *
     * @param bool $value (optional, boolean) A flag used to pretty print the json response to make it more readable. Defaults to "true".
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setPrettyPrint($value)
    {
        return $this->set('PrettyPrint', $value);
    }

    /**
     * Set the value for the RefreshToken input for this List Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the SortOrder input for this List Choreo.
     *
     * @param string $value (optional, string) The order in which to sort the list of comments. Valid values are: "ascending" (Sort oldest comments first, the default) and "descending" (Sort newest comments first).
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setSortOrder($value)
    {
        return $this->set('SortOrder', $value);
    }

    /**
     * Set the value for the UserIP input for this List Choreo.
     *
     * @param string $value (optional, string) Identifies the IP address of the end user for whom the API call is being made. Used to enforce per-user quotas.
     * @return Google_Plus_Comments_List_Inputs For method chaining.
     */
    public function setUserIP($value)
    {
        return $this->set('UserIP', $value);
    }
}


/**
 * Execution object for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the List Choreo.
     *
     * @param Temboo_Session $session The session that owns this List execution.
     * @param Google_Plus_Comments_List $choreo The choreography object for this execution.
     * @param Google_Plus_Comments_List_Inputs|array $inputs (optional) Inputs as Google_Plus_Comments_List_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Plus_Comments_List_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Plus_Comments_List $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this List execution.
     *
     * @return Google_Plus_Comments_List_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this List execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Plus_Comments_List_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Plus_Comments_List_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the List Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Plus_Comments_List_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the List Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Plus_Comments_List_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this List execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this List execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain walking distances and times for a matrix of addresses and/or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix extends Temboo_Choreography
{
    /**
     * Obtain walking distances and times for a matrix of addresses and/or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this WalkingDistanceMatrix Choreo.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/DistanceMatrix/WalkingDistanceMatrix/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this WalkingDistanceMatrix Choreo.
     *
     * @param Google_DistanceMatrix_WalkingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_WalkingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_DistanceMatrix_WalkingDistanceMatrix_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this WalkingDistanceMatrix Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_DistanceMatrix_WalkingDistanceMatrix_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the WalkingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the WalkingDistanceMatrix Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this WalkingDistanceMatrix input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this WalkingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destinations input for this WalkingDistanceMatrix Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates to which directions will be generated. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setDestinations($value)
    {
        return $this->set('Destinations', $value);
    }

    /**
     * Set the value for the Language input for this WalkingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Origins input for this WalkingDistanceMatrix Choreo.
     *
     * @param string $value (required, string) Enter the address(es) or geo-coordinates from which distance and time will be computed. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setOrigins($value)
    {
        return $this->set('Origins', $value);
    }

    /**
     * Set the value for the Region input for this WalkingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this WalkingDistanceMatrix Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this WalkingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }
}


/**
 * Execution object for the WalkingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the WalkingDistanceMatrix Choreo.
     *
     * @param Temboo_Session $session The session that owns this WalkingDistanceMatrix execution.
     * @param Google_DistanceMatrix_WalkingDistanceMatrix $choreo The choreography object for this execution.
     * @param Google_DistanceMatrix_WalkingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_WalkingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_DistanceMatrix_WalkingDistanceMatrix $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this WalkingDistanceMatrix execution.
     *
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this WalkingDistanceMatrix execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_DistanceMatrix_WalkingDistanceMatrix_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the WalkingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_WalkingDistanceMatrix_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the WalkingDistanceMatrix Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_DistanceMatrix_WalkingDistanceMatrix_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this WalkingDistanceMatrix execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Uploads MS Word, Excel, or plain text documents to a Google account.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile extends Temboo_Choreography
{
    /**
     * Uploads MS Word, Excel, or plain text documents to a Google account.
     *
     * @param Temboo_Session $session The session that owns this UploadFile Choreo.
     * @return Google_Documents_UploadFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/UploadFile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UploadFile Choreo.
     *
     * @param Google_Documents_UploadFile_Inputs|array $inputs (optional) Inputs as Google_Documents_UploadFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_UploadFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_UploadFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UploadFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_UploadFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_UploadFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UploadFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UploadFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_UploadFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UploadFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FileContents input for this UploadFile Choreo.
     *
     * @param string $value (conditional, string) The base64-encoded contents of the file you want to upload. Required unless using the VaultFile alias input (an advnaced option used when running Choreos in the Temboo Designer).
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setFileContents($value)
    {
        return $this->set('FileContents', $value);
    }

    /**
     * Set the value for the ContentType input for this UploadFile Choreo.
     *
     * @param string $value (required, string) Enter the content type for the file. Currently, the supported content types are: application/pdf, application/rtf, application/msword, application/vnd.ms-excel, text/plain, and text/csv.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setContentType($value)
    {
        return $this->set('ContentType', $value);
    }

    /**
     * Set the value for the Password input for this UploadFile Choreo.
     *
     * @param string $value (required, password) The password for your Google account.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this UploadFile Choreo.
     *
     * @param string $value (required, string) The name for the file you're uploading.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this UploadFile Choreo.
     *
     * @param string $value (required, string) The email address for your Google account.
     * @return Google_Documents_UploadFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }

}


/**
 * Execution object for the UploadFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UploadFile Choreo.
     *
     * @param Temboo_Session $session The session that owns this UploadFile execution.
     * @param Google_Documents_UploadFile $choreo The choreography object for this execution.
     * @param Google_Documents_UploadFile_Inputs|array $inputs (optional) Inputs as Google_Documents_UploadFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_UploadFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_UploadFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UploadFile execution.
     *
     * @return Google_Documents_UploadFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UploadFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_UploadFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_UploadFile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UploadFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_UploadFile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UploadFile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_UploadFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UploadFile execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Grants a new user read/write access to an existing document.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission extends Temboo_Choreography
{
    /**
     * Grants a new user read/write access to an existing document.
     *
     * @param Temboo_Session $session The session that owns this CreateSharingPermission Choreo.
     * @return Google_Documents_CreateSharingPermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/CreateSharingPermission/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateSharingPermission Choreo.
     *
     * @param Google_Documents_CreateSharingPermission_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateSharingPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateSharingPermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_CreateSharingPermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSharingPermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateSharingPermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_CreateSharingPermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSharingPermission Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateSharingPermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CreateSharingPermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSharingPermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the NewUserEmail input for this CreateSharingPermission Choreo.
     *
     * @param string $value (required, string) The email address of the user to whom you want to grant permission.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setNewUserEmail($value)
    {
        return $this->set('NewUserEmail', $value);
    }

    /**
     * Set the value for the Password input for this CreateSharingPermission Choreo.
     *
     * @param string $value (required, password) Your Google passsword.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Role input for this CreateSharingPermission Choreo.
     *
     * @param string $value (optional, string) The role that will be given to the new user permission (i.e., writer, reader, etc). Defaults to "writer".
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setRole($value)
    {
        return $this->set('Role', $value);
    }

    /**
     * Set the value for the Username input for this CreateSharingPermission Choreo.
     *
     * @param string $value (required, string) Your Google email address.
     * @return Google_Documents_CreateSharingPermission_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the CreateSharingPermission Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSharingPermission Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateSharingPermission execution.
     * @param Google_Documents_CreateSharingPermission $choreo The choreography object for this execution.
     * @param Google_Documents_CreateSharingPermission_Inputs|array $inputs (optional) Inputs as Google_Documents_CreateSharingPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CreateSharingPermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_CreateSharingPermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSharingPermission execution.
     *
     * @return Google_Documents_CreateSharingPermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateSharingPermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_CreateSharingPermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_CreateSharingPermission_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateSharingPermission Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CreateSharingPermission_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateSharingPermission Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_CreateSharingPermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ResourceID" output from this CreateSharingPermission execution.
     *
     * @return string (string) The resource ID of the document to which you want to add a user.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
    /**
     * Retrieve the value for the "Response" output from this CreateSharingPermission execution.
     *
     * @return string (xml) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of a user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory extends Temboo_Choreography
{
    /**
     * Returns a list of a user's location history.
     *
     * @param Temboo_Session $session The session that owns this ListLocationHistory Choreo.
     * @return Google_Latitude_ListLocationHistory New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/ListLocationHistory/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListLocationHistory Choreo.
     *
     * @param Google_Latitude_ListLocationHistory_Inputs|array $inputs (optional) Inputs as Google_Latitude_ListLocationHistory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_ListLocationHistory_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_ListLocationHistory_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListLocationHistory Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_ListLocationHistory_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_ListLocationHistory_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListLocationHistory Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListLocationHistory Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_ListLocationHistory_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListLocationHistory input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListLocationHistory Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this ListLocationHistory Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListLocationHistory Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Granularity input for this ListLocationHistory Choreo.
     *
     * @param string $value (optional, string) Specify the level of detailed returned.  Enter: best, or city.  Default is city.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setGranularity($value)
    {
        return $this->set('Granularity', $value);
    }

    /**
     * Set the value for the MaxResults input for this ListLocationHistory Choreo.
     *
     * @param int $value (optional, integer) Enter the maximum number of results to return.  If unspecified, 100 results will be returned.  The maximum results returned is 1000.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setMaxResults($value)
    {
        return $this->set('MaxResults', $value);
    }

    /**
     * Set the value for the MaxTime input for this ListLocationHistory Choreo.
     *
     * @param int $value (optional, integer) The maximum timestamp of the locations to return (in milliseconds since the epoch).
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setMaxTime($value)
    {
        return $this->set('MaxTime', $value);
    }

    /**
     * Set the value for the MinTime input for this ListLocationHistory Choreo.
     *
     * @param int $value (optional, integer) The minimum timestamp of the locations to return (in milliseconds since the epoch).
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setMinTime($value)
    {
        return $this->set('MinTime', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListLocationHistory Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListLocationHistory Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Google_Latitude_ListLocationHistory_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListLocationHistory Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListLocationHistory Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListLocationHistory execution.
     * @param Google_Latitude_ListLocationHistory $choreo The choreography object for this execution.
     * @param Google_Latitude_ListLocationHistory_Inputs|array $inputs (optional) Inputs as Google_Latitude_ListLocationHistory_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_ListLocationHistory_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_ListLocationHistory $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListLocationHistory execution.
     *
     * @return Google_Latitude_ListLocationHistory_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListLocationHistory execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_ListLocationHistory_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_ListLocationHistory_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListLocationHistory Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_ListLocationHistory_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListLocationHistory Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_ListLocationHistory_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this ListLocationHistory execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this ListLocationHistory execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Copies a document with the title you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument extends Temboo_Choreography
{
    /**
     * Copies a document with the title you specify.
     *
     * @param Temboo_Session $session The session that owns this CopyDocument Choreo.
     * @return Google_Documents_CopyDocument New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/CopyDocument/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CopyDocument Choreo.
     *
     * @param Google_Documents_CopyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CopyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CopyDocument_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_CopyDocument_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CopyDocument Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CopyDocument_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_CopyDocument_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CopyDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CopyDocument Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_CopyDocument_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CopyDocument input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the NewTitle input for this CopyDocument Choreo.
     *
     * @param string $value (required, string) The title for the new, copied document.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setNewTitle($value)
    {
        return $this->set('NewTitle', $value);
    }

    /**
     * Set the value for the Password input for this CopyDocument Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this CopyDocument Choreo.
     *
     * @param string $value (required, string) The title of the document to copy. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this CopyDocument Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_CopyDocument_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the CopyDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CopyDocument Choreo.
     *
     * @param Temboo_Session $session The session that owns this CopyDocument execution.
     * @param Google_Documents_CopyDocument $choreo The choreography object for this execution.
     * @param Google_Documents_CopyDocument_Inputs|array $inputs (optional) Inputs as Google_Documents_CopyDocument_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_CopyDocument_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_CopyDocument $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CopyDocument execution.
     *
     * @return Google_Documents_CopyDocument_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CopyDocument execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_CopyDocument_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_CopyDocument_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CopyDocument Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_CopyDocument_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CopyDocument Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_CopyDocument_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CopyDocument execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Move the document or file you specify to the Google Documents trash.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile extends Temboo_Choreography
{
    /**
     * Move the document or file you specify to the Google Documents trash.
     *
     * @param Temboo_Session $session The session that owns this TrashDocumentOrFile Choreo.
     * @return Google_Documents_TrashDocumentOrFile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Documents/TrashDocumentOrFile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this TrashDocumentOrFile Choreo.
     *
     * @param Google_Documents_TrashDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_TrashDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_TrashDocumentOrFile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Documents_TrashDocumentOrFile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this TrashDocumentOrFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_TrashDocumentOrFile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Documents_TrashDocumentOrFile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the TrashDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the TrashDocumentOrFile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Documents_TrashDocumentOrFile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this TrashDocumentOrFile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Password input for this TrashDocumentOrFile Choreo.
     *
     * @param string $value (required, password) Your Google account password.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the Title input for this TrashDocumentOrFile Choreo.
     *
     * @param string $value (required, string) The title of the document or file to trash. Enclose in quotation marks for an exact, non-case-sensitive match.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setTitle($value)
    {
        return $this->set('Title', $value);
    }

    /**
     * Set the value for the Username input for this TrashDocumentOrFile Choreo.
     *
     * @param string $value (required, string) Your Google account username.
     * @return Google_Documents_TrashDocumentOrFile_Inputs For method chaining.
     */
    public function setUsername($value)
    {
        return $this->set('Username', $value);
    }
}


/**
 * Execution object for the TrashDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the TrashDocumentOrFile Choreo.
     *
     * @param Temboo_Session $session The session that owns this TrashDocumentOrFile execution.
     * @param Google_Documents_TrashDocumentOrFile $choreo The choreography object for this execution.
     * @param Google_Documents_TrashDocumentOrFile_Inputs|array $inputs (optional) Inputs as Google_Documents_TrashDocumentOrFile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Documents_TrashDocumentOrFile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Documents_TrashDocumentOrFile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this TrashDocumentOrFile execution.
     *
     * @return Google_Documents_TrashDocumentOrFile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this TrashDocumentOrFile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Documents_TrashDocumentOrFile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Documents_TrashDocumentOrFile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the TrashDocumentOrFile Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Documents_TrashDocumentOrFile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the TrashDocumentOrFile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Documents_TrashDocumentOrFile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ResourceID" output from this TrashDocumentOrFile execution.
     *
     * @return string (string) The resource ID for the document to trash as returned by Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResourceID()
    {
        return $this->get('ResourceID');
    }
    /**
     * Retrieve the value for the "Response" output from this TrashDocumentOrFile execution.
     *
     * @return string (xml) The response from the Google Documents API.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Obtain travel distances and times for a matrix of addresses and/or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix extends Temboo_Choreography
{
    /**
     * Obtain travel distances and times for a matrix of addresses and/or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this DrivingDistanceMatrix Choreo.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/DistanceMatrix/DrivingDistanceMatrix/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DrivingDistanceMatrix Choreo.
     *
     * @param Google_DistanceMatrix_DrivingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_DrivingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_DistanceMatrix_DrivingDistanceMatrix_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DrivingDistanceMatrix Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_DistanceMatrix_DrivingDistanceMatrix_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DrivingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DrivingDistanceMatrix Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DrivingDistanceMatrix input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this DrivingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Avoid input for this DrivingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Specify whether the calculated directions should avoid the following features: tolls, or highways.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setAvoid($value)
    {
        return $this->set('Avoid', $value);
    }

    /**
     * Set the value for the Destinations input for this DrivingDistanceMatrix Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates to which directions will be generated. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setDestinations($value)
    {
        return $this->set('Destinations', $value);
    }

    /**
     * Set the value for the Language input for this DrivingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Set the language in which to return restults.  A list of supported languages is available here: https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setLanguage($value)
    {
        return $this->set('Language', $value);
    }

    /**
     * Set the value for the Origins input for this DrivingDistanceMatrix Choreo.
     *
     * @param string $value (required, string) Enter the address(es) or geo-coordinates from which distance and time will be computed. Multiple destinations can be separated by pipes (|).  For example: Boston, MA|New Haven|40.7160,-74.0037.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setOrigins($value)
    {
        return $this->set('Origins', $value);
    }

    /**
     * Set the value for the Region input for this DrivingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this DrivingDistanceMatrix Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this DrivingDistanceMatrix Choreo.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }
}


/**
 * Execution object for the DrivingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DrivingDistanceMatrix Choreo.
     *
     * @param Temboo_Session $session The session that owns this DrivingDistanceMatrix execution.
     * @param Google_DistanceMatrix_DrivingDistanceMatrix $choreo The choreography object for this execution.
     * @param Google_DistanceMatrix_DrivingDistanceMatrix_Inputs|array $inputs (optional) Inputs as Google_DistanceMatrix_DrivingDistanceMatrix_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_DistanceMatrix_DrivingDistanceMatrix $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DrivingDistanceMatrix execution.
     *
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DrivingDistanceMatrix execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_DistanceMatrix_DrivingDistanceMatrix_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DrivingDistanceMatrix Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_DistanceMatrix_DrivingDistanceMatrix_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DrivingDistanceMatrix Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_DistanceMatrix_DrivingDistanceMatrix_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DrivingDistanceMatrix execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Gets a permission by ID.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Get extends Temboo_Choreography
{
    /**
     * Gets a permission by ID.
     *
     * @param Temboo_Session $session The session that owns this Get Choreo.
     * @return Google_Drive_Permissions_Get New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Permissions/Get/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Get Choreo.
     *
     * @param Google_Drive_Permissions_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Get_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Permissions_Get_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Get_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Permissions_Get_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Get_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Get Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Permissions_Get_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Get input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Get Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Get Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Get Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID of the file.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the PermissionID input for this Get Choreo.
     *
     * @param string $value (required, string) The ID for the permission.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setPermissionID($value)
    {
        return $this->set('PermissionID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Get Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Permissions_Get_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Get_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Get Choreo.
     *
     * @param Temboo_Session $session The session that owns this Get execution.
     * @param Google_Drive_Permissions_Get $choreo The choreography object for this execution.
     * @param Google_Drive_Permissions_Get_Inputs|array $inputs (optional) Inputs as Google_Drive_Permissions_Get_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Permissions_Get_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Permissions_Get $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Get execution.
     *
     * @return Google_Drive_Permissions_Get_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Get execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Permissions_Get_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Permissions_Get_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Get Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Permissions_Get_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Get Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Permissions_Get_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Get execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Get execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive permission resource
	*/

	public function getPermissions() {
		return new Google_Drive_Permission_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Delete a current location.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation extends Temboo_Choreography
{
    /**
     * Delete a current location.
     *
     * @param Temboo_Session $session The session that owns this DeleteCurrentLocation Choreo.
     * @return Google_Latitude_DeleteCurrentLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/DeleteCurrentLocation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteCurrentLocation Choreo.
     *
     * @param Google_Latitude_DeleteCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeleteCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeleteCurrentLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_DeleteCurrentLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteCurrentLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_DeleteCurrentLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteCurrentLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteCurrentLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteCurrentLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this DeleteCurrentLocation Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this DeleteCurrentLocation Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this DeleteCurrentLocation Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this DeleteCurrentLocation Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Latitude_DeleteCurrentLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the DeleteCurrentLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteCurrentLocation Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteCurrentLocation execution.
     * @param Google_Latitude_DeleteCurrentLocation $choreo The choreography object for this execution.
     * @param Google_Latitude_DeleteCurrentLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_DeleteCurrentLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_DeleteCurrentLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_DeleteCurrentLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteCurrentLocation execution.
     *
     * @return Google_Latitude_DeleteCurrentLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteCurrentLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_DeleteCurrentLocation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteCurrentLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_DeleteCurrentLocation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteCurrentLocation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_DeleteCurrentLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this DeleteCurrentLocation execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteCurrentLocation execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 *  Generate walking directions between two locations, denoted by address or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections extends Temboo_Choreography
{
    /**
     *  Generate walking directions between two locations, denoted by address or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetWalkingDirections Choreo.
     * @return Google_Directions_GetWalkingDirections New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Directions/GetWalkingDirections/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetWalkingDirections Choreo.
     *
     * @param Google_Directions_GetWalkingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetWalkingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetWalkingDirections_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Directions_GetWalkingDirections_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetWalkingDirections Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetWalkingDirections_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Directions_GetWalkingDirections_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetWalkingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetWalkingDirections Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetWalkingDirections_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetWalkingDirections input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this GetWalkingDirections Choreo.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Destination input for this GetWalkingDirections Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be generated (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setDestination($value)
    {
        return $this->set('Destination', $value);
    }

    /**
     * Set the value for the Origin input for this GetWalkingDirections Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be computed (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setOrigin($value)
    {
        return $this->set('Origin', $value);
    }

    /**
     * Set the value for the Region input for this GetWalkingDirections Choreo.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GetWalkingDirections Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this GetWalkingDirections Choreo.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }

    /**
     * Set the value for the Waypoints input for this GetWalkingDirections Choreo.
     *
     * @param string $value (optional, string) Specify route waypoints, either by address, or latitude/longitude coordinates.
     * @return Google_Directions_GetWalkingDirections_Inputs For method chaining.
     */
    public function setWaypoints($value)
    {
        return $this->set('Waypoints', $value);
    }
}


/**
 * Execution object for the GetWalkingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetWalkingDirections Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetWalkingDirections execution.
     * @param Google_Directions_GetWalkingDirections $choreo The choreography object for this execution.
     * @param Google_Directions_GetWalkingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetWalkingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetWalkingDirections_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Directions_GetWalkingDirections $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetWalkingDirections execution.
     *
     * @return Google_Directions_GetWalkingDirections_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetWalkingDirections execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Directions_GetWalkingDirections_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Directions_GetWalkingDirections_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetWalkingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetWalkingDirections_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetWalkingDirections Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Directions_GetWalkingDirections_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetWalkingDirections execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists all photos in a specified Google Picasa album.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum extends Temboo_Choreography
{
    /**
     * Lists all photos in a specified Google Picasa album.
     *
     * @param Temboo_Session $session The session that owns this ListPhotosByAlbum Choreo.
     * @return Google_Picasa_ListPhotosByAlbum New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/ListPhotosByAlbum/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListPhotosByAlbum Choreo.
     *
     * @param Google_Picasa_ListPhotosByAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListPhotosByAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListPhotosByAlbum_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_ListPhotosByAlbum_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListPhotosByAlbum Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_ListPhotosByAlbum_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListPhotosByAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListPhotosByAlbum Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListPhotosByAlbum input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this ListPhotosByAlbum Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the AlbumID input for this ListPhotosByAlbum Choreo.
     *
     * @param int $value (required, integer) The album id. Note that this can be retrieved by running the ListAlbums Choreo.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setAlbumID($value)
    {
        return $this->set('AlbumID', $value);
    }

    /**
     * Set the value for the ClientID input for this ListPhotosByAlbum Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this ListPhotosByAlbum Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this ListPhotosByAlbum Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the UserID input for this ListPhotosByAlbum Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_ListPhotosByAlbum_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the ListPhotosByAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListPhotosByAlbum Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListPhotosByAlbum execution.
     * @param Google_Picasa_ListPhotosByAlbum $choreo The choreography object for this execution.
     * @param Google_Picasa_ListPhotosByAlbum_Inputs|array $inputs (optional) Inputs as Google_Picasa_ListPhotosByAlbum_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_ListPhotosByAlbum_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_ListPhotosByAlbum $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListPhotosByAlbum execution.
     *
     * @return Google_Picasa_ListPhotosByAlbum_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListPhotosByAlbum execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_ListPhotosByAlbum_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListPhotosByAlbum Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_ListPhotosByAlbum_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListPhotosByAlbum Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_ListPhotosByAlbum_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this ListPhotosByAlbum execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this ListPhotosByAlbum execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Restores a file from the trash.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Untrash extends Temboo_Choreography
{
    /**
     * Restores a file from the trash.
     *
     * @param Temboo_Session $session The session that owns this Untrash Choreo.
     * @return Google_Drive_Files_Untrash New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Drive/Files/Untrash/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Untrash Choreo.
     *
     * @param Google_Drive_Files_Untrash_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Untrash_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Untrash_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Drive_Files_Untrash_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Untrash Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Untrash_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Drive_Files_Untrash_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Untrash Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Untrash_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Untrash Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Drive_Files_Untrash_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Untrash input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this Untrash Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth2 process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this Untrash Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this Untrash Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Fields input for this Untrash Choreo.
     *
     * @param string $value (optional, string) Selector specifying a subset of fields to include in the response.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function setFields($value)
    {
        return $this->set('Fields', $value);
    }

    /**
     * Set the value for the FileID input for this Untrash Choreo.
     *
     * @param string $value (required, string) The ID of the file to untrash.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function setFileID($value)
    {
        return $this->set('FileID', $value);
    }

    /**
     * Set the value for the RefreshToken input for this Untrash Choreo.
     *
     * @param string $value (conditional, string) An OAuth refresh token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Drive_Files_Untrash_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }
}


/**
 * Execution object for the Untrash Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Untrash_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Untrash Choreo.
     *
     * @param Temboo_Session $session The session that owns this Untrash execution.
     * @param Google_Drive_Files_Untrash $choreo The choreography object for this execution.
     * @param Google_Drive_Files_Untrash_Inputs|array $inputs (optional) Inputs as Google_Drive_Files_Untrash_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Drive_Files_Untrash_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Drive_Files_Untrash $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Untrash execution.
     *
     * @return Google_Drive_Files_Untrash_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Untrash execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Drive_Files_Untrash_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Drive_Files_Untrash_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Untrash Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Drive_Files_Untrash_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Untrash Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Drive_Files_Untrash_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this Untrash execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this Untrash execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
	/*
	A Google Drive file resource
	*/

	public function getFile() {
		return new Google_Drive_File_output(json_decode($this->get('Response'), true));
	}
}

/**
 * Searches photos using tags that you specify.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag extends Temboo_Choreography
{
    /**
     * Searches photos using tags that you specify.
     *
     * @param Temboo_Session $session The session that owns this SearchPhotosByTag Choreo.
     * @return Google_Picasa_SearchPhotosByTag New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Picasa/SearchPhotosByTag/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SearchPhotosByTag Choreo.
     *
     * @param Google_Picasa_SearchPhotosByTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_SearchPhotosByTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_SearchPhotosByTag_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Picasa_SearchPhotosByTag_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SearchPhotosByTag Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_SearchPhotosByTag_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Picasa_SearchPhotosByTag_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SearchPhotosByTag Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SearchPhotosByTag Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Picasa_SearchPhotosByTag_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SearchPhotosByTag input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this SearchPhotosByTag Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this SearchPhotosByTag Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this SearchPhotosByTag Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the RefreshToken input for this SearchPhotosByTag Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the Tag input for this SearchPhotosByTag Choreo.
     *
     * @param string $value (required, string) A photo tag to search by. Multiple tags can be separated by commas.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setTag($value)
    {
        return $this->set('Tag', $value);
    }

    /**
     * Set the value for the UserID input for this SearchPhotosByTag Choreo.
     *
     * @param string $value (optional, string) Google Picasa username. Defaults to 'default' which means the server will use the UserID of the user whose access token was specified.
     * @return Google_Picasa_SearchPhotosByTag_Inputs For method chaining.
     */
    public function setUserID($value)
    {
        return $this->set('UserID', $value);
    }
}


/**
 * Execution object for the SearchPhotosByTag Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SearchPhotosByTag Choreo.
     *
     * @param Temboo_Session $session The session that owns this SearchPhotosByTag execution.
     * @param Google_Picasa_SearchPhotosByTag $choreo The choreography object for this execution.
     * @param Google_Picasa_SearchPhotosByTag_Inputs|array $inputs (optional) Inputs as Google_Picasa_SearchPhotosByTag_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Picasa_SearchPhotosByTag_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Picasa_SearchPhotosByTag $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SearchPhotosByTag execution.
     *
     * @return Google_Picasa_SearchPhotosByTag_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SearchPhotosByTag execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Picasa_SearchPhotosByTag_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Picasa_SearchPhotosByTag_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SearchPhotosByTag Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Picasa_SearchPhotosByTag_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SearchPhotosByTag Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Picasa_SearchPhotosByTag_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this SearchPhotosByTag execution.
     *
     * @return string (string) Contains a new AccessToken when the RefreshToken is provided.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this SearchPhotosByTag execution.
     *
     * @return string (xml) The response from Google Picasa.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates or creates an entry in an authenticated user's location history.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation extends Temboo_Choreography
{
    /**
     * Updates or creates an entry in an authenticated user's location history.
     *
     * @param Temboo_Session $session The session that owns this InsertPastLocation Choreo.
     * @return Google_Latitude_InsertPastLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Latitude/InsertPastLocation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this InsertPastLocation Choreo.
     *
     * @param Google_Latitude_InsertPastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertPastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertPastLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Latitude_InsertPastLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this InsertPastLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertPastLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Latitude_InsertPastLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the InsertPastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the InsertPastLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Latitude_InsertPastLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this InsertPastLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AccessToken input for this InsertPastLocation Choreo.
     *
     * @param string $value (optional, string) A valid access token retrieved during the OAuth process. This is required unless you provide the ClientID, ClientSecret, and RefreshToken to generate a new access token.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setAccessToken($value)
    {
        return $this->set('AccessToken', $value);
    }

    /**
     * Set the value for the ClientID input for this InsertPastLocation Choreo.
     *
     * @param string $value (conditional, string) The Client ID provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setClientID($value)
    {
        return $this->set('ClientID', $value);
    }

    /**
     * Set the value for the ClientSecret input for this InsertPastLocation Choreo.
     *
     * @param string $value (conditional, string) The Client Secret provided by Google. Required unless providing a valid AccessToken.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setClientSecret($value)
    {
        return $this->set('ClientSecret', $value);
    }

    /**
     * Set the value for the Latitide input for this InsertPastLocation Choreo.
     *
     * @param float $value (required, decimal) Enter latitude coordinates. For example: 37.420352.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setLatitide($value)
    {
        return $this->set('Latitide', $value);
    }

    /**
     * Set the value for the Longitude input for this InsertPastLocation Choreo.
     *
     * @param float $value (required, decimal) Enter longitude coordinates.  For example: -122.083389.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setLongitude($value)
    {
        return $this->set('Longitude', $value);
    }

    /**
     * Set the value for the RefreshToken input for this InsertPastLocation Choreo.
     *
     * @param string $value (conditional, string) An OAuth Refresh Token used to generate a new access token when the original token is expired. Required unless providing a valid AccessToken.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setRefreshToken($value)
    {
        return $this->set('RefreshToken', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this InsertPastLocation Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the TimestampMs input for this InsertPastLocation Choreo.
     *
     * @param string $value (required, date) Enter a timestamp value (in epoch time).  Example: 1325715558.
     * @return Google_Latitude_InsertPastLocation_Inputs For method chaining.
     */
    public function setTimestampMs($value)
    {
        return $this->set('TimestampMs', $value);
    }
}


/**
 * Execution object for the InsertPastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the InsertPastLocation Choreo.
     *
     * @param Temboo_Session $session The session that owns this InsertPastLocation execution.
     * @param Google_Latitude_InsertPastLocation $choreo The choreography object for this execution.
     * @param Google_Latitude_InsertPastLocation_Inputs|array $inputs (optional) Inputs as Google_Latitude_InsertPastLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Latitude_InsertPastLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Latitude_InsertPastLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this InsertPastLocation execution.
     *
     * @return Google_Latitude_InsertPastLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this InsertPastLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Latitude_InsertPastLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Latitude_InsertPastLocation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the InsertPastLocation Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Latitude_InsertPastLocation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the InsertPastLocation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Latitude_InsertPastLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NewAccessToken" output from this InsertPastLocation execution.
     *
     * @return string (string) 
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNewAccessToken()
    {
        return $this->get('NewAccessToken');
    }
    /**
     * Retrieve the value for the "Response" output from this InsertPastLocation execution.
     *
     * @return string The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 *  Generates directions between two locations, denoted by address, or latitude/longitude coordinates.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections extends Temboo_Choreography
{
    /**
     *  Generates directions between two locations, denoted by address, or latitude/longitude coordinates.
     *
     * @param Temboo_Session $session The session that owns this GetDrivingDirections Choreo.
     * @return Google_Directions_GetDrivingDirections New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Google/Directions/GetDrivingDirections/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetDrivingDirections Choreo.
     *
     * @param Google_Directions_GetDrivingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetDrivingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetDrivingDirections_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Google_Directions_GetDrivingDirections_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetDrivingDirections Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetDrivingDirections_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Google_Directions_GetDrivingDirections_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetDrivingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetDrivingDirections Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Google_Directions_GetDrivingDirections_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetDrivingDirections input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Alternatives input for this GetDrivingDirections Choreo.
     *
     * @param string $value (optional, string) If set to true, additional routes will be returned.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setAlternatives($value)
    {
        return $this->set('Alternatives', $value);
    }

    /**
     * Set the value for the Avoid input for this GetDrivingDirections Choreo.
     *
     * @param string $value (optional, string) Specify whether the calculated directions should avoid the following features: tolls, or highways.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setAvoid($value)
    {
        return $this->set('Avoid', $value);
    }

    /**
     * Set the value for the Destination input for this GetDrivingDirections Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be generated (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setDestination($value)
    {
        return $this->set('Destination', $value);
    }

    /**
     * Set the value for the Origin input for this GetDrivingDirections Choreo.
     *
     * @param string $value (required, string) Enter the address or latitude/longitude coordinates from which directions will be computed (i.e."104 Franklin St, New York, NY" or "40.7160,-74.0037").
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setOrigin($value)
    {
        return $this->set('Origin', $value);
    }

    /**
     * Set the value for the Region input for this GetDrivingDirections Choreo.
     *
     * @param string $value (optional, string) Enter the region code for the directions, specified as a ccTLD two-character value.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setRegion($value)
    {
        return $this->set('Region', $value);
    }

    /**
     * Set the value for the Sensor input for this GetDrivingDirections Choreo.
     *
     * @param bool $value (optional, boolean) Indicates whether or not the directions request is from a device with a location sensor. Value must be either 1 or 0. Defaults to 0 (false).
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setSensor($value)
    {
        return $this->set('Sensor', $value);
    }

    /**
     * Set the value for the Units input for this GetDrivingDirections Choreo.
     *
     * @param string $value (optional, string) Specify the units to be used when displaying results.  Options include, metric, or imperial.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setUnits($value)
    {
        return $this->set('Units', $value);
    }

    /**
     * Set the value for the Waypoints input for this GetDrivingDirections Choreo.
     *
     * @param string $value (optional, string) Specify route waypoints, either by address, or latitude/longitude coordinates.
     * @return Google_Directions_GetDrivingDirections_Inputs For method chaining.
     */
    public function setWaypoints($value)
    {
        return $this->set('Waypoints', $value);
    }
}


/**
 * Execution object for the GetDrivingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetDrivingDirections Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetDrivingDirections execution.
     * @param Google_Directions_GetDrivingDirections $choreo The choreography object for this execution.
     * @param Google_Directions_GetDrivingDirections_Inputs|array $inputs (optional) Inputs as Google_Directions_GetDrivingDirections_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Google_Directions_GetDrivingDirections_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Google_Directions_GetDrivingDirections $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetDrivingDirections execution.
     *
     * @return Google_Directions_GetDrivingDirections_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetDrivingDirections execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Google_Directions_GetDrivingDirections_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Google_Directions_GetDrivingDirections_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetDrivingDirections Choreo.
 *
 * @package Temboo
 * @subpackage Google
 */
class Google_Directions_GetDrivingDirections_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetDrivingDirections Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Google_Directions_GetDrivingDirections_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetDrivingDirections execution.
     *
     * @return string (json) The response from Google.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}


/******************************************************************************
Begin output wrapper classes
******************************************************************************/


/*
 The attendees of the event.
  
*/

class Google_Calendar_Attendees_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The attendee's email address, if available. This field must be present when adding an attendee.
	*/

	public function getEmail() {
		return Temboo_Results::getSubItemByKey($this->base, "email");
	}

	/*
	The attendee's response status: "needsAction" - The attendee has not responded to the invitation, "declined" - The attendee has declined the invitation, "tentative" - The attendee has tentatively accepted the invitation, "accepted" - The attendee has accepted the invitation.
	*/

	public function getResponseStatus() {
		return Temboo_Results::getSubItemByKey($this->base, "responseStatus");
	}
}



/*
 Represents a Google Calendar
  
*/

class Google_Calendar_Calendar_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	Description of the calendar.
	*/

	public function getDescription() {
		return Temboo_Results::getSubItemByKey($this->base, "description");
	}

	/*
	ETag of the resource.
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	Identifier of the calendar.
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	Type of the resource ("calendar#calendar").
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	Geographic location of the calendar as free-form text
	*/

	public function getLocation() {
		return Temboo_Results::getSubItemByKey($this->base, "location");
	}

	/*
	Title of the calendar.
	*/

	public function getSummary() {
		return Temboo_Results::getSubItemByKey($this->base, "summary");
	}

	/*
	The time zone of the calendar.
	*/

	public function getTimeZone() {
		return Temboo_Results::getSubItemByKey($this->base, "timeZone");
	}
}



/*
 Represents a Google Calendar List Entry
  
*/

class Google_Calendar_CalendarListEntry_output extends Google_Calendar_Calendar_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The effective access role that the authenticated user has on the calendar: "freeBusyReader" - Provides read access to free/busy information, "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden, "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible, "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
	*/

	public function getAccessRole() {
		return Temboo_Results::getSubItemByKey($this->base, "accessRole");
	}

	/*
	The main color of the calendar in the format '#0088aa'. This property supersedes the index-based colorId property
	*/

	public function getBackgroundColor() {
		return Temboo_Results::getSubItemByKey($this->base, "backgroundColor");
	}

	/*
	The color of the calendar. This is an ID referring to an entry in the "calendar" section of the colors definition (see the "colors" endpoint).
	*/

	public function getColorId() {
		return Temboo_Results::getSubItemByKey($this->base, "colorId");
	}

	/*
	The default reminders that the authenticated user has for this calendar.
	*/

	public function getDefaultReminders() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "defaultReminders");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Calendar_DefaultReminders_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	The foreground color of the calendar in the format '#ffffff'. This property supersedes the index-based colorId property.
	*/

	public function getForegroundColor() {
		return Temboo_Results::getSubItemByKey($this->base, "foregroundColor");
	}

	/*
	Type of the resource ("calendar#calendarListEntry").
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	Whether the calendar content shows up in the calendar UI.
	*/

	public function getSelected() {
		return Temboo_Results::getSubItemByKey($this->base, "selected");
	}
}



/*
 The creator of the event
  
*/

class Google_Calendar_Creator_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The creator's email address, if available.
	*/

	public function getEmail() {
		return Temboo_Results::getSubItemByKey($this->base, "email");
	}
}



/*
 Default reminders
  
*/

class Google_Calendar_DefaultReminders_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The method used by this reminder: "email" - Reminders are sent via email, "sms" - Reminders are sent via SMS, "popup" - Reminders are sent via a UI popup.
	*/

	public function getMethod() {
		return Temboo_Results::getSubItemByKey($this->base, "method");
	}

	/*
	Number of minutes before the start of the event when the reminder should trigger.
	*/

	public function getMinutes() {
		return Temboo_Results::getSubItemByKey($this->base, "minutes");
	}
}



/*
 The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.
  
*/

class Google_Calendar_End_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in 'timeZone'.
	*/

	public function getDateTime() {
		return Temboo_Results::getSubItemByKey($this->base, "dateTime");
	}

	/*
	The name of the time zone in which the time is specified (e.g. "Europe/Zurich"). Optional. The default is the time zone of the calendar.
	*/

	public function getTimeZone() {
		return Temboo_Results::getSubItemByKey($this->base, "timeZone");
	}
}



/*
 A single event on a calendar containing information such as the title of event, start and end times, and attendees.
  
*/

class Google_Calendar_Event_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The attendees of the event.
	*/

	public function getAttendees() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "attendees");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Calendar_Attendees_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	Creation time of the event (as a RFC 3339 timestamp).
	*/

	public function getCreated() {
		return Temboo_Results::getSubItemByKey($this->base, "created");
	}

	/*
	The creator of the event.
	*/

	public function getCreator() {
		return new Google_Calendar_Creator_output(Temboo_Results::getSubItemByKey($this->base, "creator"));
	}

	/*
	Description of the event.
	*/

	public function getDescription() {
		return Temboo_Results::getSubItemByKey($this->base, "description");
	}

	/*
	The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.
	*/

	public function getEnd() {
		return new Google_Calendar_End_output(Temboo_Results::getSubItemByKey($this->base, "end"));
	}

	/*
	ETag of the resource.
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	An absolute link to this event in the Google Calendar Web UI.
	*/

	public function getHtmlLink() {
		return Temboo_Results::getSubItemByKey($this->base, "htmlLink");
	}

	/*
	Event ID in the iCalendar format.
	*/

	public function getICalUID() {
		return Temboo_Results::getSubItemByKey($this->base, "iCalUID");
	}

	/*
	Identifier of the event.
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	Type of the resource ("calendar#event").
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	Geographic location of the event as free-form text.
	*/

	public function getLocation() {
		return Temboo_Results::getSubItemByKey($this->base, "location");
	}

	/*
	Whether the organizer corresponds to the calendar on which this copy of the event appears
	*/

	public function getOrganizer() {
		return new Google_Calendar_Organizer_output(Temboo_Results::getSubItemByKey($this->base, "organizer"));
	}

	/*
	List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.
	*/

	public function getRecurrence() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "recurrence");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, $entry);
			}
		}
		return $resultArray;
	}

	/*
	If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.
	*/

	public function getReminders() {
		return new Google_Calendar_Reminders_output(Temboo_Results::getSubItemByKey($this->base, "reminders"));
	}

	/*
	Sequence number as per iCalendar.
	*/

	public function getSequence() {
		return Temboo_Results::getSubItemByKey($this->base, "sequence");
	}

	/*
	The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.
	*/

	public function getStart() {
		return new Google_Calendar_Start_output(Temboo_Results::getSubItemByKey($this->base, "start"));
	}

	/*
	Status of the event: "confirmed" - The event is confirmed. This is the default status, "tentative" - The event is tentatively confirmed, "cancelled" - The event is cancelled.
	*/

	public function getStatus() {
		return Temboo_Results::getSubItemByKey($this->base, "status");
	}

	/*
	Title of the event.
	*/

	public function getSummary() {
		return Temboo_Results::getSubItemByKey($this->base, "summary");
	}

	/*
	Last modification time of the event (as a RFC 3339 timestamp).
	*/

	public function getUpdated() {
		return Temboo_Results::getSubItemByKey($this->base, "updated");
	}
}



/*
 A listing of Google Calendar Events

*/

class Google_Calendar_EventList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The user's access role for this calendar: "none" - The user has no access, "freeBusyReader" - The user has read access to free/busy information, "reader" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden, "writer" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible, "owner" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
	*/

	public function getAccessRole() {
		return Temboo_Results::getSubItemByKey($this->base, "accessRole");
	}

	/*
	*/

	public function getDefaultReminders() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "defaultReminders");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Calendar_DefaultReminders_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	Description of the calendar.
	*/

	public function getDescription() {
		return Temboo_Results::getSubItemByKey($this->base, "description");
	}

	/*
	ETag of the collection.
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A list of Google Calendar Events.
	*/

	public function getEvents() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Calendar_Event_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	Type of the collection ("calendar#events").
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	Title of the calendar
	*/

	public function getSummary() {
		return Temboo_Results::getSubItemByKey($this->base, "summary");
	}

	/*
	The time zone of the calendar.
	*/

	public function getTimeZone() {
		return Temboo_Results::getSubItemByKey($this->base, "timeZone");
	}

	/*
	Last modification time of the calendar (as a RFC 3339 timestamp)
	*/

	public function getUpdated() {
		return Temboo_Results::getSubItemByKey($this->base, "updated");
	}
}



/*
 The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in 'attendees' with the 'organizer' field set to True.
  
*/

class Google_Calendar_Organizer_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The organizer's name, if available.
	*/

	public function getDisplayName() {
		return Temboo_Results::getSubItemByKey($this->base, "displayName");
	}

	/*
	The organizer's email address, if available.
	*/

	public function getEmail() {
		return Temboo_Results::getSubItemByKey($this->base, "email");
	}

	/*
	Whether the organizer corresponds to the calendar on which this copy of the event appears.  The default is False.
	*/

	public function getSelf() {
		return Temboo_Results::getSubItemByKey($this->base, "self");
	}
}



/*
 f the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.
    
*/

class Google_Calendar_Overrides_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The method used by this reminder: "email" - Reminders are sent via email, "sms" - Reminders are sent via SMS, "popup" - Reminders are sent via a UI popup.
	*/

	public function getMethod() {
		return Temboo_Results::getSubItemByKey($this->base, "method");
	}

	/*
	Number of minutes before the start of the event when the reminder should trigger.
	*/

	public function getMinutes() {
		return Temboo_Results::getSubItemByKey($this->base, "minutes");
	}
}



/*
 Information about the event's reminders for the authenticated user.
  
*/

class Google_Calendar_Reminders_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.
	*/

	public function getOverrides() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "overrides");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Calendar_Overrides_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	Whether the default reminders of the calendar apply to the event.
	*/

	public function getUseDefault() {
		return Temboo_Results::getSubItemByKey($this->base, "useDefault");
	}
}



/*
 Represents a Google Calendar user property setting.
  
*/

class Google_Calendar_Setting_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	Type of the resource ("calendar#setting").
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	Name of the user setting.
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	Type of the resource ("calendar#setting").
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	Value of the user setting. The format of the value depends on the ID of the setting.
	*/

	public function getValue() {
		return Temboo_Results::getSubItemByKey($this->base, "value");
	}
}



/*
 A listing of all Google Calendar Settings

*/

class Google_Calendar_SettingList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	ETag of the resource.
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A list of all Google Calendar Settings.
	*/

	public function getSettings() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Calendar_Setting_output($entry));
			}
		}
		return $resultArray;
	}
}



/*
 The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.
  
*/

class Google_Calendar_Start_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in 'timeZone'.
	*/

	public function getDateTime() {
		return Temboo_Results::getSubItemByKey($this->base, "dateTime");
	}

	/*
	The name of the time zone in which the time is specified (e.g. "Europe/Zurich"). Optional. The default is the time zone of the calendar.
	*/

	public function getTimeZone() {
		return Temboo_Results::getSubItemByKey($this->base, "timeZone");
	}
}



/*
 An object representing the user who wrote this comment

*/

class Google_Drive_Author_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	A plain text displayable name for this user
	*/

	public function getDisplayName() {
		return Temboo_Results::getSubItemByKey($this->base, "displayName");
	}

	/*
	Whether this user is the same as the authenticated user of which the request was made on behalf
	*/

	public function getIsAuthenticatedUser() {
		return Temboo_Results::getSubItemByKey($this->base, "isAuthenticatedUser");
	}

	/*
	This is always drive#user
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	Get the user's profile picture
	*/

	public function getPicture() {
		return new Google_Drive_Picture_output(Temboo_Results::getSubItemByKey($this->base, "picture"));
	}
}



/*
 An object representing a change for a Google Drive resource

*/

class Google_Drive_Change_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	Whether the file has been deleted
	*/

	public function getDeleted() {
		return Temboo_Results::getSubItemByKey($this->base, "deleted");
	}

	/*
	The ID of the file associated with this change
	*/

	public function getFileId() {
		return Temboo_Results::getSubItemByKey($this->base, "fileId");
	}

	/*
	The ID of the change
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	This is always drive#change
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link back to this change
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 A listing of changes in Google Drive

*/

class Google_Drive_ChangeList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the list
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A Google Drive change resource
	*/

	public function getChanges() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Change_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	This is always drive#changeList
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	The current largest change ID
	*/

	public function getLargestChangeId() {
		return Temboo_Results::getSubItemByKey($this->base, "largestChangeId");
	}

	/*
	A link to the next page of changes
	*/

	public function getNextLink() {
		return Temboo_Results::getSubItemByKey($this->base, "nextLink");
	}

	/*
	The page token for the next page of changes
	*/

	public function getNextPageToken() {
		return Temboo_Results::getSubItemByKey($this->base, "nextPageToken");
	}

	/*
	A link back to this list
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 A specific child reference

*/

class Google_Drive_Child_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	A link to the child
	*/

	public function getChildLink() {
		return Temboo_Results::getSubItemByKey($this->base, "childLink");
	}

	/*
	The ID of the child
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	This is always drive#childReference
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link back to this reference
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
  A listing of child resources

*/

class Google_Drive_ChildList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the list
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A Google Drive child resource
	*/

	public function getChildren() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Child_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	This is always drive#childList
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link to the next page of children
	*/

	public function getNextLink() {
		return Temboo_Results::getSubItemByKey($this->base, "nextLink");
	}

	/*
	The page token for the next page of children
	*/

	public function getNextPageToken() {
		return Temboo_Results::getSubItemByKey($this->base, "nextPageToken");
	}

	/*
	A link back to this list
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 An object representing a comment on a file

*/

class Google_Drive_Comment_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	Get the user who wronte this comment
	*/

	public function getAuthor() {
		return new Google_Drive_Author_output(Temboo_Results::getSubItemByKey($this->base, "author"));
	}

	/*
	The ID of the comment
	*/

	public function getCommentId() {
		return Temboo_Results::getSubItemByKey($this->base, "commentId");
	}

	/*
	The plain text content used to create this comment
	*/

	public function getContent() {
		return Temboo_Results::getSubItemByKey($this->base, "content");
	}

	/*
	The date when this comment was first created (formatted RFC 3339 timestamp)
	*/

	public function getCreatedDate() {
		return Temboo_Results::getSubItemByKey($this->base, "createdDate");
	}

	/*
	Whether this comment has been deleted
	*/

	public function getDeleted() {
		return Temboo_Results::getSubItemByKey($this->base, "deleted");
	}

	/*
	The file which this comment is addressing
	*/

	public function getFileId() {
		return Temboo_Results::getSubItemByKey($this->base, "fileId");
	}

	/*
	The title of the file which this comment is addressing
	*/

	public function getFileTitle() {
		return Temboo_Results::getSubItemByKey($this->base, "fileTitle");
	}

	/*
	HTML formatted content for this comment
	*/

	public function getHtmlContent() {
		return Temboo_Results::getSubItemByKey($this->base, "htmlContent");
	}

	/*
	This is always drive#comment
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	The date when this comment or any of its replies were last modified (formatted RFC 3339 timestamp)
	*/

	public function getModifiedDate() {
		return Temboo_Results::getSubItemByKey($this->base, "modifiedDate");
	}

	/*
	Get replies for this comment
	*/

	public function getReplies() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "replies");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Reply_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	The status of this comment (open or resolved)
	*/

	public function getStatus() {
		return Temboo_Results::getSubItemByKey($this->base, "status");
	}
}



/*
 A list of comments for a file

*/

class Google_Drive_CommentList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	A Google Drive comment resource
	*/

	public function getComments() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Comment_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	This is always drive#commentList
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	The page token for the next page of comments
	*/

	public function getNextPageToken() {
		return Temboo_Results::getSubItemByKey($this->base, "nextPageToken");
	}
}



/*
 Links for exporting Google Docs to specific formats

*/

class Google_Drive_ExportLinks_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	A link to the file in pdf format
	*/

	public function getPdfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "application/pdf");
	}

	/*
	A link to the file in rtf format
	*/

	public function getRtfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "application/rtf");
	}

	/*
	A link to the file in odt format
	*/

	public function getOdtLink() {
		return Temboo_Results::getSubItemByKey($this->base, "application/vnd.oasis.opendocument.text");
	}

	/*
	A link to the file in xlsx format
	*/

	public function getXlsxLink() {
		return Temboo_Results::getSubItemByKey($this->base, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
	}

	/*
	A link to the file in docx format
	*/

	public function getDocxLink() {
		return Temboo_Results::getSubItemByKey($this->base, "application/vnd.openxmlformats-officedocument.wordprocessingml.document");
	}

	/*
	A link to the file in ods format
	*/

	public function getOdsLink() {
		return Temboo_Results::getSubItemByKey($this->base, "application/x-vnd.oasis.opendocument.spreadsheet");
	}

	/*
	A link to the file in html format
	*/

	public function getHtmlLink() {
		return Temboo_Results::getSubItemByKey($this->base, "text/html");
	}

	/*
	A link to the file in txt format
	*/

	public function getTxtLink() {
		return Temboo_Results::getSubItemByKey($this->base, "text/plain");
	}
}



/*
 A complete Google Drive file resource

*/

class Google_Drive_File_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	A link for opening the file in using a relevant Google editor or viewer
	*/

	public function getAlternateLink() {
		return Temboo_Results::getSubItemByKey($this->base, "alternateLink");
	}

	/*
	Create time for this file (formatted ISO8601 timestamp)
	*/

	public function getCreatedDate() {
		return Temboo_Results::getSubItemByKey($this->base, "createdDate");
	}

	/*
	Whether the file can be edited by the current user
	*/

	public function getEditable() {
		return Temboo_Results::getSubItemByKey($this->base, "editable");
	}

	/*
	A link for embedding the file
	*/

	public function getEmbedLink() {
		return Temboo_Results::getSubItemByKey($this->base, "embedLink");
	}

	/*
	ETag of the file
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A Link for exporting Google Docs to specific formats
	*/

	public function getExportLinks() {
		return new Google_Drive_ExportLinks_output(Temboo_Results::getSubItemByKey($this->base, "exportLinks"));
	}

	/*
	A link to the file's icon
	*/

	public function getIconLink() {
		return Temboo_Results::getSubItemByKey($this->base, "iconLink");
	}

	/*
	The ID of the file
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	The type of file (this is always drive#file)
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	public function getLabels() {
		return new Google_Drive_Labels_output(Temboo_Results::getSubItemByKey($this->base, "labels"));
	}

	/*
	Name of the last user to modify this file. This will only be populated if a user has edited this file
	*/

	public function getLastModifyingUserName() {
		return Temboo_Results::getSubItemByKey($this->base, "lastModifyingUserName");
	}

	/*
	Last time this file was viewed by the user (formatted RFC 3339 timestamp)
	*/

	public function getLastViewedByMeDate() {
		return Temboo_Results::getSubItemByKey($this->base, "lastViewedByMeDate");
	}

	/*
	The mimetype of the file
	*/

	public function getMimeType() {
		return Temboo_Results::getSubItemByKey($this->base, "mimeType");
	}

	/*
	Last time this file was modified by the user (formatted RFC 3339 timestamp)
	*/

	public function getModifiedByMeDate() {
		return Temboo_Results::getSubItemByKey($this->base, "modifiedByMeDate");
	}

	/*
	Last time this file was modified by anyone (formatted RFC 3339 timestamp)
	*/

	public function getModifiedDate() {
		return Temboo_Results::getSubItemByKey($this->base, "modifiedDate");
	}

	/*
	Name(s) of the owner(s) of this file
	*/

	public function getOwnerNames() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "ownerNames");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, $entry);
			}
		}
		return $resultArray;
	}

	/*
	A parent folder which contain this file
	*/

	public function getParents() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "parents");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Parent_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	The number of quota bytes used by this file
	*/

	public function getQuotaBytesUsed() {
		return Temboo_Results::getSubItemByKey($this->base, "quotaBytesUsed");
	}

	/*
	A link back to this file
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}

	/*
	Whether or not this file is shared
	*/

	public function getShared() {
		return Temboo_Results::getSubItemByKey($this->base, "shared");
	}

	/*
	Time at which this file was shared with the user (formatted RFC 3339 timestamp)
	*/

	public function getSharedWithMeDate() {
		return Temboo_Results::getSubItemByKey($this->base, "sharedWithMeDate");
	}

	/*
	A link to the file's thumbnail
	*/

	public function getThumbnailLink() {
		return Temboo_Results::getSubItemByKey($this->base, "thumbnailLink");
	}

	/*
	The title of the this file
	*/

	public function getTitle() {
		return Temboo_Results::getSubItemByKey($this->base, "title");
	}

	/*
	The permissions for the authenticated user on this file.
	*/

	public function getUserPermission() {
		return new Google_Drive_UserPermission_output(Temboo_Results::getSubItemByKey($this->base, "userPermission"));
	}

	/*
	Whether writers can share the document with other users
	*/

	public function getWritersCanShare() {
		return Temboo_Results::getSubItemByKey($this->base, "writersCanShare");
	}
}



/*
 A listing of files in Google Drive

*/

class Google_Drive_FileList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the list
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A Google Drive file resource
	*/

	public function getFiles() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_File_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	The type of resource (this is always rive#fileList)
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link to the next page of files
	*/

	public function getNextLink() {
		return Temboo_Results::getSubItemByKey($this->base, "nextLink");
	}

	/*
	The page token for the next page of files
	*/

	public function getNextPageToken() {
		return Temboo_Results::getSubItemByKey($this->base, "nextPageToken");
	}

	/*
	A link back to this list
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 A label for the file
  
*/

class Google_Drive_Labels_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	Whether or not the file is hidden
	*/

	public function getHidden() {
		return Temboo_Results::getSubItemByKey($this->base, "hidden");
	}

	/*
	Whether or not the file is restricted
	*/

	public function getRestricted() {
		return Temboo_Results::getSubItemByKey($this->base, "restricted");
	}

	/*
	Whether or not the file is starred
	*/

	public function getStarred() {
		return Temboo_Results::getSubItemByKey($this->base, "starred");
	}

	/*
	Whether or not the file is trashed
	*/

	public function getTrashed() {
		return Temboo_Results::getSubItemByKey($this->base, "trashed");
	}

	/*
	Whether or not the file is viewed
	*/

	public function getViewed() {
		return Temboo_Results::getSubItemByKey($this->base, "viewed");
	}
}



/*
 An object containing a parent resource

*/

class Google_Drive_Parent_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The id of the folder
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	Whether or not this folder is the root
	*/

	public function getIsRoot() {
		return Temboo_Results::getSubItemByKey($this->base, "isRoot");
	}

	/*
	The type of resource
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	The link to the parent
	*/

	public function getParentLink() {
		return Temboo_Results::getSubItemByKey($this->base, "parentLink");
	}

	/*
	A link back to this reference
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 A list of parent resources

*/

class Google_Drive_ParentList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the list
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A Google Drive parent resource
	*/

	public function getParents() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Parent_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	The type of resource (this is always drive#parentList)
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link back to this list
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 An object representing a permission resource

*/

class Google_Drive_Permission_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the permission
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	The ID of the permission
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	This is always drive#permission
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	The name for this permission
	*/

	public function getName() {
		return Temboo_Results::getSubItemByKey($this->base, "name");
	}

	/*
	The primary role for this user. Allowed values are: owner, reader, and writer
	*/

	public function getRole() {
		return Temboo_Results::getSubItemByKey($this->base, "role");
	}

	/*
	A link back to this permission
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}

	/*
	The account type. Allowed values are: user, group, domain, and anyone
	*/

	public function getType() {
		return Temboo_Results::getSubItemByKey($this->base, "type");
	}
}



/*
 A list of permission for a file

*/

class Google_Drive_PermissionList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the list
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	A Google Drive permission resource
	*/

	public function getPermissions() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Permission_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	This is always drive#permissionList
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link back to this list
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 An object representing the user's profile picture
  
*/

class Google_Drive_Picture_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	A URL that points to a profile picture of this user
	*/

	public function getUrl() {
		return Temboo_Results::getSubItemByKey($this->base, "url");
	}
}



/*
 An object representing a reply to a comment

*/

class Google_Drive_Reply_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	Get the user who wronte this comment
	*/

	public function getAuthor() {
		return new Google_Drive_Author_output(Temboo_Results::getSubItemByKey($this->base, "author"));
	}

	/*
	The plain text content used to create this reply
	*/

	public function getContent() {
		return Temboo_Results::getSubItemByKey($this->base, "content");
	}

	/*
	The date when this reply was first created (formatted RFC 3339 timestamp)
	*/

	public function getCreatedDate() {
		return Temboo_Results::getSubItemByKey($this->base, "createdDate");
	}

	/*
	Whether this reply has been deleted
	*/

	public function getDeleted() {
		return Temboo_Results::getSubItemByKey($this->base, "deleted");
	}

	/*
	HTML formatted content for this reply
	*/

	public function getHtmlContent() {
		return Temboo_Results::getSubItemByKey($this->base, "htmlContent");
	}

	/*
	This is always drive#commentReply
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	The date when this reply was last modified (formatted RFC 3339 timestamp)
	*/

	public function getModifiedDate() {
		return Temboo_Results::getSubItemByKey($this->base, "modifiedDate");
	}

	/*
	The ID of the reply
	*/

	public function getReplyId() {
		return Temboo_Results::getSubItemByKey($this->base, "replyId");
	}
}



/*
 A list of replies to a specified comment on a file

*/

class Google_Drive_ReplyList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	Get a reply to a Google Drive comment
	*/

	public function getReplies() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Reply_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	This is always drive#commentReplyList
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link to the next page of replies
	*/

	public function getNextLink() {
		return Temboo_Results::getSubItemByKey($this->base, "nextLink");
	}

	/*
	The page token for the next page of replies
	*/

	public function getNextPageToken() {
		return Temboo_Results::getSubItemByKey($this->base, "nextPageToken");
	}
}



/*
 An object representing a revision of a file

*/

class Google_Drive_Revision_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the revision
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	Get links for exporting Google Docs to specific formats
	*/

	public function getExportLinks() {
		return new Google_Drive_ExportLinks_output(Temboo_Results::getSubItemByKey($this->base, "exportLinks"));
	}

	/*
	The ID of the revision
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	This is always drive#revision
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	Name of the last user to modify this revision
	*/

	public function getLastModifyingUserName() {
		return Temboo_Results::getSubItemByKey($this->base, "lastModifyingUserName");
	}

	/*
	The MIME type of the revision
	*/

	public function getMimeType() {
		return Temboo_Results::getSubItemByKey($this->base, "mimeType");
	}

	/*
	Last time this revision was modified (formatted RFC 3339 timestamp)
	*/

	public function getModifiedDate() {
		return Temboo_Results::getSubItemByKey($this->base, "modifiedDate");
	}

	/*
	Whether this revision is published
	*/

	public function getPublished() {
		return Temboo_Results::getSubItemByKey($this->base, "published");
	}

	/*
	A link back to this revision
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 A list of a file's revisions

*/

class Google_Drive_RevisionList_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the list
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	Get a revision for a file
	*/

	public function getRevisions() {
		$listEntries = Temboo_Results::getSubItemByKey($this->base, "items");
		$resultArray = array();
		if(!is_null($listEntries)) {
			foreach ($listEntries as $entry) {
		    	array_push($resultArray, new Google_Drive_Revision_output($entry));
			}
		}
		return $resultArray;
	}

	/*
	This is always drive#revisionList
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	A link back to this list
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}
}



/*
 An object containing a permission resource

*/

class Google_Drive_UserPermission_output 
{
	public function __construct($base) {
		$this->base = $base;
	}
	
	protected function getBase() {
		return $this->base;
	}
	/*
	The ETag of the permission
	*/

	public function getEtag() {
		return Temboo_Results::getSubItemByKey($this->base, "etag");
	}

	/*
	The ID of the permission
	*/

	public function getId() {
		return Temboo_Results::getSubItemByKey($this->base, "id");
	}

	/*
	The type of resource (this is always drive#permission)
	*/

	public function getKind() {
		return Temboo_Results::getSubItemByKey($this->base, "kind");
	}

	/*
	The primary role for this user. Allowed values are: owner, reader, writer
	*/

	public function getRole() {
		return Temboo_Results::getSubItemByKey($this->base, "role");
	}

	/*
	A link back to this permission
	*/

	public function getSelfLink() {
		return Temboo_Results::getSubItemByKey($this->base, "selfLink");
	}

	/*
	The account type. Allowed values are: user, group, domain, anyone
	*/

	public function getType() {
		return Temboo_Results::getSubItemByKey($this->base, "type");
	}
}




?>