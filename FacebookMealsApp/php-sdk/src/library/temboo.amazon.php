<?php

/**
 * Temboo PHP SDK Amazon classes
 *
 * Execute Choreographies from the Temboo Amazon bundle.
 *
 * PHP version 5
 *
 * LICENSE: Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @category   Services
 * @package    Temboo
 * @subpackage Amazon
 * @author     Temboo, Inc.
 * @copyright  2013 Temboo, Inc.
 * @license    http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0
 * @link       http://www.temboo.com
 */
/**
 * Reboots a specified database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance extends Temboo_Choreography
{
    /**
     * Reboots a specified database instance.
     *
     * @param Temboo_Session $session The session that owns this RebootDBInstance Choreo.
     * @return Amazon_RDS_RebootDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RebootDBInstance/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RebootDBInstance Choreo.
     *
     * @param Amazon_RDS_RebootDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RebootDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RebootDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RebootDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RebootDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RebootDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RebootDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RebootDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RebootDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RebootDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RebootDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RebootDBInstance Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RebootDBInstance Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this RebootDBInstance Choreo.
     *
     * @param string $value (required, string) The ID for the DB instance to reboot.
     * @return Amazon_RDS_RebootDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }
}


/**
 * Execution object for the RebootDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RebootDBInstance Choreo.
     *
     * @param Temboo_Session $session The session that owns this RebootDBInstance execution.
     * @param Amazon_RDS_RebootDBInstance $choreo The choreography object for this execution.
     * @param Amazon_RDS_RebootDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RebootDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RebootDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RebootDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RebootDBInstance execution.
     *
     * @return Amazon_RDS_RebootDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RebootDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RebootDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RebootDBInstance_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RebootDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RebootDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RebootDBInstance Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RebootDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RebootDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates only the price and quantity of a particular product with a given product SKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity extends Temboo_Choreography
{
    /**
     * Updates only the price and quantity of a particular product with a given product SKU.
     *
     * @param Temboo_Session $session The session that owns this UpdatePriceAndQuantity Choreo.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/UpdatePriceAndQuantity/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdatePriceAndQuantity Choreo.
     *
     * @param Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdatePriceAndQuantity Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdatePriceAndQuantity Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdatePriceAndQuantity Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdatePriceAndQuantity input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdatePriceAndQuantity Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this UpdatePriceAndQuantity Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this UpdatePriceAndQuantity Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdatePriceAndQuantity Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this UpdatePriceAndQuantity Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Price input for this UpdatePriceAndQuantity Choreo.
     *
     * @param float $value (required, decimal) Enter the unit price for this product. The price must be greater than 0.00. Do NOT include the currency symbol (e.g. $).
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setPrice($value)
    {
        return $this->set('Price', $value);
    }

    /**
     * Set the value for the Quantity input for this UpdatePriceAndQuantity Choreo.
     *
     * @param int $value (required, integer) Enter the quantity of the product you have for sale. The quantity must be a whole number, and should be greater than zero.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setQuantity($value)
    {
        return $this->set('Quantity', $value);
    }

    /**
     * Set the value for the SKU input for this UpdatePriceAndQuantity Choreo.
     *
     * @param string $value (required, string) A SKU is a "Stock Keeping Unit" which you can assign to your products to track your inventory. Provide the SKU that you want to modify.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the TimeToWait input for this UpdatePriceAndQuantity Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the UpdatePriceAndQuantity Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdatePriceAndQuantity Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdatePriceAndQuantity execution.
     * @param Amazon_Marketplace_Feeds_UpdatePriceAndQuantity $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_UpdatePriceAndQuantity $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdatePriceAndQuantity execution.
     *
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdatePriceAndQuantity execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdatePriceAndQuantity Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdatePriceAndQuantity Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_UpdatePriceAndQuantity_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ProcessingStatus" output from this UpdatePriceAndQuantity execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this UpdatePriceAndQuantity execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "SubmissionId" output from this UpdatePriceAndQuantity execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }
    /**
     * Retrieve the value for the "SubmissionResult" output from this UpdatePriceAndQuantity execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Sends a message to a topic's subscribed endpoints.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish extends Temboo_Choreography
{
    /**
     * Sends a message to a topic's subscribed endpoints.
     *
     * @param Temboo_Session $session The session that owns this Publish Choreo.
     * @return Amazon_SNS_Publish New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/Publish/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Publish Choreo.
     *
     * @param Amazon_SNS_Publish_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Publish_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Publish_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_Publish_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Publish Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Publish_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_Publish_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Publish Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Publish Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Publish_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Publish input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this Publish Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this Publish Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the MessageStructure input for this Publish Choreo.
     *
     * @param string $value (optional, string) Can be set to 'json' if you are providing a valid JSON object for the Message input variable.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setMessageStructure($value)
    {
        return $this->set('MessageStructure', $value);
    }

    /**
     * Set the value for the Message input for this Publish Choreo.
     *
     * @param string $value (required, string) The text for the message you want to send to the topic.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setMessage($value)
    {
        return $this->set('Message', $value);
    }

    /**
     * Set the value for the Subject input for this Publish Choreo.
     *
     * @param string $value (optional, string) The "Subject" line of the message when the message is delivered to e-mail endpoints or as a JSON message.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setSubject($value)
    {
        return $this->set('Subject', $value);
    }

    /**
     * Set the value for the TopicArn input for this Publish Choreo.
     *
     * @param string $value (required, string) The ARN of the topic you want to publish to.
     * @return Amazon_SNS_Publish_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the Publish Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Publish Choreo.
     *
     * @param Temboo_Session $session The session that owns this Publish execution.
     * @param Amazon_SNS_Publish $choreo The choreography object for this execution.
     * @param Amazon_SNS_Publish_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Publish_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Publish_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_Publish $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Publish execution.
     *
     * @return Amazon_SNS_Publish_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Publish execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_Publish_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_Publish_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Publish Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Publish_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Publish Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_Publish_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this Publish execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets the request payment configuration of a bucket. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketRequestPayment extends Temboo_Choreography
{
    /**
     * Sets the request payment configuration of a bucket. 
     *
     * @param Temboo_Session $session The session that owns this PutBucketRequestPayment Choreo.
     * @return Amazon_S3_PutBucketRequestPayment New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketRequestPayment/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketRequestPayment Choreo.
     *
     * @param Amazon_S3_PutBucketRequestPayment_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketRequestPayment_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketRequestPayment_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketRequestPayment_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketRequestPayment Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketRequestPayment_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketRequestPayment Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketRequestPayment_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketRequestPayment Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketRequestPayment input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketRequestPayment Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketRequestPayment Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketRequestPayment Choreo.
     *
     * @param string $value (required, string) The name of the bucket to create a request payment configuration for.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the Payer input for this PutBucketRequestPayment Choreo.
     *
     * @param string $value (required, string) Specifies who pays for the download and request fees. Valid values:  Requester or BucketOwner.
     * @return Amazon_S3_PutBucketRequestPayment_Inputs For method chaining.
     */
    public function setPayer($value)
    {
        return $this->set('Payer', $value);
    }
}


/**
 * Execution object for the PutBucketRequestPayment Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketRequestPayment_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketRequestPayment Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketRequestPayment execution.
     * @param Amazon_S3_PutBucketRequestPayment $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketRequestPayment_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketRequestPayment_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketRequestPayment_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketRequestPayment $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketRequestPayment execution.
     *
     * @return Amazon_S3_PutBucketRequestPayment_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketRequestPayment execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketRequestPayment_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketRequestPayment_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketRequestPayment Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketRequestPayment_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketRequestPayment Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketRequestPayment_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketRequestPayment execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Registers a new AMI with Amazon EC2.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage extends Temboo_Choreography
{
    /**
     * Registers a new AMI with Amazon EC2.
     *
     * @param Temboo_Session $session The session that owns this RegisterImage Choreo.
     * @return Amazon_EC2_RegisterImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/RegisterImage/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RegisterImage Choreo.
     *
     * @param Amazon_EC2_RegisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RegisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RegisterImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_RegisterImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RegisterImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RegisterImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_RegisterImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RegisterImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RegisterImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RegisterImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RegisterImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RegisterImage Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RegisterImage Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Architecture input for this RegisterImage Choreo.
     *
     * @param string $value (optional, string) The architecture of the image. Valid values are: i386 or x86_64. Defaults to i386.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setArchitecture($value)
    {
        return $this->set('Architecture', $value);
    }

    /**
     * Set the value for the DeleteOnTermination input for this RegisterImage Choreo.
     *
     * @param bool $value (optional, boolean) Whether the Amazon EBS volume is deleted on instance termination. Defaults to true.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setDeleteOnTermination($value)
    {
        return $this->set('DeleteOnTermination', $value);
    }

    /**
     * Set the value for the Description input for this RegisterImage Choreo.
     *
     * @param string $value (optional, string) The description of the AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the DeviceName input for this RegisterImage Choreo.
     *
     * @param string $value (conditional, string) If registering an Amazon EBS-backed AMI from a snapshot, specify this input with the root device name (e.g., /dev/sda1, or xvda), and SnapshotId.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setDeviceName($value)
    {
        return $this->set('DeviceName', $value);
    }

    /**
     * Set the value for the ImageLocation input for this RegisterImage Choreo.
     *
     * @param string $value (conditional, string) Full path to your AMI manifest in Amazon S3 storage. Required if registering an Amazon-S3 backed AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setImageLocation($value)
    {
        return $this->set('ImageLocation', $value);
    }

    /**
     * Set the value for the Iops input for this RegisterImage Choreo.
     *
     * @param int $value (conditional, integer) The number of I/O operations per second (IOPS) that the volume supports. A valid range is: 100 to 2000.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setIops($value)
    {
        return $this->set('Iops', $value);
    }

    /**
     * Set the value for the KernelId input for this RegisterImage Choreo.
     *
     * @param string $value (optional, string) The ID of the kernel to select.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setKernelId($value)
    {
        return $this->set('KernelId', $value);
    }

    /**
     * Set the value for the Name input for this RegisterImage Choreo.
     *
     * @param string $value (required, string) A name for your AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }

    /**
     * Set the value for the NoDevice input for this RegisterImage Choreo.
     *
     * @param bool $value (optional, boolean) Specifies that no device should be mapped. Defaults to 1 (true).
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setNoDevice($value)
    {
        return $this->set('NoDevice', $value);
    }

    /**
     * Set the value for the RamdiskId input for this RegisterImage Choreo.
     *
     * @param string $value (optional, string) The ID of the RAM disk to select.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setRamdiskId($value)
    {
        return $this->set('RamdiskId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RegisterImage Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RootDeviceName input for this RegisterImage Choreo.
     *
     * @param string $value (conditional, string) The root device name (e.g., /dev/sda1, or xvda). Required if registering an Amazon EBS-backed AMI.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setRootDeviceName($value)
    {
        return $this->set('RootDeviceName', $value);
    }

    /**
     * Set the value for the SnapshotId input for this RegisterImage Choreo.
     *
     * @param string $value (conditional, string) If registering an Amazon EBS-backed AMI from a snapshot, you must at least specify this input with the snapshot ID, and DeviceName with the root device name.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }

    /**
     * Set the value for the VirtualName input for this RegisterImage Choreo.
     *
     * @param string $value (optional, string) The virtual device name.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setVirtualName($value)
    {
        return $this->set('VirtualName', $value);
    }

    /**
     * Set the value for the VolumeSize input for this RegisterImage Choreo.
     *
     * @param int $value (conditional, integer) The size of the volume, in GiBs. Required if you are not creating a volume from a snapshot.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setVolumeSize($value)
    {
        return $this->set('VolumeSize', $value);
    }

    /**
     * Set the value for the VolumeType input for this RegisterImage Choreo.
     *
     * @param string $value (optional, string) The volume type. Valid values are: standard and io.
     * @return Amazon_EC2_RegisterImage_Inputs For method chaining.
     */
    public function setVolumeType($value)
    {
        return $this->set('VolumeType', $value);
    }
}


/**
 * Execution object for the RegisterImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RegisterImage Choreo.
     *
     * @param Temboo_Session $session The session that owns this RegisterImage execution.
     * @param Amazon_EC2_RegisterImage $choreo The choreography object for this execution.
     * @param Amazon_EC2_RegisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RegisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RegisterImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_RegisterImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RegisterImage execution.
     *
     * @return Amazon_EC2_RegisterImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RegisterImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_RegisterImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_RegisterImage_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RegisterImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RegisterImage_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RegisterImage Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_RegisterImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RegisterImage execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a queue with a specified queue URL.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue extends Temboo_Choreography
{
    /**
     * Deletes a queue with a specified queue URL.
     *
     * @param Temboo_Session $session The session that owns this DeleteQueue Choreo.
     * @return Amazon_SQS_DeleteQueue New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/DeleteQueue/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteQueue Choreo.
     *
     * @param Amazon_SQS_DeleteQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteQueue_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_DeleteQueue_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteQueue Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteQueue_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_DeleteQueue_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteQueue Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteQueue Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteQueue_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteQueue input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteQueue Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this DeleteQueue Choreo.
     *
     * @param int $value (required, integer) The id for the AWS account associated with the queue you're deleting a message from (remove all dashes in the account number).
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteQueue Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueName input for this DeleteQueue Choreo.
     *
     * @param string $value (required, string) The name of the queue you want to delete.
     * @return Amazon_SQS_DeleteQueue_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the DeleteQueue Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteQueue Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteQueue execution.
     * @param Amazon_SQS_DeleteQueue $choreo The choreography object for this execution.
     * @param Amazon_SQS_DeleteQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteQueue_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_DeleteQueue $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteQueue execution.
     *
     * @return Amazon_SQS_DeleteQueue_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteQueue execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_DeleteQueue_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_DeleteQueue_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteQueue Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteQueue_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteQueue Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_DeleteQueue_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteQueue execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a user's signing certificate as part of a certificate rotation workflow.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateSigningCertificate extends Temboo_Choreography
{
    /**
     * Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a user's signing certificate as part of a certificate rotation workflow.
     *
     * @param Temboo_Session $session The session that owns this UpdateSigningCertificate Choreo.
     * @return Amazon_IAM_UpdateSigningCertificate New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UpdateSigningCertificate/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateSigningCertificate Choreo.
     *
     * @param Amazon_IAM_UpdateSigningCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateSigningCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateSigningCertificate_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UpdateSigningCertificate_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateSigningCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UpdateSigningCertificate_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateSigningCertificate_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateSigningCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateSigningCertificate input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateSigningCertificate Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateSigningCertificate Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CertificateId input for this UpdateSigningCertificate Choreo.
     *
     * @param string $value (required, string) The ID of the signing certificate you want to update.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function setCertificateId($value)
    {
        return $this->set('CertificateId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateSigningCertificate Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Status input for this UpdateSigningCertificate Choreo.
     *
     * @param string $value (required, string) The status you want to assign to the certificate. Active means the certificate can be used for API calls to AWS, while Inactive means the certificate cannot be used.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function setStatus($value)
    {
        return $this->set('Status', $value);
    }

    /**
     * Set the value for the UserName input for this UpdateSigningCertificate Choreo.
     *
     * @param string $value (optional, string) Name of the user the signing certificate belongs to.
     * @return Amazon_IAM_UpdateSigningCertificate_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the UpdateSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateSigningCertificate_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateSigningCertificate Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateSigningCertificate execution.
     * @param Amazon_IAM_UpdateSigningCertificate $choreo The choreography object for this execution.
     * @param Amazon_IAM_UpdateSigningCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateSigningCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateSigningCertificate_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UpdateSigningCertificate $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateSigningCertificate execution.
     *
     * @return Amazon_IAM_UpdateSigningCertificate_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateSigningCertificate execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UpdateSigningCertificate_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UpdateSigningCertificate_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateSigningCertificate_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateSigningCertificate Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UpdateSigningCertificate_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateSigningCertificate execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves information about the specified role, including the role's path, ARN, RoleId, and the policy granting permission to EC2 to assume the role.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRole extends Temboo_Choreography
{
    /**
     * Retrieves information about the specified role, including the role's path, ARN, RoleId, and the policy granting permission to EC2 to assume the role.
     *
     * @param Temboo_Session $session The session that owns this GetRole Choreo.
     * @return Amazon_IAM_GetRole New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetRole/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetRole Choreo.
     *
     * @param Amazon_IAM_GetRole_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetRole_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetRole_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetRole_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetRole Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetRole_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetRole_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRole_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetRole Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetRole_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetRole input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetRole_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetRole_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetRole Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetRole_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetRole Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetRole_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetRole Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetRole_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this GetRole Choreo.
     *
     * @param string $value (required, string) Name of the role to get information about.
     * @return Amazon_IAM_GetRole_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the GetRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRole_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetRole Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetRole execution.
     * @param Amazon_IAM_GetRole $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetRole_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetRole_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetRole_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetRole $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetRole execution.
     *
     * @return Amazon_IAM_GetRole_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetRole execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetRole_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetRole_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRole_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetRole Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetRole_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetRole execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the user name and password create date for the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetLoginProfile extends Temboo_Choreography
{
    /**
     * Retrieves the user name and password create date for the specified user.
     *
     * @param Temboo_Session $session The session that owns this GetLoginProfile Choreo.
     * @return Amazon_IAM_GetLoginProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetLoginProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetLoginProfile Choreo.
     *
     * @param Amazon_IAM_GetLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetLoginProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetLoginProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetLoginProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetLoginProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetLoginProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetLoginProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetLoginProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetLoginProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetLoginProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetLoginProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetLoginProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetLoginProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetLoginProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetLoginProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetLoginProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this GetLoginProfile Choreo.
     *
     * @param string $value (required, string) Name of the user whose login profile you want to retrieve.
     * @return Amazon_IAM_GetLoginProfile_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the GetLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetLoginProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetLoginProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetLoginProfile execution.
     * @param Amazon_IAM_GetLoginProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetLoginProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetLoginProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetLoginProfile execution.
     *
     * @return Amazon_IAM_GetLoginProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetLoginProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetLoginProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetLoginProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetLoginProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetLoginProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetLoginProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetLoginProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new instance profile.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateInstanceProfile extends Temboo_Choreography
{
    /**
     * Creates a new instance profile.
     *
     * @param Temboo_Session $session The session that owns this CreateInstanceProfile Choreo.
     * @return Amazon_IAM_CreateInstanceProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/CreateInstanceProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateInstanceProfile Choreo.
     *
     * @param Amazon_IAM_CreateInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateInstanceProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_CreateInstanceProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateInstanceProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_CreateInstanceProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateInstanceProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateInstanceProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateInstanceProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_CreateInstanceProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_CreateInstanceProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateInstanceProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateInstanceProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceProfileName input for this CreateInstanceProfile Choreo.
     *
     * @param string $value (required, string) Name of the instance profile to create.
     * @return Amazon_IAM_CreateInstanceProfile_Inputs For method chaining.
     */
    public function setInstanceProfileName($value)
    {
        return $this->set('InstanceProfileName', $value);
    }

    /**
     * Set the value for the Path input for this CreateInstanceProfile Choreo.
     *
     * @param string $value (optional, string) The path for the user name. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_CreateInstanceProfile_Inputs For method chaining.
     */
    public function setPath($value)
    {
        return $this->set('Path', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateInstanceProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_CreateInstanceProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the CreateInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateInstanceProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateInstanceProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateInstanceProfile execution.
     * @param Amazon_IAM_CreateInstanceProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_CreateInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateInstanceProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_CreateInstanceProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateInstanceProfile execution.
     *
     * @return Amazon_IAM_CreateInstanceProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateInstanceProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_CreateInstanceProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_CreateInstanceProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateInstanceProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateInstanceProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_CreateInstanceProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateInstanceProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the specified policy document for the specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroupPolicy extends Temboo_Choreography
{
    /**
     * Retrieves the specified policy document for the specified group.
     *
     * @param Temboo_Session $session The session that owns this GetGroupPolicy Choreo.
     * @return Amazon_IAM_GetGroupPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetGroupPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetGroupPolicy Choreo.
     *
     * @param Amazon_IAM_GetGroupPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetGroupPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetGroupPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetGroupPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetGroupPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetGroupPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetGroupPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetGroupPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroupPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetGroupPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetGroupPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetGroupPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetGroupPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetGroupPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetGroupPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetGroupPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetGroupPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetGroupPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this GetGroupPolicy Choreo.
     *
     * @param string $value (required, string) The name of the group to return.
     * @return Amazon_IAM_GetGroupPolicy_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the PolicyName input for this GetGroupPolicy Choreo.
     *
     * @param string $value (required, string) Name of the policy document to get.
     * @return Amazon_IAM_GetGroupPolicy_Inputs For method chaining.
     */
    public function setPolicyName($value)
    {
        return $this->set('PolicyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetGroupPolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetGroupPolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetGroupPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroupPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetGroupPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetGroupPolicy execution.
     * @param Amazon_IAM_GetGroupPolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetGroupPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetGroupPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetGroupPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetGroupPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetGroupPolicy execution.
     *
     * @return Amazon_IAM_GetGroupPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetGroupPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetGroupPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetGroupPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetGroupPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroupPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetGroupPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetGroupPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetGroupPolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the account aliases associated with the account. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccountAliases extends Temboo_Choreography
{
    /**
     * Lists the account aliases associated with the account. 
     *
     * @param Temboo_Session $session The session that owns this ListAccountAliases Choreo.
     * @return Amazon_IAM_ListAccountAliases New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListAccountAliases/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListAccountAliases Choreo.
     *
     * @param Amazon_IAM_ListAccountAliases_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListAccountAliases_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListAccountAliases_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListAccountAliases_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListAccountAliases Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListAccountAliases_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListAccountAliases_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListAccountAliases Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccountAliases_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListAccountAliases Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListAccountAliases_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListAccountAliases input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListAccountAliases_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListAccountAliases_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListAccountAliases Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListAccountAliases_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListAccountAliases Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListAccountAliases_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListAccountAliases Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListAccountAliases_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListAccountAliases Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListAccountAliases_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListAccountAliases Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListAccountAliases_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListAccountAliases Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccountAliases_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListAccountAliases Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListAccountAliases execution.
     * @param Amazon_IAM_ListAccountAliases $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListAccountAliases_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListAccountAliases_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListAccountAliases_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListAccountAliases $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListAccountAliases execution.
     *
     * @return Amazon_IAM_ListAccountAliases_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListAccountAliases execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListAccountAliases_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListAccountAliases_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListAccountAliases Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccountAliases_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListAccountAliases Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListAccountAliases_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListAccountAliases execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of fulfillment orders fulfilled after (or at) a specified date or by fulfillment method.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders extends Temboo_Choreography
{
    /**
     * Returns a list of fulfillment orders fulfilled after (or at) a specified date or by fulfillment method.
     *
     * @param Temboo_Session $session The session that owns this ListAllFulfillmentOrders Choreo.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/OutboundShipments/ListAllFulfillmentOrders/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListAllFulfillmentOrders Choreo.
     *
     * @param Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListAllFulfillmentOrders Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListAllFulfillmentOrders Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListAllFulfillmentOrders Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListAllFulfillmentOrders input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FulfillmentMethod input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (optional, string) A value used for selecting fulfillment orders based on their fulfillment method. "Consumer" indicates a customer order, and "Removal" indicates that the inventory should be returned to the specified.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setFulfillmentMethod($value)
    {
        return $this->set('FulfillmentMethod', $value);
    }

    /**
     * Set the value for the QueryStartDateTime input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (optional, date) A date used for selecting items that have had changes in inventory availability after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setQueryStartDateTime($value)
    {
        return $this->set('QueryStartDateTime', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListAllFulfillmentOrders Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListAllFulfillmentOrders Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListAllFulfillmentOrders Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListAllFulfillmentOrders execution.
     * @param Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListAllFulfillmentOrders execution.
     *
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListAllFulfillmentOrders execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListAllFulfillmentOrders Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListAllFulfillmentOrders Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_ListAllFulfillmentOrders_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListAllFulfillmentOrders execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the contents of a report with a given report id.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById extends Temboo_Choreography
{
    /**
     * Returns the contents of a report with a given report id.
     *
     * @param Temboo_Session $session The session that owns this GetReportById Choreo.
     * @return Amazon_Marketplace_Reports_GetReportById New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportById/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetReportById Choreo.
     *
     * @param Amazon_Marketplace_Reports_GetReportById_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportById_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportById_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportById Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportById_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportById Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetReportById Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportById input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportById Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportById Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportById Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportById Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportById Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportId input for this GetReportById Choreo.
     *
     * @param int $value (required, integer) The id of the report to retrieve.
     * @return Amazon_Marketplace_Reports_GetReportById_Inputs For method chaining.
     */
    public function setReportId($value)
    {
        return $this->set('ReportId', $value);
    }
}


/**
 * Execution object for the GetReportById Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportById Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetReportById execution.
     * @param Amazon_Marketplace_Reports_GetReportById $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportById_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportById_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportById_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportById $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportById execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportById_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetReportById execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportById_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetReportById Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportById_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetReportById Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportById_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ContentMD5Header" output from this GetReportById execution.
     *
     * @return string (string) 
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContentMD5Header()
    {
        return $this->get('ContentMD5Header');
    }
    /**
     * Retrieve the value for the "Response" output from this GetReportById execution.
     *
     * @return string The response from Amazon which contains the contents of the report requested. This is typically a flat file or XML information.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Reboot an instance by specifying the instance id.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances extends Temboo_Choreography
{
    /**
     * Reboot an instance by specifying the instance id.
     *
     * @param Temboo_Session $session The session that owns this RebootInstances Choreo.
     * @return Amazon_EC2_RebootInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/RebootInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RebootInstances Choreo.
     *
     * @param Amazon_EC2_RebootInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RebootInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RebootInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_RebootInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RebootInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RebootInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_RebootInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RebootInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RebootInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RebootInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RebootInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RebootInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RebootInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this RebootInstances Choreo.
     *
     * @param string $value (required, string) The ID of the instance to reboot. This can be a comma-separated list of up to 10 instance IDs.
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RebootInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_RebootInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the RebootInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RebootInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this RebootInstances execution.
     * @param Amazon_EC2_RebootInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_RebootInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RebootInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RebootInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_RebootInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RebootInstances execution.
     *
     * @return Amazon_EC2_RebootInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RebootInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_RebootInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_RebootInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RebootInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RebootInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RebootInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_RebootInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RebootInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes inventory listings from a Seller Central account with a given flat file of SKUs.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems extends Temboo_Choreography
{
    /**
     * Deletes inventory listings from a Seller Central account with a given flat file of SKUs.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItems Choreo.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/DeleteInventoryItems/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteInventoryItems Choreo.
     *
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteInventoryItems Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteInventoryItems Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteInventoryItems Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteInventoryItems input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the SKUs input for this DeleteInventoryItems Choreo.
     *
     * @param string $value (conditional, multiline) The list of SKUs associating with the products to delete. SKUs are provided as Tab Delimited values (do not include a sku column name).
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setSKUs($value)
    {
        return $this->set('SKUs', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteInventoryItems Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this DeleteInventoryItems Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this DeleteInventoryItems Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteInventoryItems Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DeleteOptions input for this DeleteInventoryItems Choreo.
     *
     * @param string $value (optional, string) Use 'd' to reduce the listings inventory to 0 and keep details in the system. Use 'x'  to completely delete listings from your current inventory. Defaults to "d".
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setDeleteOptions($value)
    {
        return $this->set('DeleteOptions', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteInventoryItems Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this DeleteInventoryItems Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the DeleteInventoryItems Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteInventoryItems Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItems execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItems $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_DeleteInventoryItems $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteInventoryItems execution.
     *
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteInventoryItems execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItems_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteInventoryItems Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItems_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteInventoryItems Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItems_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ProcessingStatus" output from this DeleteInventoryItems execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteInventoryItems execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "SubmissionId" output from this DeleteInventoryItems execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }
    /**
     * Retrieve the value for the "SubmissionResult" output from this DeleteInventoryItems execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Returns one or more messages from the specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage extends Temboo_Choreography
{
    /**
     * Returns one or more messages from the specified queue.
     *
     * @param Temboo_Session $session The session that owns this ReceiveMessage Choreo.
     * @return Amazon_SQS_ReceiveMessage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/ReceiveMessage/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ReceiveMessage Choreo.
     *
     * @param Amazon_SQS_ReceiveMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ReceiveMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ReceiveMessage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_ReceiveMessage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ReceiveMessage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ReceiveMessage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_ReceiveMessage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ReceiveMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ReceiveMessage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ReceiveMessage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ReceiveMessage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ReceiveMessage Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this ReceiveMessage Choreo.
     *
     * @param int $value (required, integer) The id for the AWS account associated with the queue you're retrieving a message from (remove all dashes in the account number).
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ReceiveMessage Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this ReceiveMessage Choreo.
     *
     * @param string $value (optional, string) The attribute you to return. Values are: All (default), SenderId, SentTimestamp, ApproximateReceiveCount, or ApproximateFirstReceiveTimestamp.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the MaxNumberOfMessages input for this ReceiveMessage Choreo.
     *
     * @param int $value (optional, integer) The maximum number of messages to return. Defaults to 1.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setMaxNumberOfMessages($value)
    {
        return $this->set('MaxNumberOfMessages', $value);
    }

    /**
     * Set the value for the QueueName input for this ReceiveMessage Choreo.
     *
     * @param string $value (required, string) The name of the queue you want to retrieve a message from.
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }

    /**
     * Set the value for the VisibilityTimeout input for this ReceiveMessage Choreo.
     *
     * @param int $value (optional, integer) The duration (in seconds) that the received messages are hidden from future retrieve requests after a ReceiveMessage request (max is 43200).
     * @return Amazon_SQS_ReceiveMessage_Inputs For method chaining.
     */
    public function setVisibilityTimeout($value)
    {
        return $this->set('VisibilityTimeout', $value);
    }
}


/**
 * Execution object for the ReceiveMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ReceiveMessage Choreo.
     *
     * @param Temboo_Session $session The session that owns this ReceiveMessage execution.
     * @param Amazon_SQS_ReceiveMessage $choreo The choreography object for this execution.
     * @param Amazon_SQS_ReceiveMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ReceiveMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ReceiveMessage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_ReceiveMessage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ReceiveMessage execution.
     *
     * @return Amazon_SQS_ReceiveMessage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ReceiveMessage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_ReceiveMessage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_ReceiveMessage_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ReceiveMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ReceiveMessage_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ReceiveMessage Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_ReceiveMessage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ReceiveMessage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Describes one or more of your key pairs.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeKeyPairs extends Temboo_Choreography
{
    /**
     * Describes one or more of your key pairs.
     *
     * @param Temboo_Session $session The session that owns this DescribeKeyPairs Choreo.
     * @return Amazon_EC2_DescribeKeyPairs New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeKeyPairs/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeKeyPairs Choreo.
     *
     * @param Amazon_EC2_DescribeKeyPairs_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeKeyPairs_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeKeyPairs_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeKeyPairs_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeKeyPairs Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeKeyPairs_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeKeyPairs Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeKeyPairs_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeKeyPairs Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeKeyPairs input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeKeyPairs Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeKeyPairs Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeKeyPairs Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow the results with.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeKeyPairs Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the KeyName input for this DescribeKeyPairs Choreo.
     *
     * @param string $value (optional, string) One or more key pair names to return. This can be a comma-separated list of up to 10 key pair namess.
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function setKeyName($value)
    {
        return $this->set('KeyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeKeyPairs Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeKeyPairs_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DescribeKeyPairs Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeKeyPairs_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeKeyPairs Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeKeyPairs execution.
     * @param Amazon_EC2_DescribeKeyPairs $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeKeyPairs_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeKeyPairs_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeKeyPairs_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeKeyPairs $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeKeyPairs execution.
     *
     * @return Amazon_EC2_DescribeKeyPairs_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeKeyPairs execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeKeyPairs_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeKeyPairs_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeKeyPairs Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeKeyPairs_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeKeyPairs Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeKeyPairs_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeKeyPairs execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the names of the policies associated with the specified role. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfilesForRole extends Temboo_Choreography
{
    /**
     * Lists the names of the policies associated with the specified role. 
     *
     * @param Temboo_Session $session The session that owns this ListInstanceProfilesForRole Choreo.
     * @return Amazon_IAM_ListInstanceProfilesForRole New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListInstanceProfilesForRole/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListInstanceProfilesForRole Choreo.
     *
     * @param Amazon_IAM_ListInstanceProfilesForRole_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListInstanceProfilesForRole_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListInstanceProfilesForRole_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInstanceProfilesForRole Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListInstanceProfilesForRole_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInstanceProfilesForRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfilesForRole_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListInstanceProfilesForRole Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInstanceProfilesForRole input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInstanceProfilesForRole Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInstanceProfilesForRole Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListInstanceProfilesForRole Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListInstanceProfilesForRole Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListInstanceProfilesForRole Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this ListInstanceProfilesForRole Choreo.
     *
     * @param string $value (required, string) The name of the role to list instance profiles for.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the ListInstanceProfilesForRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfilesForRole_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInstanceProfilesForRole Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListInstanceProfilesForRole execution.
     * @param Amazon_IAM_ListInstanceProfilesForRole $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListInstanceProfilesForRole_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListInstanceProfilesForRole_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListInstanceProfilesForRole $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInstanceProfilesForRole execution.
     *
     * @return Amazon_IAM_ListInstanceProfilesForRole_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListInstanceProfilesForRole execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListInstanceProfilesForRole_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListInstanceProfilesForRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfilesForRole_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListInstanceProfilesForRole Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListInstanceProfilesForRole_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListInstanceProfilesForRole execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of DBSecurityGroup descriptions. The list will can be filtered by specifying a DBSecurityGroupName.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup extends Temboo_Choreography
{
    /**
     * Returns a list of DBSecurityGroup descriptions. The list will can be filtered by specifying a DBSecurityGroupName.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSecurityGroup Choreo.
     * @return Amazon_RDS_DescribeDBSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeDBSecurityGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeDBSecurityGroup Choreo.
     *
     * @param Amazon_RDS_DescribeDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeDBSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeDBSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeDBSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeDBSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeDBSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this DescribeDBSecurityGroup Choreo.
     *
     * @param string $value (optional, string) The name for the security group you want to retrieve information for.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }

    /**
     * Set the value for the Marker input for this DescribeDBSecurityGroup Choreo.
     *
     * @param int $value (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeDBSecurityGroup Choreo.
     *
     * @param int $value (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }
}


/**
 * Execution object for the DescribeDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeDBSecurityGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSecurityGroup execution.
     * @param Amazon_RDS_DescribeDBSecurityGroup $choreo The choreography object for this execution.
     * @param Amazon_RDS_DescribeDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeDBSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeDBSecurityGroup execution.
     *
     * @return Amazon_RDS_DescribeDBSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeDBSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeDBSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeDBSecurityGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeDBSecurityGroup execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of your queues.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues extends Temboo_Choreography
{
    /**
     * Returns a list of your queues.
     *
     * @param Temboo_Session $session The session that owns this ListQueues Choreo.
     * @return Amazon_SQS_ListQueues New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/ListQueues/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListQueues Choreo.
     *
     * @param Amazon_SQS_ListQueues_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ListQueues_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ListQueues_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_ListQueues_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListQueues Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ListQueues_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_ListQueues_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListQueues Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListQueues Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ListQueues_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListQueues input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListQueues Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListQueues Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueNamePrefix input for this ListQueues Choreo.
     *
     * @param string $value (optional, string) A string used to filter the list of queues.
     * @return Amazon_SQS_ListQueues_Inputs For method chaining.
     */
    public function setQueueNamePrefix($value)
    {
        return $this->set('QueueNamePrefix', $value);
    }
}


/**
 * Execution object for the ListQueues Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListQueues Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListQueues execution.
     * @param Amazon_SQS_ListQueues $choreo The choreography object for this execution.
     * @param Amazon_SQS_ListQueues_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ListQueues_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ListQueues_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_ListQueues $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListQueues execution.
     *
     * @return Amazon_SQS_ListQueues_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListQueues execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_ListQueues_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_ListQueues_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListQueues Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ListQueues_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListQueues Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_ListQueues_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListQueues execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows you to add to or replace a policy on a bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy extends Temboo_Choreography
{
    /**
     * Allows you to add to or replace a policy on a bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketPolicy Choreo.
     * @return Amazon_S3_PutBucketPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketPolicy Choreo.
     *
     * @param Amazon_S3_PutBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Policy input for this PutBucketPolicy Choreo.
     *
     * @param string $value (required, json) A JSON string containing the policy information.  See Choreo documentation for a sample JSON policy.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setPolicy($value)
    {
        return $this->set('Policy', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketPolicy Choreo.
     *
     * @param string $value (required, string) The name of the bucket to create or update a policy for.
     * @return Amazon_S3_PutBucketPolicy_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the PutBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketPolicy execution.
     * @param Amazon_S3_PutBucketPolicy $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketPolicy execution.
     *
     * @return Amazon_S3_PutBucketPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketPolicy execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful policy creation, no content is returned and this output variable is empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListServerCertificates extends Temboo_Choreography
{
    /**
     * Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.
     *
     * @param Temboo_Session $session The session that owns this ListServerCertificates Choreo.
     * @return Amazon_IAM_ListServerCertificates New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListServerCertificates/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListServerCertificates Choreo.
     *
     * @param Amazon_IAM_ListServerCertificates_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListServerCertificates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListServerCertificates_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListServerCertificates_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListServerCertificates Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListServerCertificates_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListServerCertificates_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListServerCertificates Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListServerCertificates_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListServerCertificates Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListServerCertificates_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListServerCertificates input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListServerCertificates Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListServerCertificates Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListServerCertificates Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListServerCertificates Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the PathPrefix input for this ListServerCertificates Choreo.
     *
     * @param string $value (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function setPathPrefix($value)
    {
        return $this->set('PathPrefix', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListServerCertificates Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListServerCertificates_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListServerCertificates Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListServerCertificates_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListServerCertificates Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListServerCertificates execution.
     * @param Amazon_IAM_ListServerCertificates $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListServerCertificates_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListServerCertificates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListServerCertificates_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListServerCertificates $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListServerCertificates execution.
     *
     * @return Amazon_IAM_ListServerCertificates_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListServerCertificates execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListServerCertificates_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListServerCertificates_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListServerCertificates Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListServerCertificates_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListServerCertificates Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListServerCertificates_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListServerCertificates execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves information about the specified instance profile, including the instance profile's path, ARN, and RoleId.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetInstanceProfile extends Temboo_Choreography
{
    /**
     * Retrieves information about the specified instance profile, including the instance profile's path, ARN, and RoleId.
     *
     * @param Temboo_Session $session The session that owns this GetInstanceProfile Choreo.
     * @return Amazon_IAM_GetInstanceProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetInstanceProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetInstanceProfile Choreo.
     *
     * @param Amazon_IAM_GetInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetInstanceProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetInstanceProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetInstanceProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetInstanceProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetInstanceProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetInstanceProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetInstanceProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetInstanceProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetInstanceProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetInstanceProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetInstanceProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceProfileName input for this GetInstanceProfile Choreo.
     *
     * @param string $value (required, string) Name of the instance profile to get information about.
     * @return Amazon_IAM_GetInstanceProfile_Inputs For method chaining.
     */
    public function setInstanceProfileName($value)
    {
        return $this->set('InstanceProfileName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetInstanceProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetInstanceProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetInstanceProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetInstanceProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetInstanceProfile execution.
     * @param Amazon_IAM_GetInstanceProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetInstanceProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetInstanceProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetInstanceProfile execution.
     *
     * @return Amazon_IAM_GetInstanceProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetInstanceProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetInstanceProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetInstanceProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetInstanceProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetInstanceProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetInstanceProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetInstanceProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the logging status and user logging permissions for the specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLogging extends Temboo_Choreography
{
    /**
     * Retrieves the logging status and user logging permissions for the specified bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketLogging Choreo.
     * @return Amazon_S3_GetBucketLogging New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketLogging/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketLogging Choreo.
     *
     * @param Amazon_S3_GetBucketLogging_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLogging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLogging_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketLogging_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketLogging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLogging_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketLogging_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketLogging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLogging_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketLogging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLogging_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketLogging input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketLogging_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketLogging_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketLogging Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLogging_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketLogging Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLogging_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketLogging Choreo.
     *
     * @param string $value (required, string) The name of the bucket to retrieve logging information for.
     * @return Amazon_S3_GetBucketLogging_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketLogging Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketLogging_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketLogging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLogging_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketLogging Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketLogging execution.
     * @param Amazon_S3_GetBucketLogging $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketLogging_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLogging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLogging_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketLogging $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketLogging execution.
     *
     * @return Amazon_S3_GetBucketLogging_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketLogging execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketLogging_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketLogging_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketLogging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLogging_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketLogging Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketLogging_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketLogging execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of products and their attributes, based on ASIN values that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct extends Temboo_Choreography
{
    /**
     * Returns a list of products and their attributes, based on ASIN values that you specify.
     *
     * @param Temboo_Session $session The session that owns this GetMatchingProduct Choreo.
     * @return Amazon_Marketplace_Products_GetMatchingProduct New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetMatchingProduct/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetMatchingProduct Choreo.
     *
     * @param Amazon_Marketplace_Products_GetMatchingProduct_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetMatchingProduct_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetMatchingProduct_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetMatchingProduct Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetMatchingProduct_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetMatchingProduct Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetMatchingProduct Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetMatchingProduct input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetMatchingProduct Choreo.
     *
     * @param string $value (required, string) A comma-separated list of up to 10 ASIN values used to identify products in the given marketplace.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetMatchingProduct Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetMatchingProduct Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetMatchingProduct Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetMatchingProduct Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetMatchingProduct Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetMatchingProduct Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetMatchingProduct Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetMatchingProduct Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetMatchingProduct execution.
     * @param Amazon_Marketplace_Products_GetMatchingProduct $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetMatchingProduct_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetMatchingProduct_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetMatchingProduct $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetMatchingProduct execution.
     *
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetMatchingProduct execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetMatchingProduct_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetMatchingProduct Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetMatchingProduct_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetMatchingProduct Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetMatchingProduct_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetMatchingProduct execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified policy associated with the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUserPolicy extends Temboo_Choreography
{
    /**
     * Deletes the specified policy associated with the specified user.
     *
     * @param Temboo_Session $session The session that owns this DeleteUserPolicy Choreo.
     * @return Amazon_IAM_DeleteUserPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteUserPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteUserPolicy Choreo.
     *
     * @param Amazon_IAM_DeleteUserPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteUserPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteUserPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteUserPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteUserPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteUserPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteUserPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUserPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteUserPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteUserPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteUserPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteUserPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the PolicyName input for this DeleteUserPolicy Choreo.
     *
     * @param string $value (required, string) Name of the user policy document you would like to delete.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs For method chaining.
     */
    public function setPolicyName($value)
    {
        return $this->set('PolicyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteUserPolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteUserPolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this DeleteUserPolicy Choreo.
     *
     * @param string $value (required, string) Name of the user to delete the specified policy for.
     * @return Amazon_IAM_DeleteUserPolicy_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the DeleteUserPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUserPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteUserPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteUserPolicy execution.
     * @param Amazon_IAM_DeleteUserPolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteUserPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteUserPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteUserPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteUserPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteUserPolicy execution.
     *
     * @return Amazon_IAM_DeleteUserPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteUserPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteUserPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteUserPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteUserPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUserPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteUserPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteUserPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteUserPolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets an attribute of a specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes extends Temboo_Choreography
{
    /**
     * Sets an attribute of a specified queue.
     *
     * @param Temboo_Session $session The session that owns this SetQueueAttributes Choreo.
     * @return Amazon_SQS_SetQueueAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/SetQueueAttributes/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SetQueueAttributes Choreo.
     *
     * @param Amazon_SQS_SetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SetQueueAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_SetQueueAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SetQueueAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SetQueueAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_SetQueueAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SetQueueAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SetQueueAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SetQueueAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SetQueueAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this SetQueueAttributes Choreo.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this SetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The name of the attribute that you want to set. Valid values are: VisibilityTimeout, Policy, MaximumMessageSize, or MessageRetentionPeriod.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the AttributeValue input for this SetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The value of the attribute you want to set. Corresponds to the AttributeName you specify.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setAttributeValue($value)
    {
        return $this->set('AttributeValue', $value);
    }

    /**
     * Set the value for the QueueName input for this SetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The name of the queue you want to set attributes for.
     * @return Amazon_SQS_SetQueueAttributes_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the SetQueueAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SetQueueAttributes Choreo.
     *
     * @param Temboo_Session $session The session that owns this SetQueueAttributes execution.
     * @param Amazon_SQS_SetQueueAttributes $choreo The choreography object for this execution.
     * @param Amazon_SQS_SetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SetQueueAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_SetQueueAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SetQueueAttributes execution.
     *
     * @return Amazon_SQS_SetQueueAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SetQueueAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_SetQueueAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_SetQueueAttributes_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SetQueueAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SetQueueAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SetQueueAttributes Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_SetQueueAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this SetQueueAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadServerCertificate extends Temboo_Choreography
{
    /**
     * Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.
     *
     * @param Temboo_Session $session The session that owns this UploadServerCertificate Choreo.
     * @return Amazon_IAM_UploadServerCertificate New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UploadServerCertificate/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UploadServerCertificate Choreo.
     *
     * @param Amazon_IAM_UploadServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UploadServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UploadServerCertificate_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UploadServerCertificate_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UploadServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UploadServerCertificate_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UploadServerCertificate_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UploadServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadServerCertificate_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UploadServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UploadServerCertificate_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UploadServerCertificate input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UploadServerCertificate Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UploadServerCertificate Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CertificateBody input for this UploadServerCertificate Choreo.
     *
     * @param string $value (required, multiline) The contents of the signing certificate.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setCertificateBody($value)
    {
        return $this->set('CertificateBody', $value);
    }

    /**
     * Set the value for the CertificateChain input for this UploadServerCertificate Choreo.
     *
     * @param string $value (optional, multiline) The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setCertificateChain($value)
    {
        return $this->set('CertificateChain', $value);
    }

    /**
     * Set the value for the Path input for this UploadServerCertificate Choreo.
     *
     * @param string $value (optional, string) The path for the server certificate.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setPath($value)
    {
        return $this->set('Path', $value);
    }

    /**
     * Set the value for the PrivateKey input for this UploadServerCertificate Choreo.
     *
     * @param string $value (required, multiline) The contents of the private key in PEM-encoded format.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setPrivateKey($value)
    {
        return $this->set('PrivateKey', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UploadServerCertificate Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ServerCertificateName input for this UploadServerCertificate Choreo.
     *
     * @param string $value (required, string) The name for the server certificate. Do not include the path in this value.
     * @return Amazon_IAM_UploadServerCertificate_Inputs For method chaining.
     */
    public function setServerCertificateName($value)
    {
        return $this->set('ServerCertificateName', $value);
    }
}


/**
 * Execution object for the UploadServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadServerCertificate_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UploadServerCertificate Choreo.
     *
     * @param Temboo_Session $session The session that owns this UploadServerCertificate execution.
     * @param Amazon_IAM_UploadServerCertificate $choreo The choreography object for this execution.
     * @param Amazon_IAM_UploadServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UploadServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UploadServerCertificate_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UploadServerCertificate $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UploadServerCertificate execution.
     *
     * @return Amazon_IAM_UploadServerCertificate_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UploadServerCertificate execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UploadServerCertificate_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UploadServerCertificate_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UploadServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadServerCertificate_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UploadServerCertificate Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UploadServerCertificate_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UploadServerCertificate execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Describes one or more of the tags for your EC2 resources. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeTags extends Temboo_Choreography
{
    /**
     * Describes one or more of the tags for your EC2 resources. 
     *
     * @param Temboo_Session $session The session that owns this DescribeTags Choreo.
     * @return Amazon_EC2_DescribeTags New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeTags/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeTags Choreo.
     *
     * @param Amazon_EC2_DescribeTags_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeTags_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeTags_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeTags_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeTags Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeTags_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeTags_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeTags_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeTags Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeTags_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeTags input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeTags_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeTags_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeTags Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeTags_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeTags Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeTags_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeTags Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow results with.
     * @return Amazon_EC2_DescribeTags_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeTags Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeTags_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeTags Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeTags_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DescribeTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeTags_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeTags Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeTags execution.
     * @param Amazon_EC2_DescribeTags $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeTags_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeTags_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeTags_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeTags $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeTags execution.
     *
     * @return Amazon_EC2_DescribeTags_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeTags execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeTags_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeTags_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeTags_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeTags Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeTags_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeTags execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of reports that were created in the previous 90 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList extends Temboo_Choreography
{
    /**
     * Returns a list of reports that were created in the previous 90 days.
     *
     * @param Temboo_Session $session The session that owns this GetReportList Choreo.
     * @return Amazon_Marketplace_Reports_GetReportList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportList/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetReportList Choreo.
     *
     * @param Amazon_Marketplace_Reports_GetReportList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetReportList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportList Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportList Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportList Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportList Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Acknowledged input for this GetReportList Choreo.
     *
     * @param bool $value (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to "true" to list order reports that have been acknowledged.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAcknowledged($value)
    {
        return $this->set('Acknowledged', $value);
    }

    /**
     * Set the value for the AvailableFromDate input for this GetReportList Choreo.
     *
     * @param string $value (optional, date) The earliest date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAvailableFromDate($value)
    {
        return $this->set('AvailableFromDate', $value);
    }

    /**
     * Set the value for the AvailableToDate input for this GetReportList Choreo.
     *
     * @param string $value (optional, date) The most recent date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setAvailableToDate($value)
    {
        return $this->set('AvailableToDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportList Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxCount input for this GetReportList Choreo.
     *
     * @param int $value (optional, integer) A non-negative integer that represents the maximum number of report requests to return. Defaults to 10. Max is 100.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setMaxCount($value)
    {
        return $this->set('MaxCount', $value);
    }

    /**
     * Set the value for the ReportRequestId input for this GetReportList Choreo.
     *
     * @param int $value (optional, integer) A ReportRequestId value. If you pass a ReportRequestId value, other query conditions are ignored.
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setReportRequestId($value)
    {
        return $this->set('ReportRequestId', $value);
    }

    /**
     * Set the value for the ReportType input for this GetReportList Choreo.
     *
     * @param string $value (optional, string) A ReportType enumeration value (i.e. GET_ORDERS_DATA_).
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetReportList Choreo.
     *
     * @param string $value (conditional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Reports_GetReportList_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetReportList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportList Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetReportList execution.
     * @param Amazon_Marketplace_Reports_GetReportList $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportList execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetReportList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportList_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetReportList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportList_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetReportList Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ReportId" output from this GetReportList execution.
     *
     * @return int (integer) The report id parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportId()
    {
        return $this->get('ReportId');
    }
    /**
     * Retrieve the value for the "Response" output from this GetReportList execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the password policy for the AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountPasswordPolicy extends Temboo_Choreography
{
    /**
     * Retrieves the password policy for the AWS account.
     *
     * @param Temboo_Session $session The session that owns this GetAccountPasswordPolicy Choreo.
     * @return Amazon_IAM_GetAccountPasswordPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetAccountPasswordPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAccountPasswordPolicy Choreo.
     *
     * @param Amazon_IAM_GetAccountPasswordPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetAccountPasswordPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetAccountPasswordPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountPasswordPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetAccountPasswordPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountPasswordPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAccountPasswordPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountPasswordPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetAccountPasswordPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetAccountPasswordPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAccountPasswordPolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountPasswordPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountPasswordPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAccountPasswordPolicy execution.
     * @param Amazon_IAM_GetAccountPasswordPolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetAccountPasswordPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetAccountPasswordPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetAccountPasswordPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountPasswordPolicy execution.
     *
     * @return Amazon_IAM_GetAccountPasswordPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAccountPasswordPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetAccountPasswordPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountPasswordPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAccountPasswordPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetAccountPasswordPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetAccountPasswordPolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a bucket from your Amazon S3 account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket extends Temboo_Choreography
{
    /**
     * Deletes a bucket from your Amazon S3 account.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucket Choreo.
     * @return Amazon_S3_DeleteBucket New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucket/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteBucket Choreo.
     *
     * @param Amazon_S3_DeleteBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucket_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucket_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucket Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucket_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucket_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteBucket Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucket_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucket input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucket Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucket Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucket Choreo.
     *
     * @param string $value (required, string) The name of the bucket that will be deleted.
     * @return Amazon_S3_DeleteBucket_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucket Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucket execution.
     * @param Amazon_S3_DeleteBucket $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucket_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucket $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucket execution.
     *
     * @return Amazon_S3_DeleteBucket_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteBucket execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucket_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucket_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucket_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteBucket Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucket_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteBucket execution.
     *
     * @return string The response from Amazon. Note that no content is returned for successful deletions.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a report request and submits the request to Amazon MWS.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport extends Temboo_Choreography
{
    /**
     * Creates a report request and submits the request to Amazon MWS.
     *
     * @param Temboo_Session $session The session that owns this RequestReport Choreo.
     * @return Amazon_Marketplace_Reports_RequestReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/RequestReport/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RequestReport Choreo.
     *
     * @param Amazon_Marketplace_Reports_RequestReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RequestReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RequestReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_RequestReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RequestReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_RequestReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RequestReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RequestReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RequestReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RequestReport Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this RequestReport Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this RequestReport Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RequestReport Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the EndDate input for this RequestReport Choreo.
     *
     * @param string $value (optional, date) The end of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this RequestReport Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportOptions input for this RequestReport Choreo.
     *
     * @param string $value (optional, string) A Boolean value that shows or hides an additional column of information on several order reports. When set to ShowSalesChannel=true, an additional column is added showing the sales channel.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setReportOptions($value)
    {
        return $this->set('ReportOptions', $value);
    }

    /**
     * Set the value for the ReportType input for this RequestReport Choreo.
     *
     * @param string $value (optional, string) A ReportType enumeration value. Defaults to _GET_FLAT_FILE_OPEN_LISTINGS_DATA_.
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RequestReport Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the StartDate input for this RequestReport Choreo.
     *
     * @param string $value (optional, date) The start of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RequestReport_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }
}


/**
 * Execution object for the RequestReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RequestReport Choreo.
     *
     * @param Temboo_Session $session The session that owns this RequestReport execution.
     * @param Amazon_Marketplace_Reports_RequestReport $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_RequestReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RequestReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RequestReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_RequestReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RequestReport execution.
     *
     * @return Amazon_Marketplace_Reports_RequestReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RequestReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_RequestReport_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RequestReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RequestReport_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RequestReport Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RequestReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this RequestReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this RequestReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Response" output from this RequestReport execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about DB Snapshots.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot extends Temboo_Choreography
{
    /**
     * Returns information about DB Snapshots.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSnapshot Choreo.
     * @return Amazon_RDS_DescribeDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeDBSnapshot/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeDBSnapshot Choreo.
     *
     * @param Amazon_RDS_DescribeDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this DescribeDBSnapshot Choreo.
     *
     * @param string $value (optional, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this DescribeDBSnapshot Choreo.
     *
     * @param string $value (optional, string) The unique identifier for the db snapshot you're retrieving information for.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeDBSnapshot Choreo.
     *
     * @param int $value (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
     * @return Amazon_RDS_DescribeDBSnapshot_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }
}


/**
 * Execution object for the DescribeDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeDBSnapshot Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBSnapshot execution.
     * @param Amazon_RDS_DescribeDBSnapshot $choreo The choreography object for this execution.
     * @param Amazon_RDS_DescribeDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeDBSnapshot execution.
     *
     * @return Amazon_RDS_DescribeDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeDBSnapshot Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns transactions for a specified subscription id.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction extends Temboo_Choreography
{
    /**
     * Returns transactions for a specified subscription id.
     *
     * @param Temboo_Session $session The session that owns this GetTransaction Choreo.
     * @return Amazon_FPS_GetTransaction New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetTransaction/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetTransaction Choreo.
     *
     * @param Amazon_FPS_GetTransaction_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransaction_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransaction_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetTransaction_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetTransaction Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransaction_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetTransaction_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetTransaction Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetTransaction Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransaction_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetTransaction input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetTransaction Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetTransaction Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetTransaction Choreo.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the SubscriptionId input for this GetTransaction Choreo.
     *
     * @param string $value (required, string) The ID for the subscription to retrieve the transactions for.
     * @return Amazon_FPS_GetTransaction_Inputs For method chaining.
     */
    public function setSubscriptionId($value)
    {
        return $this->set('SubscriptionId', $value);
    }
}


/**
 * Execution object for the GetTransaction Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetTransaction Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetTransaction execution.
     * @param Amazon_FPS_GetTransaction $choreo The choreography object for this execution.
     * @param Amazon_FPS_GetTransaction_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransaction_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransaction_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetTransaction $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetTransaction execution.
     *
     * @return Amazon_FPS_GetTransaction_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetTransaction execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetTransaction_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetTransaction_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetTransaction Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransaction_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetTransaction Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetTransaction_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetTransaction execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Disable monitoring for a specified instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances extends Temboo_Choreography
{
    /**
     * Disable monitoring for a specified instance.
     *
     * @param Temboo_Session $session The session that owns this UnmonitorInstances Choreo.
     * @return Amazon_EC2_UnmonitorInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/UnmonitorInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UnmonitorInstances Choreo.
     *
     * @param Amazon_EC2_UnmonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_UnmonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_UnmonitorInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_UnmonitorInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UnmonitorInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_UnmonitorInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_UnmonitorInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UnmonitorInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UnmonitorInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_UnmonitorInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UnmonitorInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UnmonitorInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UnmonitorInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this UnmonitorInstances Choreo.
     *
     * @param string $value (required, string) The ID(s) of the instance(s) you want to stop monitoring. This can be a comma-separated list of up to 10 instance IDs.
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UnmonitorInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_UnmonitorInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the UnmonitorInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UnmonitorInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this UnmonitorInstances execution.
     * @param Amazon_EC2_UnmonitorInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_UnmonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_UnmonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_UnmonitorInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_UnmonitorInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UnmonitorInstances execution.
     *
     * @return Amazon_EC2_UnmonitorInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UnmonitorInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_UnmonitorInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_UnmonitorInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UnmonitorInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_UnmonitorInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UnmonitorInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_UnmonitorInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UnmonitorInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Create a snapshot from a specified EBS volume.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot extends Temboo_Choreography
{
    /**
     * Create a snapshot from a specified EBS volume.
     *
     * @param Temboo_Session $session The session that owns this CreateSnapshot Choreo.
     * @return Amazon_EC2_CreateSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateSnapshot/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateSnapshot Choreo.
     *
     * @param Amazon_EC2_CreateSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateSnapshot Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateSnapshot Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Description input for this CreateSnapshot Choreo.
     *
     * @param string $value (optional, string) A description for the volume that you want to create.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateSnapshot Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the VolumeId input for this CreateSnapshot Choreo.
     *
     * @param string $value (required, string) The id of the EBS volume to snapshot.
     * @return Amazon_EC2_CreateSnapshot_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the CreateSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSnapshot Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateSnapshot execution.
     * @param Amazon_EC2_CreateSnapshot $choreo The choreography object for this execution.
     * @param Amazon_EC2_CreateSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSnapshot execution.
     *
     * @return Amazon_EC2_CreateSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateSnapshot_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateSnapshot Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateSnapshot execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Releases an Elastic IP address allocated to your account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ReleaseAddress extends Temboo_Choreography
{
    /**
     * Releases an Elastic IP address allocated to your account.
     *
     * @param Temboo_Session $session The session that owns this ReleaseAddress Choreo.
     * @return Amazon_EC2_ReleaseAddress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/ReleaseAddress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ReleaseAddress Choreo.
     *
     * @param Amazon_EC2_ReleaseAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ReleaseAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ReleaseAddress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_ReleaseAddress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ReleaseAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ReleaseAddress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_ReleaseAddress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ReleaseAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ReleaseAddress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ReleaseAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ReleaseAddress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ReleaseAddress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_ReleaseAddress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_ReleaseAddress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ReleaseAddress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ReleaseAddress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ReleaseAddress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ReleaseAddress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllocationId input for this ReleaseAddress Choreo.
     *
     * @param string $value (conditional, string) [EC2-VPC] The allocation ID that AWS provided when you allocated the address for use with a VPC.
     * @return Amazon_EC2_ReleaseAddress_Inputs For method chaining.
     */
    public function setAllocationId($value)
    {
        return $this->set('AllocationId', $value);
    }

    /**
     * Set the value for the PublicIp input for this ReleaseAddress Choreo.
     *
     * @param string $value (conditional, string) [EC2-Classic] The Elastic IP address.
     * @return Amazon_EC2_ReleaseAddress_Inputs For method chaining.
     */
    public function setPublicIp($value)
    {
        return $this->set('PublicIp', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ReleaseAddress Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_ReleaseAddress_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ReleaseAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ReleaseAddress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ReleaseAddress Choreo.
     *
     * @param Temboo_Session $session The session that owns this ReleaseAddress execution.
     * @param Amazon_EC2_ReleaseAddress $choreo The choreography object for this execution.
     * @param Amazon_EC2_ReleaseAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ReleaseAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ReleaseAddress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_ReleaseAddress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ReleaseAddress execution.
     *
     * @return Amazon_EC2_ReleaseAddress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ReleaseAddress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_ReleaseAddress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_ReleaseAddress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ReleaseAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ReleaseAddress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ReleaseAddress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_ReleaseAddress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ReleaseAddress execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Attaches an Amazon EBS volume to a running instance and exposes it as the specified device.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume extends Temboo_Choreography
{
    /**
     * Attaches an Amazon EBS volume to a running instance and exposes it as the specified device.
     *
     * @param Temboo_Session $session The session that owns this AttachVolume Choreo.
     * @return Amazon_EC2_AttachVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/AttachVolume/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AttachVolume Choreo.
     *
     * @param Amazon_EC2_AttachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AttachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AttachVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_AttachVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AttachVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AttachVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_AttachVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AttachVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AttachVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AttachVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AttachVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AttachVolume Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AttachVolume Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Device input for this AttachVolume Choreo.
     *
     * @param string $value (required, string) How the device is exposed to the instance (i.e. " /dev/sdh" or "xvdh").
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setDevice($value)
    {
        return $this->set('Device', $value);
    }

    /**
     * Set the value for the InstanceId input for this AttachVolume Choreo.
     *
     * @param string $value (required, string) The ID of the instance to which the volume attaches. The volume and instance must be within the same Availability Zone and the instance must be running.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this AttachVolume Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the VolumeId input for this AttachVolume Choreo.
     *
     * @param string $value (required, string) The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone and the instance must be running.
     * @return Amazon_EC2_AttachVolume_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the AttachVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AttachVolume Choreo.
     *
     * @param Temboo_Session $session The session that owns this AttachVolume execution.
     * @param Amazon_EC2_AttachVolume $choreo The choreography object for this execution.
     * @param Amazon_EC2_AttachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AttachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AttachVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_AttachVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AttachVolume execution.
     *
     * @return Amazon_EC2_AttachVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AttachVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_AttachVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_AttachVolume_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AttachVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AttachVolume_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AttachVolume Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_AttachVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AttachVolume execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information for one or more of your Amazon EBS volumes.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeVolumes extends Temboo_Choreography
{
    /**
     * Returns information for one or more of your Amazon EBS volumes.
     *
     * @param Temboo_Session $session The session that owns this DescribeVolumes Choreo.
     * @return Amazon_EC2_DescribeVolumes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeVolumes/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeVolumes Choreo.
     *
     * @param Amazon_EC2_DescribeVolumes_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeVolumes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeVolumes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeVolumes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeVolumes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeVolumes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeVolumes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeVolumes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeVolumes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeVolumes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeVolumes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeVolumes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeVolumes Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeVolumes Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeVolumes Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow results with.
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeVolumes Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeVolumes Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the VolumeId input for this DescribeVolumes Choreo.
     *
     * @param string $value (conditional, string) The ID of the volume to return. This can be a comma-separated list of up to 10 volume IDs.
     * @return Amazon_EC2_DescribeVolumes_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the DescribeVolumes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeVolumes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeVolumes Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeVolumes execution.
     * @param Amazon_EC2_DescribeVolumes $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeVolumes_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeVolumes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeVolumes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeVolumes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeVolumes execution.
     *
     * @return Amazon_EC2_DescribeVolumes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeVolumes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeVolumes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeVolumes_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeVolumes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeVolumes_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeVolumes Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeVolumes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeVolumes execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets lifecycle configuration for your bucket. This is used to remove objects from a bucket automatically after a certain time or at a certain date.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle extends Temboo_Choreography
{
    /**
     * Sets lifecycle configuration for your bucket. This is used to remove objects from a bucket automatically after a certain time or at a certain date.
     *
     * @param Temboo_Session $session The session that owns this PutBucketLifecycle Choreo.
     * @return Amazon_S3_PutBucketLifecycle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketLifecycle/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketLifecycle Choreo.
     *
     * @param Amazon_S3_PutBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketLifecycle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketLifecycle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketLifecycle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketLifecycle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketLifecycle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketLifecycle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketLifecycle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketLifecycle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The name of the bucket to create or update a policy for.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CustomLifecycleConfiguration input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (optional, xml) Write a custom LifecycleConfiguration xml request for advanced customization. Note - this will overwrite all other inputs other than the AWS AccessKeyId, SecretKeyId, and BucketName.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setCustomLifecycleConfiguration($value)
    {
        return $this->set('CustomLifecycleConfiguration', $value);
    }

    /**
     * Set the value for the DateOfExpiration input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (optional, date) Date when the rule takes effect. You can specify either DateOfExpiration OR NumberOfDays. The date value must be in ISO 8601 format, time is always midnight UTC. Ex: 2013-04-24T00:00:00.000Z.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setDateOfExpiration($value)
    {
        return $this->set('DateOfExpiration', $value);
    }

    /**
     * Set the value for the LifecycleId input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (optional, string) A unique ID for this lifecycle (i.e. delete-logs-in-30-days-rule).
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setLifecycleId($value)
    {
        return $this->set('LifecycleId', $value);
    }

    /**
     * Set the value for the NumberOfDays input for this PutBucketLifecycle Choreo.
     *
     * @param int $value (conditional, integer) The number of days to wait until the lifecycle expiration kicks in. Required unless you specify DateOfExpiration or a CustomLifecycleConfiguration instead.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setNumberOfDays($value)
    {
        return $this->set('NumberOfDays', $value);
    }

    /**
     * Set the value for the Prefix input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (optional, string) Indicating that objects with this prefix will expire and be removed after the number of days specified. If not specified this lifecycle will apply to all objects in the bucket.
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setPrefix($value)
    {
        return $this->set('Prefix', $value);
    }

    /**
     * Set the value for the Status input for this PutBucketLifecycle Choreo.
     *
     * @param string $value (optional, string) The lifecycle status. Accepted values are: "Enabled" or "Disabled". Defaults to "Enabled".
     * @return Amazon_S3_PutBucketLifecycle_Inputs For method chaining.
     */
    public function setStatus($value)
    {
        return $this->set('Status', $value);
    }
}


/**
 * Execution object for the PutBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketLifecycle Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketLifecycle execution.
     * @param Amazon_S3_PutBucketLifecycle $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketLifecycle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketLifecycle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketLifecycle execution.
     *
     * @return Amazon_S3_PutBucketLifecycle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketLifecycle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketLifecycle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketLifecycle_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLifecycle_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketLifecycle Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketLifecycle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketLifecycle execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful lifecycle creation, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified role.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRole extends Temboo_Choreography
{
    /**
     * Deletes the specified role.
     *
     * @param Temboo_Session $session The session that owns this DeleteRole Choreo.
     * @return Amazon_IAM_DeleteRole New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteRole/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteRole Choreo.
     *
     * @param Amazon_IAM_DeleteRole_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteRole_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteRole_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteRole_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteRole Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteRole_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteRole_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRole_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteRole Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteRole_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteRole input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteRole_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteRole_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteRole Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteRole_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteRole Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteRole_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteRole Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteRole_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this DeleteRole Choreo.
     *
     * @param string $value (required, string) Name of the role to delete.
     * @return Amazon_IAM_DeleteRole_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the DeleteRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRole_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteRole Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteRole execution.
     * @param Amazon_IAM_DeleteRole $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteRole_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteRole_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteRole_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteRole $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteRole execution.
     *
     * @return Amazon_IAM_DeleteRole_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteRole execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteRole_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteRole_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteRole Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRole_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteRole Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteRole_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteRole execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows restricted access to your database instance by adding EC2 Security Groups to the DBSecurityGroup or by specifying an allowed IP range.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress extends Temboo_Choreography
{
    /**
     * Allows restricted access to your database instance by adding EC2 Security Groups to the DBSecurityGroup or by specifying an allowed IP range.
     *
     * @param Temboo_Session $session The session that owns this AuthorizeDBSecurityGroupIngress Choreo.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/AuthorizeDBSecurityGroupIngress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AuthorizeDBSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AuthorizeDBSecurityGroupIngress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CIDRIP input for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) IP range that should have access. Required unless EC2SecurityGroupName and EC2SecurityGroupOwnerId are used.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCIDRIP($value)
    {
        return $this->set('CIDRIP', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) A unique name for the security group you want to authorize.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupName input for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The EC2 security group to authorize. This and EC2SecurityGroupOwnerId are required if CIDRIP is not used.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupName($value)
    {
        return $this->set('EC2SecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupOwnerId input for this AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The AWS account number for the security group owner. This and EC2SecurityGroupName are required if CIDRIP is not used.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupOwnerId($value)
    {
        return $this->set('EC2SecurityGroupOwnerId', $value);
    }
}


/**
 * Execution object for the AuthorizeDBSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param Temboo_Session $session The session that owns this AuthorizeDBSecurityGroupIngress execution.
     * @param Amazon_RDS_AuthorizeDBSecurityGroupIngress $choreo The choreography object for this execution.
     * @param Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_AuthorizeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_AuthorizeDBSecurityGroupIngress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AuthorizeDBSecurityGroupIngress execution.
     *
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AuthorizeDBSecurityGroupIngress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AuthorizeDBSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AuthorizeDBSecurityGroupIngress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_AuthorizeDBSecurityGroupIngress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AuthorizeDBSecurityGroupIngress execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets the CORS (Cross-Origin Resource Sharing) configuration for a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketCORS extends Temboo_Choreography
{
    /**
     * Sets the CORS (Cross-Origin Resource Sharing) configuration for a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketCORS Choreo.
     * @return Amazon_S3_PutBucketCORS New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketCORS/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketCORS Choreo.
     *
     * @param Amazon_S3_PutBucketCORS_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketCORS_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketCORS_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketCORS_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketCORS Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketCORS_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketCORS_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketCORS_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketCORS Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketCORS_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketCORS input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the CORSConfiguration input for this PutBucketCORS Choreo.
     *
     * @param string $value (optional, xml) The CORS Configuration XML containing one or more CORS Rules for advanced configuration. If provided the Choreo will ignore all other inputs except your AWS Key/Secret and BucketName.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setCORSConfiguration($value)
    {
        return $this->set('CORSConfiguration', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketCORS Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketCORS Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllowedHeader input for this PutBucketCORS Choreo.
     *
     * @param string $value (optional, string) Specifies which headers are allowed in a pre-flight OPTIONS request via the Access-Control-Request-Headers header.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setAllowedHeader($value)
    {
        return $this->set('AllowedHeader', $value);
    }

    /**
     * Set the value for the AllowedMethod input for this PutBucketCORS Choreo.
     *
     * @param string $value (conditional, string) The HTTP verb that you want to allow the origin to execute. Valid values are: GET, PUT, HEAD, POST, DELETE.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setAllowedMethod($value)
    {
        return $this->set('AllowedMethod', $value);
    }

    /**
     * Set the value for the AllowedOrigin input for this PutBucketCORS Choreo.
     *
     * @param string $value (conditional, string) An origin that you want to allow cross-domain requests from. This can contain at most one * wild character (i.e. http://*.example.com).
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setAllowedOrigin($value)
    {
        return $this->set('AllowedOrigin', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketCORS Choreo.
     *
     * @param string $value (required, string) The name of the bucket to set a CORS configuration for.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ExposeHeader input for this PutBucketCORS Choreo.
     *
     * @param string $value (optional, string) A header in the response that you want customers to be able to access from their applications.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setExposeHeader($value)
    {
        return $this->set('ExposeHeader', $value);
    }

    /**
     * Set the value for the ID input for this PutBucketCORS Choreo.
     *
     * @param string $value (optional, string) A unique identifier for the rule. The ID value can be up to 255 characters long.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setID($value)
    {
        return $this->set('ID', $value);
    }

    /**
     * Set the value for the MaxAgeSeconds input for this PutBucketCORS Choreo.
     *
     * @param int $value (optional, integer) The time in seconds that your browser is to cache the preflight response for the specified resource.
     * @return Amazon_S3_PutBucketCORS_Inputs For method chaining.
     */
    public function setMaxAgeSeconds($value)
    {
        return $this->set('MaxAgeSeconds', $value);
    }
}


/**
 * Execution object for the PutBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketCORS_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketCORS Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketCORS execution.
     * @param Amazon_S3_PutBucketCORS $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketCORS_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketCORS_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketCORS_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketCORS $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketCORS execution.
     *
     * @return Amazon_S3_PutBucketCORS_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketCORS execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketCORS_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketCORS_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketCORS_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketCORS Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketCORS_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketCORS execution.
     *
     * @return string The response from Amazon. Note that for a successful exection, this API operation returns an empty 200 response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new 2048-bit RSA key pair with the specified name. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateKeyPair extends Temboo_Choreography
{
    /**
     * Creates a new 2048-bit RSA key pair with the specified name. 
     *
     * @param Temboo_Session $session The session that owns this CreateKeyPair Choreo.
     * @return Amazon_EC2_CreateKeyPair New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateKeyPair/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateKeyPair Choreo.
     *
     * @param Amazon_EC2_CreateKeyPair_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateKeyPair_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateKeyPair_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateKeyPair_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateKeyPair Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateKeyPair_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateKeyPair_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateKeyPair_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateKeyPair Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateKeyPair_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateKeyPair input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateKeyPair_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateKeyPair_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateKeyPair Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateKeyPair_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateKeyPair Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateKeyPair_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the KeyName input for this CreateKeyPair Choreo.
     *
     * @param string $value (required, string) A unique name for the key pair.
     * @return Amazon_EC2_CreateKeyPair_Inputs For method chaining.
     */
    public function setKeyName($value)
    {
        return $this->set('KeyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateKeyPair Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_CreateKeyPair_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the CreateKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateKeyPair_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateKeyPair Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateKeyPair execution.
     * @param Amazon_EC2_CreateKeyPair $choreo The choreography object for this execution.
     * @param Amazon_EC2_CreateKeyPair_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateKeyPair_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateKeyPair_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateKeyPair $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateKeyPair execution.
     *
     * @return Amazon_EC2_CreateKeyPair_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateKeyPair execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateKeyPair_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateKeyPair_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateKeyPair_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateKeyPair Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateKeyPair_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateKeyPair execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of buckets owned by the authenticated user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetService extends Temboo_Choreography
{
    /**
     * Retrieves a list of buckets owned by the authenticated user.
     *
     * @param Temboo_Session $session The session that owns this GetService Choreo.
     * @return Amazon_S3_GetService New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetService/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetService Choreo.
     *
     * @param Amazon_S3_GetService_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetService_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetService_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetService Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetService_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetService_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetService Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetService_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetService Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetService_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetService input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetService_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetService_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetService Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetService_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetService Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetService_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetService Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetService_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetService Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetService_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetService Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetService execution.
     * @param Amazon_S3_GetService $choreo The choreography object for this execution.
     * @param Amazon_S3_GetService_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetService_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetService_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetService $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetService execution.
     *
     * @return Amazon_S3_GetService_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetService execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetService_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetService_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetService Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetService_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetService Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetService_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetService execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the feed processing report and the Content-MD5 header.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult extends Temboo_Choreography
{
    /**
     * Returns the feed processing report and the Content-MD5 header.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionResult Choreo.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/GetFeedSubmissionResult/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetFeedSubmissionResult Choreo.
     *
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetFeedSubmissionResult Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetFeedSubmissionResult Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetFeedSubmissionResult Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetFeedSubmissionResult input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetFeedSubmissionResult Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetFeedSubmissionResult Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetFeedSubmissionResult Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetFeedSubmissionResult Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetFeedSubmissionResult Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FeedSubmissionId input for this GetFeedSubmissionResult Choreo.
     *
     * @param string $value (required, string) A FeedSubmmissionId value.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs For method chaining.
     */
    public function setFeedSubmissionId($value)
    {
        return $this->set('FeedSubmissionId', $value);
    }
}


/**
 * Execution object for the GetFeedSubmissionResult Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetFeedSubmissionResult Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionResult execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionResult $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_GetFeedSubmissionResult $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetFeedSubmissionResult execution.
     *
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetFeedSubmissionResult execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetFeedSubmissionResult Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetFeedSubmissionResult Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionResult_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ContentMD5Header" output from this GetFeedSubmissionResult execution.
     *
     * @return string (string) The Content MD5 header returned from Amazon. This can used to check against an MD5 hash that you generate before submitting the feed to verify that the feed was submitted correctly.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getContentMD5Header()
    {
        return $this->get('ContentMD5Header');
    }
    /**
     * Retrieve the value for the "Response" output from this GetFeedSubmissionResult execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds or overwrites one or more tags for the specified EC2 resource or resources.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateTags extends Temboo_Choreography
{
    /**
     * Adds or overwrites one or more tags for the specified EC2 resource or resources.
     *
     * @param Temboo_Session $session The session that owns this CreateTags Choreo.
     * @return Amazon_EC2_CreateTags New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateTags/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateTags Choreo.
     *
     * @param Amazon_EC2_CreateTags_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateTags_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateTags_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateTags_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateTags Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateTags_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateTags_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateTags_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateTags Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateTags_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateTags input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateTags Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateTags Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResourceId input for this CreateTags Choreo.
     *
     * @param string $value (required, string) The ID of a resource to tag. This can be a comma-separated list of up to 10  Resource IDs.
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function setResourceId($value)
    {
        return $this->set('ResourceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateTags Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the TagKey input for this CreateTags Choreo.
     *
     * @param string $value (required, string) The key for a tag.
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function setTagKey($value)
    {
        return $this->set('TagKey', $value);
    }

    /**
     * Set the value for the TagValue input for this CreateTags Choreo.
     *
     * @param string $value (conditional, string) The value for a tag. If empty, the value will be set to be an empty string.
     * @return Amazon_EC2_CreateTags_Inputs For method chaining.
     */
    public function setTagValue($value)
    {
        return $this->set('TagValue', $value);
    }
}


/**
 * Execution object for the CreateTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateTags_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateTags Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateTags execution.
     * @param Amazon_EC2_CreateTags $choreo The choreography object for this execution.
     * @param Amazon_EC2_CreateTags_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateTags_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateTags_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateTags $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateTags execution.
     *
     * @return Amazon_EC2_CreateTags_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateTags execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateTags_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateTags_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateTags_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateTags Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateTags_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateTags execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the notification configuration of a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketNotification extends Temboo_Choreography
{
    /**
     * Retrieves the notification configuration of a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketNotification Choreo.
     * @return Amazon_S3_GetBucketNotification New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketNotification/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketNotification Choreo.
     *
     * @param Amazon_S3_GetBucketNotification_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketNotification_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketNotification_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketNotification_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketNotification Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketNotification_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketNotification_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketNotification Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketNotification_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketNotification Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketNotification_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketNotification input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketNotification_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketNotification_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketNotification Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketNotification_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketNotification Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketNotification_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketNotification Choreo.
     *
     * @param string $value (required, string) The name of the bucket to retrieve notification information for.
     * @return Amazon_S3_GetBucketNotification_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketNotification Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketNotification_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketNotification Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketNotification_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketNotification Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketNotification execution.
     * @param Amazon_S3_GetBucketNotification $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketNotification_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketNotification_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketNotification_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketNotification $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketNotification execution.
     *
     * @return Amazon_S3_GetBucketNotification_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketNotification execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketNotification_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketNotification_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketNotification Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketNotification_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketNotification Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketNotification_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketNotification execution.
     *
     * @return string The response from Amazon. Note - if there is no notification configured or notifications are turned off the response will be an empty xml result set or json object (depending on ResponseFormat input).
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management Console.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteLoginProfile extends Temboo_Choreography
{
    /**
     * Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management Console.
     *
     * @param Temboo_Session $session The session that owns this DeleteLoginProfile Choreo.
     * @return Amazon_IAM_DeleteLoginProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteLoginProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteLoginProfile Choreo.
     *
     * @param Amazon_IAM_DeleteLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteLoginProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteLoginProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteLoginProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteLoginProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteLoginProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteLoginProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteLoginProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteLoginProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteLoginProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteLoginProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteLoginProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteLoginProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteLoginProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteLoginProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteLoginProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this DeleteLoginProfile Choreo.
     *
     * @param string $value (required, string) Name of the user whose login profile you want to delete.
     * @return Amazon_IAM_DeleteLoginProfile_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the DeleteLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteLoginProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteLoginProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteLoginProfile execution.
     * @param Amazon_IAM_DeleteLoginProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteLoginProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteLoginProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteLoginProfile execution.
     *
     * @return Amazon_IAM_DeleteLoginProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteLoginProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteLoginProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteLoginProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteLoginProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteLoginProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteLoginProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteLoginProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a zipped version of the specified S3 file and returns a download link for the new compressed file.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipObject extends Temboo_Choreography
{
    /**
     * Creates a zipped version of the specified S3 file and returns a download link for the new compressed file.
     *
     * @param Temboo_Session $session The session that owns this ZipObject Choreo.
     * @return Amazon_S3_ZipObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/ZipObject/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ZipObject Choreo.
     *
     * @param Amazon_S3_ZipObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_ZipObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_ZipObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_ZipObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ZipObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_ZipObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_ZipObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ZipObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ZipObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_ZipObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ZipObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ZipObject Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ZipObject Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this ZipObject Choreo.
     *
     * @param string $value (required, string) The name of the bucket that contains the object to retrieve and zip.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CannedACL input for this ZipObject Choreo.
     *
     * @param string $value (conditional, string) This sets the permissions for the newly created zip file. Valid values are: private, public-read, public-read-write, authenticated-read, bucket-owner-read, or bucket-owner-full-control.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setCannedACL($value)
    {
        return $this->set('CannedACL', $value);
    }

    /**
     * Set the value for the FileName input for this ZipObject Choreo.
     *
     * @param string $value (required, string) The name of the file to retrieve and zip.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }

    /**
     * Set the value for the ZipFileLocation input for this ZipObject Choreo.
     *
     * @param string $value (optional, string) The name of the bucket to put the new zip file in. When not specified, the zip file will be put in the bucket where the original uncompressed file is located.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setZipFileLocation($value)
    {
        return $this->set('ZipFileLocation', $value);
    }

    /**
     * Set the value for the ZipFileName input for this ZipObject Choreo.
     *
     * @param string $value (optional, string) The name of the zip file that will be created. If not specified, the original file name will be used with .zip extension.
     * @return Amazon_S3_ZipObject_Inputs For method chaining.
     */
    public function setZipFileName($value)
    {
        return $this->set('ZipFileName', $value);
    }
}


/**
 * Execution object for the ZipObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ZipObject Choreo.
     *
     * @param Temboo_Session $session The session that owns this ZipObject execution.
     * @param Amazon_S3_ZipObject $choreo The choreography object for this execution.
     * @param Amazon_S3_ZipObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_ZipObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_ZipObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_ZipObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ZipObject execution.
     *
     * @return Amazon_S3_ZipObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ZipObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_ZipObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_ZipObject_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ZipObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipObject_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ZipObject Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_ZipObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "URL" output from this ZipObject execution.
     *
     * @return string (string) The URL location of the new zip file.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getURL()
    {
        return $this->get('URL');
    }
}

/**
 * Deletes a particular message from a specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage extends Temboo_Choreography
{
    /**
     * Deletes a particular message from a specified queue.
     *
     * @param Temboo_Session $session The session that owns this DeleteMessage Choreo.
     * @return Amazon_SQS_DeleteMessage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/DeleteMessage/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteMessage Choreo.
     *
     * @param Amazon_SQS_DeleteMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteMessage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_DeleteMessage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteMessage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteMessage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_DeleteMessage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteMessage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_DeleteMessage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteMessage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteMessage Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this DeleteMessage Choreo.
     *
     * @param int $value (required, integer) The AWS account id associated with the queue. Enter account number omitting any dashes.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteMessage Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueName input for this DeleteMessage Choreo.
     *
     * @param string $value (required, string) The name of the queue that contains the message you want to delete.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }

    /**
     * Set the value for the ReceiptHandle input for this DeleteMessage Choreo.
     *
     * @param string $value (required, string) The receipt handle associated with the message you want to delete. This is returned in the RecieveMessage request.
     * @return Amazon_SQS_DeleteMessage_Inputs For method chaining.
     */
    public function setReceiptHandle($value)
    {
        return $this->set('ReceiptHandle', $value);
    }
}


/**
 * Execution object for the DeleteMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteMessage Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteMessage execution.
     * @param Amazon_SQS_DeleteMessage $choreo The choreography object for this execution.
     * @param Amazon_SQS_DeleteMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_DeleteMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_DeleteMessage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_DeleteMessage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteMessage execution.
     *
     * @return Amazon_SQS_DeleteMessage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteMessage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_DeleteMessage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_DeleteMessage_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_DeleteMessage_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteMessage Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_DeleteMessage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteMessage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a zip file containing all objects within the specified bucket and returns a download link for the new compressed file.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipBucket extends Temboo_Choreography
{
    /**
     * Creates a zip file containing all objects within the specified bucket and returns a download link for the new compressed file.
     *
     * @param Temboo_Session $session The session that owns this ZipBucket Choreo.
     * @return Amazon_S3_ZipBucket New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/ZipBucket/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ZipBucket Choreo.
     *
     * @param Amazon_S3_ZipBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_ZipBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_ZipBucket_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_ZipBucket_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ZipBucket Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_ZipBucket_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_ZipBucket_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ZipBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipBucket_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ZipBucket Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_ZipBucket_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ZipBucket input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ZipBucket Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ZipBucket Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this ZipBucket Choreo.
     *
     * @param string $value (required, string) The name of the bucket that contains the list of objects that you want to zip.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CannedACL input for this ZipBucket Choreo.
     *
     * @param string $value (conditional, string) This sets the permissions for the newly created zip file. Valid values are: private, public-read, public-read-write, authenticated-read, bucket-owner-read, or bucket-owner-full-control.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setCannedACL($value)
    {
        return $this->set('CannedACL', $value);
    }

    /**
     * Set the value for the Delimiter input for this ZipBucket Choreo.
     *
     * @param string $value (optional, string) A delimiter is a character you use to group keys. All keys that contain the delimiter are grouped under a single result element, Common Prefixes. For more information see Amazon documentation.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setDelimiter($value)
    {
        return $this->set('Delimiter', $value);
    }

    /**
     * Set the value for the Prefix input for this ZipBucket Choreo.
     *
     * @param string $value (optional, string) Limits the response to keys that begin with the specified prefix - useful for separating a bucket into different groupings of keys. Ex: specify 'test' to get a list of objects starting with 'test'.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setPrefix($value)
    {
        return $this->set('Prefix', $value);
    }

    /**
     * Set the value for the ZipFileLocation input for this ZipBucket Choreo.
     *
     * @param string $value (optional, string) The name of the bucket to put the new zip file in. When not specified, the zip file will be put in the bucket that contains the files being zipped.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setZipFileLocation($value)
    {
        return $this->set('ZipFileLocation', $value);
    }

    /**
     * Set the value for the ZipFileName input for this ZipBucket Choreo.
     *
     * @param string $value (optional, string) The name of the zip file that will be created. If not specified, the original bucket name will be used with .zip extension.
     * @return Amazon_S3_ZipBucket_Inputs For method chaining.
     */
    public function setZipFileName($value)
    {
        return $this->set('ZipFileName', $value);
    }
}


/**
 * Execution object for the ZipBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipBucket_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ZipBucket Choreo.
     *
     * @param Temboo_Session $session The session that owns this ZipBucket execution.
     * @param Amazon_S3_ZipBucket $choreo The choreography object for this execution.
     * @param Amazon_S3_ZipBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_ZipBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_ZipBucket_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_ZipBucket $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ZipBucket execution.
     *
     * @return Amazon_S3_ZipBucket_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ZipBucket execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_ZipBucket_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_ZipBucket_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ZipBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_ZipBucket_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ZipBucket Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_ZipBucket_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "URL" output from this ZipBucket execution.
     *
     * @return string (string) The URL location of the new zip file.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getURL()
    {
        return $this->get('URL');
    }
}

/**
 * Creates a password for the specified user, which gives the user the ability to access AWS services through the AWS Management Console.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateLoginProfile extends Temboo_Choreography
{
    /**
     * Creates a password for the specified user, which gives the user the ability to access AWS services through the AWS Management Console.
     *
     * @param Temboo_Session $session The session that owns this CreateLoginProfile Choreo.
     * @return Amazon_IAM_CreateLoginProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/CreateLoginProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateLoginProfile Choreo.
     *
     * @param Amazon_IAM_CreateLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateLoginProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_CreateLoginProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateLoginProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_CreateLoginProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateLoginProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateLoginProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateLoginProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateLoginProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateLoginProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the MustChangePassword input for this CreateLoginProfile Choreo.
     *
     * @param bool $value (optional, boolean) Whether or not the user is required to change their password immediately.  Valid values are true/false or 1/0.
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function setMustChangePassword($value)
    {
        return $this->set('MustChangePassword', $value);
    }

    /**
     * Set the value for the Password input for this CreateLoginProfile Choreo.
     *
     * @param string $value (required, string) The new password for the user.
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateLoginProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this CreateLoginProfile Choreo.
     *
     * @param string $value (required, string) The name of the user to create a password for.
     * @return Amazon_IAM_CreateLoginProfile_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the CreateLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateLoginProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateLoginProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateLoginProfile execution.
     * @param Amazon_IAM_CreateLoginProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_CreateLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateLoginProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_CreateLoginProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateLoginProfile execution.
     *
     * @return Amazon_IAM_CreateLoginProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateLoginProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_CreateLoginProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_CreateLoginProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateLoginProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateLoginProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_CreateLoginProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateLoginProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Synchronizes the specified MFA device with AWS servers.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ResyncMFADevice extends Temboo_Choreography
{
    /**
     * Synchronizes the specified MFA device with AWS servers.
     *
     * @param Temboo_Session $session The session that owns this ResyncMFADevice Choreo.
     * @return Amazon_IAM_ResyncMFADevice New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ResyncMFADevice/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ResyncMFADevice Choreo.
     *
     * @param Amazon_IAM_ResyncMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ResyncMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ResyncMFADevice_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ResyncMFADevice_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ResyncMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ResyncMFADevice_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ResyncMFADevice_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ResyncMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ResyncMFADevice_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ResyncMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ResyncMFADevice_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ResyncMFADevice input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ResyncMFADevice Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ResyncMFADevice Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AuthenticationCode1 input for this ResyncMFADevice Choreo.
     *
     * @param string $value (required, string) An authentication code emitted by the device.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setAuthenticationCode1($value)
    {
        return $this->set('AuthenticationCode1', $value);
    }

    /**
     * Set the value for the AuthenticationCode2 input for this ResyncMFADevice Choreo.
     *
     * @param string $value (required, string) A subsequent authentication code emitted by the device.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setAuthenticationCode2($value)
    {
        return $this->set('AuthenticationCode2', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ResyncMFADevice Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SerialNumber input for this ResyncMFADevice Choreo.
     *
     * @param string $value (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setSerialNumber($value)
    {
        return $this->set('SerialNumber', $value);
    }

    /**
     * Set the value for the UserName input for this ResyncMFADevice Choreo.
     *
     * @param string $value (required, string) Name of the user for whom you want to enable the MFA device.
     * @return Amazon_IAM_ResyncMFADevice_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the ResyncMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ResyncMFADevice_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ResyncMFADevice Choreo.
     *
     * @param Temboo_Session $session The session that owns this ResyncMFADevice execution.
     * @param Amazon_IAM_ResyncMFADevice $choreo The choreography object for this execution.
     * @param Amazon_IAM_ResyncMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ResyncMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ResyncMFADevice_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ResyncMFADevice $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ResyncMFADevice execution.
     *
     * @return Amazon_IAM_ResyncMFADevice_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ResyncMFADevice execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ResyncMFADevice_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ResyncMFADevice_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ResyncMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ResyncMFADevice_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ResyncMFADevice Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ResyncMFADevice_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ResyncMFADevice execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves details about a specified user, including the user's path, GUID, and ARN.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUser extends Temboo_Choreography
{
    /**
     * Retrieves details about a specified user, including the user's path, GUID, and ARN.
     *
     * @param Temboo_Session $session The session that owns this GetUser Choreo.
     * @return Amazon_IAM_GetUser New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetUser/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetUser Choreo.
     *
     * @param Amazon_IAM_GetUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetUser_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetUser_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetUser_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetUser_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUser_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetUser_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetUser input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetUser_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetUser_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetUser Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetUser_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetUser Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetUser_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetUser Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetUser_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this GetUser Choreo.
     *
     * @param string $value (conditional, string) The name of the user to retrieve. If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request.
     * @return Amazon_IAM_GetUser_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the GetUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUser_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetUser Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetUser execution.
     * @param Amazon_IAM_GetUser $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetUser_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetUser $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetUser execution.
     *
     * @return Amazon_IAM_GetUser_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetUser execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetUser_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetUser_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUser_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetUser Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetUser_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetUser execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets the access control list (ACL) permissions for an existing bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL extends Temboo_Choreography
{
    /**
     * Sets the access control list (ACL) permissions for an existing bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketACL Choreo.
     * @return Amazon_S3_PutBucketACL New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketACL/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketACL Choreo.
     *
     * @param Amazon_S3_PutBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketACL_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketACL_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketACL_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketACL_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketACL_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketACL input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketACL Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketACL Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AccessControlList input for this PutBucketACL Choreo.
     *
     * @param string $value (optional, xml) Custom Access Control List xml for advanced configuration. See description for an example, plus Amazon documentation.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setAccessControlList($value)
    {
        return $this->set('AccessControlList', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketACL Choreo.
     *
     * @param string $value (required, string) The name of the bucket to create or update a policy for.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CannedACL input for this PutBucketACL Choreo.
     *
     * @param string $value (conditional, string) Most common ACL usage, required unless creating a custom policy. Values: private, public-read, public-read-write, or authenticated-read.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setCannedACL($value)
    {
        return $this->set('CannedACL', $value);
    }

    /**
     * Set the value for the OwnerEmailAddress input for this PutBucketACL Choreo.
     *
     * @param string $value (optional, string) The email address of the owner who is granting permission. Required if creating your own custom ACL policy.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setOwnerEmailAddress($value)
    {
        return $this->set('OwnerEmailAddress', $value);
    }

    /**
     * Set the value for the OwnerId input for this PutBucketACL Choreo.
     *
     * @param string $value (optional, string) The canonical user ID of the owner who is granting permission. Required if creating your own custom ACL policy.
     * @return Amazon_S3_PutBucketACL_Inputs For method chaining.
     */
    public function setOwnerId($value)
    {
        return $this->set('OwnerId', $value);
    }
}


/**
 * Execution object for the PutBucketACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketACL Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketACL execution.
     * @param Amazon_S3_PutBucketACL $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketACL_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketACL $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketACL execution.
     *
     * @return Amazon_S3_PutBucketACL_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketACL execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketACL_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketACL_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketACL_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketACL Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketACL_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketACL execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful ACL creation, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sends a message to a specified queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage extends Temboo_Choreography
{
    /**
     * Sends a message to a specified queue.
     *
     * @param Temboo_Session $session The session that owns this SendMessage Choreo.
     * @return Amazon_SQS_SendMessage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/SendMessage/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SendMessage Choreo.
     *
     * @param Amazon_SQS_SendMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SendMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SendMessage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_SendMessage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SendMessage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SendMessage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_SendMessage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SendMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SendMessage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_SendMessage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SendMessage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SendMessage Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this SendMessage Choreo.
     *
     * @param int $value (required, integer) The id for the AWS account associated with the queue you're sending a message to (remove all dashes in the account number).
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SendMessage Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the MessageBody input for this SendMessage Choreo.
     *
     * @param string $value (required, string) The message to send. Maximum size is 64 KB.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setMessageBody($value)
    {
        return $this->set('MessageBody', $value);
    }

    /**
     * Set the value for the QueueName input for this SendMessage Choreo.
     *
     * @param string $value (required, string) The name of the queue you want to send a message to.
     * @return Amazon_SQS_SendMessage_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the SendMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SendMessage Choreo.
     *
     * @param Temboo_Session $session The session that owns this SendMessage execution.
     * @param Amazon_SQS_SendMessage $choreo The choreography object for this execution.
     * @param Amazon_SQS_SendMessage_Inputs|array $inputs (optional) Inputs as Amazon_SQS_SendMessage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_SendMessage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_SendMessage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SendMessage execution.
     *
     * @return Amazon_SQS_SendMessage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SendMessage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_SendMessage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_SendMessage_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SendMessage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_SendMessage_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SendMessage Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_SendMessage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this SendMessage execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the names of the policies associated with the specified role. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRolePolicies extends Temboo_Choreography
{
    /**
     * Lists the names of the policies associated with the specified role. 
     *
     * @param Temboo_Session $session The session that owns this ListRolePolicies Choreo.
     * @return Amazon_IAM_ListRolePolicies New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListRolePolicies/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListRolePolicies Choreo.
     *
     * @param Amazon_IAM_ListRolePolicies_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListRolePolicies_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListRolePolicies_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListRolePolicies_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListRolePolicies Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListRolePolicies_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListRolePolicies_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListRolePolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRolePolicies_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListRolePolicies Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListRolePolicies_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListRolePolicies input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListRolePolicies Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListRolePolicies Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListRolePolicies Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListRolePolicies Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListRolePolicies Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this ListRolePolicies Choreo.
     *
     * @param string $value (required, string) Name of the Role that you would like to retrieve policies for.
     * @return Amazon_IAM_ListRolePolicies_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the ListRolePolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRolePolicies_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListRolePolicies Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListRolePolicies execution.
     * @param Amazon_IAM_ListRolePolicies $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListRolePolicies_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListRolePolicies_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListRolePolicies_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListRolePolicies $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListRolePolicies execution.
     *
     * @return Amazon_IAM_ListRolePolicies_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListRolePolicies execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListRolePolicies_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListRolePolicies_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListRolePolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRolePolicies_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListRolePolicies Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListRolePolicies_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListRolePolicies execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about the Access Key IDs associated with the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccessKeys extends Temboo_Choreography
{
    /**
     * Returns information about the Access Key IDs associated with the specified user.
     *
     * @param Temboo_Session $session The session that owns this ListAccessKeys Choreo.
     * @return Amazon_IAM_ListAccessKeys New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListAccessKeys/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListAccessKeys Choreo.
     *
     * @param Amazon_IAM_ListAccessKeys_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListAccessKeys_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListAccessKeys_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListAccessKeys_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListAccessKeys Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListAccessKeys_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListAccessKeys_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListAccessKeys Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccessKeys_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListAccessKeys Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListAccessKeys_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListAccessKeys input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListAccessKeys Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListAccessKeys Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListAccessKeys Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListAccessKeys Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListAccessKeys Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this ListAccessKeys Choreo.
     *
     * @param string $value (conditional, string) Name of the user.  If the UserName field is not specified, the UserName is determined implicitly based on the AWS Access Key ID used to sign the request.
     * @return Amazon_IAM_ListAccessKeys_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the ListAccessKeys Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccessKeys_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListAccessKeys Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListAccessKeys execution.
     * @param Amazon_IAM_ListAccessKeys $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListAccessKeys_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListAccessKeys_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListAccessKeys_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListAccessKeys $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListAccessKeys execution.
     *
     * @return Amazon_IAM_ListAccessKeys_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListAccessKeys execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListAccessKeys_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListAccessKeys_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListAccessKeys Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListAccessKeys_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListAccessKeys Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListAccessKeys_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListAccessKeys execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and a SellerSKU to uniquely identify a product.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForSKU extends Temboo_Choreography
{
    /**
     * Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and a SellerSKU to uniquely identify a product.
     *
     * @param Temboo_Session $session The session that owns this GetProductCategoriesForSKU Choreo.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetProductCategoriesForSKU/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetProductCategoriesForSKU Choreo.
     *
     * @param Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForSKU_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetProductCategoriesForSKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetProductCategoriesForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetProductCategoriesForSKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetProductCategoriesForSKU input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetProductCategoriesForSKU Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetProductCategoriesForSKU Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetProductCategoriesForSKU Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetProductCategoriesForSKU Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetProductCategoriesForSKU Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetProductCategoriesForSKU Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SellerSKU input for this GetProductCategoriesForSKU Choreo.
     *
     * @param string $value (required, string) A SellerSKU value used to identify a product in the given marketplace.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs For method chaining.
     */
    public function setSellerSKU($value)
    {
        return $this->set('SellerSKU', $value);
    }
}


/**
 * Execution object for the GetProductCategoriesForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForSKU_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetProductCategoriesForSKU Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetProductCategoriesForSKU execution.
     * @param Amazon_Marketplace_Products_GetProductCategoriesForSKU $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetProductCategoriesForSKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetProductCategoriesForSKU $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetProductCategoriesForSKU execution.
     *
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetProductCategoriesForSKU execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForSKU_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetProductCategoriesForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForSKU_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetProductCategoriesForSKU Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForSKU_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetProductCategoriesForSKU execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the visibility timeout parameter of a message.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility extends Temboo_Choreography
{
    /**
     * Updates the visibility timeout parameter of a message.
     *
     * @param Temboo_Session $session The session that owns this ChangeMessageVisibility Choreo.
     * @return Amazon_SQS_ChangeMessageVisibility New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/ChangeMessageVisibility/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ChangeMessageVisibility Choreo.
     *
     * @param Amazon_SQS_ChangeMessageVisibility_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ChangeMessageVisibility_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ChangeMessageVisibility_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_ChangeMessageVisibility_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ChangeMessageVisibility Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_ChangeMessageVisibility_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ChangeMessageVisibility Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ChangeMessageVisibility Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ChangeMessageVisibility input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ChangeMessageVisibility Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this ChangeMessageVisibility Choreo.
     *
     * @param int $value (required, integer) The AWS account id associated with the queue. Enter account number omitting any dashes.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ChangeMessageVisibility Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the QueueName input for this ChangeMessageVisibility Choreo.
     *
     * @param string $value (required, string) The name of the queue that contains the message.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }

    /**
     * Set the value for the ReceiptHandle input for this ChangeMessageVisibility Choreo.
     *
     * @param string $value (required, string) The receipt handle associated with the message you want to modify. This is returned in the RecieveMessage request.
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setReceiptHandle($value)
    {
        return $this->set('ReceiptHandle', $value);
    }

    /**
     * Set the value for the VisibilityTimeout input for this ChangeMessageVisibility Choreo.
     *
     * @param int $value (required, integer) The new value for the visibility timeout of the message (in seconds).
     * @return Amazon_SQS_ChangeMessageVisibility_Inputs For method chaining.
     */
    public function setVisibilityTimeout($value)
    {
        return $this->set('VisibilityTimeout', $value);
    }
}


/**
 * Execution object for the ChangeMessageVisibility Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ChangeMessageVisibility Choreo.
     *
     * @param Temboo_Session $session The session that owns this ChangeMessageVisibility execution.
     * @param Amazon_SQS_ChangeMessageVisibility $choreo The choreography object for this execution.
     * @param Amazon_SQS_ChangeMessageVisibility_Inputs|array $inputs (optional) Inputs as Amazon_SQS_ChangeMessageVisibility_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_ChangeMessageVisibility_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_ChangeMessageVisibility $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ChangeMessageVisibility execution.
     *
     * @return Amazon_SQS_ChangeMessageVisibility_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ChangeMessageVisibility execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_ChangeMessageVisibility_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ChangeMessageVisibility Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_ChangeMessageVisibility_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ChangeMessageVisibility Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_ChangeMessageVisibility_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ChangeMessageVisibility execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves information about the specified server certificate.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetServerCertificate extends Temboo_Choreography
{
    /**
     * Retrieves information about the specified server certificate.
     *
     * @param Temboo_Session $session The session that owns this GetServerCertificate Choreo.
     * @return Amazon_IAM_GetServerCertificate New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetServerCertificate/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetServerCertificate Choreo.
     *
     * @param Amazon_IAM_GetServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetServerCertificate_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetServerCertificate_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetServerCertificate_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetServerCertificate_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetServerCertificate_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetServerCertificate_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetServerCertificate input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetServerCertificate_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetServerCertificate_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetServerCertificate Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetServerCertificate_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetServerCertificate Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetServerCertificate_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetServerCertificate Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetServerCertificate_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ServerCertificateName input for this GetServerCertificate Choreo.
     *
     * @param string $value (required, string) The name of the server certificate you want to retrieve information about.
     * @return Amazon_IAM_GetServerCertificate_Inputs For method chaining.
     */
    public function setServerCertificateName($value)
    {
        return $this->set('ServerCertificateName', $value);
    }
}


/**
 * Execution object for the GetServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetServerCertificate_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetServerCertificate Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetServerCertificate execution.
     * @param Amazon_IAM_GetServerCertificate $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetServerCertificate_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetServerCertificate $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetServerCertificate execution.
     *
     * @return Amazon_IAM_GetServerCertificate_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetServerCertificate execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetServerCertificate_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetServerCertificate_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetServerCertificate_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetServerCertificate Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetServerCertificate_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetServerCertificate execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Modify settings for a DB Instance. You can change one or more database configuration parameters by specifying values for the Choreo inputs.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance extends Temboo_Choreography
{
    /**
     * Modify settings for a DB Instance. You can change one or more database configuration parameters by specifying values for the Choreo inputs.
     *
     * @param Temboo_Session $session The session that owns this ModifyDBInstance Choreo.
     * @return Amazon_RDS_ModifyDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/ModifyDBInstance/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ModifyDBInstance Choreo.
     *
     * @param Amazon_RDS_ModifyDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_ModifyDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_ModifyDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_ModifyDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ModifyDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_ModifyDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_ModifyDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ModifyDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ModifyDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_ModifyDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ModifyDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ModifyDBInstance Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ModifyDBInstance Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllocatedStorage input for this ModifyDBInstance Choreo.
     *
     * @param int $value (required, integer) Storage amount (in gigabytes) to be configured for the DB. Use 5 to 1024 for MySQL or 10 to 1024 for Oracle. Value supplied must be at least 10% greater than the current value
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAllocatedStorage($value)
    {
        return $this->set('AllocatedStorage', $value);
    }

    /**
     * Set the value for the AllowMajorVersionUpgrade input for this ModifyDBInstance Choreo.
     *
     * @param bool $value (optional, boolean) Indicates that major version upgrades are allowed. Defaults to 0 (false).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAllowMajorVersionUpgrade($value)
    {
        return $this->set('AllowMajorVersionUpgrade', $value);
    }

    /**
     * Set the value for the ApplyImmediately input for this ModifyDBInstance Choreo.
     *
     * @param bool $value (optional, boolean) Specifies whether or not the modifications applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB Instance. Defaults to 0 (false).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setApplyImmediately($value)
    {
        return $this->set('ApplyImmediately', $value);
    }

    /**
     * Set the value for the AutoMinorVersionUpgrade input for this ModifyDBInstance Choreo.
     *
     * @param bool $value (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setAutoMinorVersionUpgrade($value)
    {
        return $this->set('AutoMinorVersionUpgrade', $value);
    }

    /**
     * Set the value for the BackupRetentionPeriod input for this ModifyDBInstance Choreo.
     *
     * @param int $value (optional, integer) Number of days to retain automated backups. Setting to a positive number enables backups. Setting to 0 disables automated backups. Must be a value from 0 to 8. Defaults to 0 (disabled).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setBackupRetentionPeriod($value)
    {
        return $this->set('BackupRetentionPeriod', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this ModifyDBInstance Choreo.
     *
     * @param string $value (required, string) Capacity for the DB instance.  (db.m1.small, db.m1.large, db.m1.xlarge, db.m2.xlarge, db.m2.2xlarge, or db.m2.4xlarge).
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this ModifyDBInstance Choreo.
     *
     * @param string $value (required, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBParameterGroupName input for this ModifyDBInstance Choreo.
     *
     * @param string $value (optional, string) The name of the DB Parameter Group to apply to this DB Instance.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBParameterGroupName($value)
    {
        return $this->set('DBParameterGroupName', $value);
    }

    /**
     * Set the value for the DBSecurityGroup input for this ModifyDBInstance Choreo.
     *
     * @param string $value (optional, string) A DB Security Groups to authorize on this DB Instance.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setDBSecurityGroup($value)
    {
        return $this->set('DBSecurityGroup', $value);
    }

    /**
     * Set the value for the EngineVersion input for this ModifyDBInstance Choreo.
     *
     * @param string $value (optional, string) The version number of the database engine to upgrade to.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setEngineVersion($value)
    {
        return $this->set('EngineVersion', $value);
    }

    /**
     * Set the value for the MasterUserPassword input for this ModifyDBInstance Choreo.
     *
     * @param string $value (required, string) The new password for the DB Instance master user.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setMasterUserPassword($value)
    {
        return $this->set('MasterUserPassword', $value);
    }

    /**
     * Set the value for the MultiAZ input for this ModifyDBInstance Choreo.
     *
     * @param bool $value (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setMultiAZ($value)
    {
        return $this->set('MultiAZ', $value);
    }

    /**
     * Set the value for the PreferredBackupWindow input for this ModifyDBInstance Choreo.
     *
     * @param string $value (optional, string) The daily time range during which automated backups are created. Format: hh24:mi-hh24:mi (in UTC). Must be at least 30 minutes. Can not conflict with PreferredMaintenanceWindow setting.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setPreferredBackupWindow($value)
    {
        return $this->set('PreferredBackupWindow', $value);
    }

    /**
     * Set the value for the PreferredMaintenanceWindow input for this ModifyDBInstance Choreo.
     *
     * @param string $value (optional, string) The weekly time range (in UTC) during which system maintenance can occur, which may result in an outage. Format: ddd:hh24:mi-ddd:hh24:mi. Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun.
     * @return Amazon_RDS_ModifyDBInstance_Inputs For method chaining.
     */
    public function setPreferredMaintenanceWindow($value)
    {
        return $this->set('PreferredMaintenanceWindow', $value);
    }
}


/**
 * Execution object for the ModifyDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ModifyDBInstance Choreo.
     *
     * @param Temboo_Session $session The session that owns this ModifyDBInstance execution.
     * @param Amazon_RDS_ModifyDBInstance $choreo The choreography object for this execution.
     * @param Amazon_RDS_ModifyDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_ModifyDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_ModifyDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_ModifyDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ModifyDBInstance execution.
     *
     * @return Amazon_RDS_ModifyDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ModifyDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_ModifyDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_ModifyDBInstance_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ModifyDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_ModifyDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ModifyDBInstance Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_ModifyDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ModifyDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every subsequent login by the user name associated with the device.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_EnableMFADevice extends Temboo_Choreography
{
    /**
     * Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every subsequent login by the user name associated with the device.
     *
     * @param Temboo_Session $session The session that owns this EnableMFADevice Choreo.
     * @return Amazon_IAM_EnableMFADevice New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/EnableMFADevice/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this EnableMFADevice Choreo.
     *
     * @param Amazon_IAM_EnableMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_EnableMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_EnableMFADevice_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_EnableMFADevice_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this EnableMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_EnableMFADevice_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_EnableMFADevice_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the EnableMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_EnableMFADevice_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the EnableMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_EnableMFADevice_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this EnableMFADevice input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this EnableMFADevice Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this EnableMFADevice Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AuthenticationCode1 input for this EnableMFADevice Choreo.
     *
     * @param string $value (required, string) An authentication code emitted by the device.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setAuthenticationCode1($value)
    {
        return $this->set('AuthenticationCode1', $value);
    }

    /**
     * Set the value for the AuthenticationCode2 input for this EnableMFADevice Choreo.
     *
     * @param string $value (required, string) A subsequent authentication code emitted by the device.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setAuthenticationCode2($value)
    {
        return $this->set('AuthenticationCode2', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this EnableMFADevice Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SerialNumber input for this EnableMFADevice Choreo.
     *
     * @param string $value (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setSerialNumber($value)
    {
        return $this->set('SerialNumber', $value);
    }

    /**
     * Set the value for the UserName input for this EnableMFADevice Choreo.
     *
     * @param string $value (required, string) Name of the user for whom you want to enable the MFA device.
     * @return Amazon_IAM_EnableMFADevice_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the EnableMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_EnableMFADevice_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the EnableMFADevice Choreo.
     *
     * @param Temboo_Session $session The session that owns this EnableMFADevice execution.
     * @param Amazon_IAM_EnableMFADevice $choreo The choreography object for this execution.
     * @param Amazon_IAM_EnableMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_EnableMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_EnableMFADevice_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_EnableMFADevice $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this EnableMFADevice execution.
     *
     * @return Amazon_IAM_EnableMFADevice_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this EnableMFADevice execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_EnableMFADevice_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_EnableMFADevice_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the EnableMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_EnableMFADevice_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the EnableMFADevice Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_EnableMFADevice_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this EnableMFADevice execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about privisioned database instances.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances extends Temboo_Choreography
{
    /**
     * Returns information about privisioned database instances.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBInstances Choreo.
     * @return Amazon_RDS_DescribeDBInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeDBInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeDBInstances Choreo.
     *
     * @param Amazon_RDS_DescribeDBInstances_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeDBInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeDBInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeDBInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeDBInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeDBInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeDBInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeDBInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeDBInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeDBInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this DescribeDBInstances Choreo.
     *
     * @param string $value (optional, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the Marker input for this DescribeDBInstances Choreo.
     *
     * @param int $value (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeDBInstances Choreo.
     *
     * @param int $value (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
     * @return Amazon_RDS_DescribeDBInstances_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }
}


/**
 * Execution object for the DescribeDBInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeDBInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeDBInstances execution.
     * @param Amazon_RDS_DescribeDBInstances $choreo The choreography object for this execution.
     * @param Amazon_RDS_DescribeDBInstances_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeDBInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeDBInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeDBInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeDBInstances execution.
     *
     * @return Amazon_RDS_DescribeDBInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeDBInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeDBInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeDBInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeDBInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeDBInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeDBInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeDBInstances execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the password policy settings for the account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccountPasswordPolicy extends Temboo_Choreography
{
    /**
     * Updates the password policy settings for the account.
     *
     * @param Temboo_Session $session The session that owns this UpdateAccountPasswordPolicy Choreo.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UpdateAccountPasswordPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param Amazon_IAM_UpdateAccountPasswordPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateAccountPasswordPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UpdateAccountPasswordPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UpdateAccountPasswordPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccountPasswordPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateAccountPasswordPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateAccountPasswordPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllowUsersToChangePassword input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param bool $value (optional, boolean) Determines whether users can set/change their own passwords. Valid values: "true" or "false" (the default).
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setAllowUsersToChangePassword($value)
    {
        return $this->set('AllowUsersToChangePassword', $value);
    }

    /**
     * Set the value for the ExpirePasswords input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param bool $value (optional, boolean) Determines whether the passwords expire. Valid values: "true" or "false" (the default).
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setExpirePasswords($value)
    {
        return $this->set('ExpirePasswords', $value);
    }

    /**
     * Set the value for the MaxPasswordsAge input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param int $value (optional, integer) Maximum age of the passwords before they expire.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setMaxPasswordsAge($value)
    {
        return $this->set('MaxPasswordsAge', $value);
    }

    /**
     * Set the value for the MinimumPasswordLength input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param int $value (optional, integer) Mininum length of the password. Defaults to none.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setMinimumPasswordLength($value)
    {
        return $this->set('MinimumPasswordLength', $value);
    }

    /**
     * Set the value for the RequireLowercaseCharacters input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param bool $value (optional, boolean) Determines whether at least one lower-case character is required in the password. Valid values: "true" or "false" (the default).
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setRequireLowercaseCharacters($value)
    {
        return $this->set('RequireLowercaseCharacters', $value);
    }

    /**
     * Set the value for the RequireNumbers input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param bool $value (optional, boolean) Determines whether numbers are required in the password. Valid values: "true" or "false" (the default).
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setRequireNumbers($value)
    {
        return $this->set('RequireNumbers', $value);
    }

    /**
     * Set the value for the RequireSymbols input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param bool $value (optional, boolean) Determines whether symbols are required in the password. Valid values: "true" or "false" (the default).
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setRequireSymbols($value)
    {
        return $this->set('RequireSymbols', $value);
    }

    /**
     * Set the value for the RequireUppercaseCharacters input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param bool $value (optional, boolean) Determines whether at least one upper-case character is required in the password. Valid values: "true" or "false" (the default).
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setRequireUppercaseCharacters($value)
    {
        return $this->set('RequireUppercaseCharacters', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateAccountPasswordPolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the UpdateAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccountPasswordPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateAccountPasswordPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateAccountPasswordPolicy execution.
     * @param Amazon_IAM_UpdateAccountPasswordPolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_UpdateAccountPasswordPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateAccountPasswordPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UpdateAccountPasswordPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateAccountPasswordPolicy execution.
     *
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateAccountPasswordPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UpdateAccountPasswordPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccountPasswordPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateAccountPasswordPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UpdateAccountPasswordPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateAccountPasswordPolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified policy associated with the specified role.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRolePolicy extends Temboo_Choreography
{
    /**
     * Deletes the specified policy associated with the specified role.
     *
     * @param Temboo_Session $session The session that owns this DeleteRolePolicy Choreo.
     * @return Amazon_IAM_DeleteRolePolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteRolePolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteRolePolicy Choreo.
     *
     * @param Amazon_IAM_DeleteRolePolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteRolePolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteRolePolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteRolePolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteRolePolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteRolePolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteRolePolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRolePolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteRolePolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteRolePolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteRolePolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteRolePolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the PolicyName input for this DeleteRolePolicy Choreo.
     *
     * @param string $value (required, string) Name of the policy document.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs For method chaining.
     */
    public function setPolicyName($value)
    {
        return $this->set('PolicyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteRolePolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteRolePolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this DeleteRolePolicy Choreo.
     *
     * @param string $value (required, string) Name of the role the associated with the policy.
     * @return Amazon_IAM_DeleteRolePolicy_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the DeleteRolePolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRolePolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteRolePolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteRolePolicy execution.
     * @param Amazon_IAM_DeleteRolePolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteRolePolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteRolePolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteRolePolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteRolePolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteRolePolicy execution.
     *
     * @return Amazon_IAM_DeleteRolePolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteRolePolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteRolePolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteRolePolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteRolePolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteRolePolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteRolePolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteRolePolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteRolePolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specific set of tags from a specific set of resources.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteTags extends Temboo_Choreography
{
    /**
     * Deletes a specific set of tags from a specific set of resources.
     *
     * @param Temboo_Session $session The session that owns this DeleteTags Choreo.
     * @return Amazon_EC2_DeleteTags New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteTags/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteTags Choreo.
     *
     * @param Amazon_EC2_DeleteTags_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteTags_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteTags_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteTags_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteTags Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteTags_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteTags_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteTags_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteTags Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteTags_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteTags input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteTags Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteTags Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResourceId input for this DeleteTags Choreo.
     *
     * @param string $value (required, string) The ID of a resource to tag. This can be a comma-separated list of up to 10  Resource IDs.
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function setResourceId($value)
    {
        return $this->set('ResourceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteTags Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the TagKey input for this DeleteTags Choreo.
     *
     * @param string $value (required, string) The key for a tag.
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function setTagKey($value)
    {
        return $this->set('TagKey', $value);
    }

    /**
     * Set the value for the TagValue input for this DeleteTags Choreo.
     *
     * @param string $value (optional, string) Indicates a tag should be deleted only if the value matches.To delete a tag regardless of its value, leave this blank. To delete a tag with an empty string value (""), pass the string value "null".
     * @return Amazon_EC2_DeleteTags_Inputs For method chaining.
     */
    public function setTagValue($value)
    {
        return $this->set('TagValue', $value);
    }
}


/**
 * Execution object for the DeleteTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteTags_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteTags Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteTags execution.
     * @param Amazon_EC2_DeleteTags $choreo The choreography object for this execution.
     * @param Amazon_EC2_DeleteTags_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteTags_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteTags_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteTags $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteTags execution.
     *
     * @return Amazon_EC2_DeleteTags_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteTags execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteTags_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteTags_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteTags Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteTags_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteTags Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteTags_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteTags execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the groups the specified user belongs to.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupsForUser extends Temboo_Choreography
{
    /**
     * Lists the groups the specified user belongs to.
     *
     * @param Temboo_Session $session The session that owns this ListGroupsForUser Choreo.
     * @return Amazon_IAM_ListGroupsForUser New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListGroupsForUser/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListGroupsForUser Choreo.
     *
     * @param Amazon_IAM_ListGroupsForUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListGroupsForUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListGroupsForUser_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListGroupsForUser_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListGroupsForUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListGroupsForUser_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListGroupsForUser_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListGroupsForUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupsForUser_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListGroupsForUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListGroupsForUser_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListGroupsForUser input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListGroupsForUser Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListGroupsForUser Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListGroupsForUser Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListGroupsForUser Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the PathPrefix input for this ListGroupsForUser Choreo.
     *
     * @param string $value (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setPathPrefix($value)
    {
        return $this->set('PathPrefix', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListGroupsForUser Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this ListGroupsForUser Choreo.
     *
     * @param string $value (required, string) Lists the groups the specified user belongs to.
     * @return Amazon_IAM_ListGroupsForUser_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the ListGroupsForUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupsForUser_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListGroupsForUser Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListGroupsForUser execution.
     * @param Amazon_IAM_ListGroupsForUser $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListGroupsForUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListGroupsForUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListGroupsForUser_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListGroupsForUser $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListGroupsForUser execution.
     *
     * @return Amazon_IAM_ListGroupsForUser_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListGroupsForUser execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListGroupsForUser_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListGroupsForUser_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListGroupsForUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupsForUser_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListGroupsForUser Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListGroupsForUser_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListGroupsForUser execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Configures the specified bucket as a website and sets the web request redirects to a designated endpoint.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirect extends Temboo_Choreography
{
    /**
     * Configures the specified bucket as a website and sets the web request redirects to a designated endpoint.
     *
     * @param Temboo_Session $session The session that owns this PutBucketWebsiteRedirect Choreo.
     * @return Amazon_S3_PutBucketWebsiteRedirect New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketWebsiteRedirect/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketWebsiteRedirect Choreo.
     *
     * @param Amazon_S3_PutBucketWebsiteRedirect_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketWebsiteRedirect_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketWebsiteRedirect_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketWebsiteRedirect Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketWebsiteRedirect_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketWebsiteRedirect Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirect_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketWebsiteRedirect Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketWebsiteRedirect input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (required, string) The name of the bucket that you wish to configure.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CustomWebsiteRedirection input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, xml) A custom xml file for adding advanced website redirection rule(s). See description and Amazon  docs for details. Note - inputting a custom xml file will overwrite all other optional input values.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setCustomWebsiteRedirection($value)
    {
        return $this->set('CustomWebsiteRedirection', $value);
    }

    /**
     * Set the value for the ErrorDocument input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) The object key name to use when a 4XX class error occurs. Returns specified page when such an error occurs. Ex.: Error.html.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setErrorDocument($value)
    {
        return $this->set('ErrorDocument', $value);
    }

    /**
     * Set the value for the HostName input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) Name of the host where requests will be redirected. Used when setting redirect rules, optional if specifying ReplaceKeyPrefixWith or ReplaceKeyWith input variables). Ex.: example.com.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setHostName($value)
    {
        return $this->set('HostName', $value);
    }

    /**
     * Set the value for the HttpErrorCodeReturnedEquals input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) The HTTP error code condition for which a redirect occurs. If there's an error and the error code equals this value, then the specified redirect is applied. Can use with KeyPrefixEquals. Ex:  404.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setHttpErrorCodeReturnedEquals($value)
    {
        return $this->set('HttpErrorCodeReturnedEquals', $value);
    }

    /**
     * Set the value for the HttpRedirectCode input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) The HTTP redirect code to use on the response.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setHttpRedirectCode($value)
    {
        return $this->set('HttpRedirectCode', $value);
    }

    /**
     * Set the value for the KeyPrefixEquals input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) The name or prefix condition of the object that will trigger the redirect action. Can use with HttpErrorCodeReturnedEquals. Ex:  Single page: ExamplePage.html, All pages with prefix: /images.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setKeyPrefixEquals($value)
    {
        return $this->set('KeyPrefixEquals', $value);
    }

    /**
     * Set the value for the Protocol input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) Sets protocol to use when redirecting requests. Optional if you are specifying either ReplaceKeyPrefixWith or ReplaceKeyWith optional inputs. Possible values: http, https.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setProtocol($value)
    {
        return $this->set('Protocol', $value);
    }

    /**
     * Set the value for the ReplaceKeyPrefixWith input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) The object key prefix to use in the redirect request. Redirects requests to the specified prefix. Cannot be used with ReplaceKeyWith. Ex.: /documents.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setReplaceKeyPrefixWith($value)
    {
        return $this->set('ReplaceKeyPrefixWith', $value);
    }

    /**
     * Set the value for the ReplaceKeyWith input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) The specific object key to use in the redirect request. Cannot be used with ReplaceKeyPrefixWith. Ex.: error.html.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setReplaceKeyWith($value)
    {
        return $this->set('ReplaceKeyWith', $value);
    }

    /**
     * Set the value for the Suffix input for this PutBucketWebsiteRedirect Choreo.
     *
     * @param string $value (optional, string) The default page returned when there is a request to a directory. I.e.: if you input index.html, a request for /images/ will return the data for the object '/images/index.html'. Default is index.html.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Inputs For method chaining.
     */
    public function setSuffix($value)
    {
        return $this->set('Suffix', $value);
    }
}


/**
 * Execution object for the PutBucketWebsiteRedirect Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirect_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketWebsiteRedirect Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketWebsiteRedirect execution.
     * @param Amazon_S3_PutBucketWebsiteRedirect $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketWebsiteRedirect_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketWebsiteRedirect_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketWebsiteRedirect $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketWebsiteRedirect execution.
     *
     * @return Amazon_S3_PutBucketWebsiteRedirect_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketWebsiteRedirect execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketWebsiteRedirect_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketWebsiteRedirect Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirect_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketWebsiteRedirect Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirect_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketWebsiteRedirect execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful website configuration request, no content is returned and this output variable will be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the password policy for the AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountPasswordPolicy extends Temboo_Choreography
{
    /**
     * Deletes the password policy for the AWS account.
     *
     * @param Temboo_Session $session The session that owns this DeleteAccountPasswordPolicy Choreo.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteAccountPasswordPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteAccountPasswordPolicy Choreo.
     *
     * @param Amazon_IAM_DeleteAccountPasswordPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteAccountPasswordPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteAccountPasswordPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAccountPasswordPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteAccountPasswordPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountPasswordPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteAccountPasswordPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAccountPasswordPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteAccountPasswordPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteAccountPasswordPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteAccountPasswordPolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeleteAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountPasswordPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAccountPasswordPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteAccountPasswordPolicy execution.
     * @param Amazon_IAM_DeleteAccountPasswordPolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteAccountPasswordPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteAccountPasswordPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteAccountPasswordPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAccountPasswordPolicy execution.
     *
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteAccountPasswordPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteAccountPasswordPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteAccountPasswordPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountPasswordPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteAccountPasswordPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteAccountPasswordPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteAccountPasswordPolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Acquires an Elastic IP address for use with your AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AllocateAddress extends Temboo_Choreography
{
    /**
     * Acquires an Elastic IP address for use with your AWS account.
     *
     * @param Temboo_Session $session The session that owns this AllocateAddress Choreo.
     * @return Amazon_EC2_AllocateAddress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/AllocateAddress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AllocateAddress Choreo.
     *
     * @param Amazon_EC2_AllocateAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AllocateAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AllocateAddress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_AllocateAddress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AllocateAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AllocateAddress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_AllocateAddress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AllocateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AllocateAddress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AllocateAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AllocateAddress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AllocateAddress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_AllocateAddress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_AllocateAddress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AllocateAddress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AllocateAddress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AllocateAddress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AllocateAddress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Domain input for this AllocateAddress Choreo.
     *
     * @param string $value (conditional, string) Set to "vpc" to allocate the address for use with instances in a VPC.
     * @return Amazon_EC2_AllocateAddress_Inputs For method chaining.
     */
    public function setDomain($value)
    {
        return $this->set('Domain', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this AllocateAddress Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_AllocateAddress_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the AllocateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AllocateAddress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AllocateAddress Choreo.
     *
     * @param Temboo_Session $session The session that owns this AllocateAddress execution.
     * @param Amazon_EC2_AllocateAddress $choreo The choreography object for this execution.
     * @param Amazon_EC2_AllocateAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AllocateAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AllocateAddress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_AllocateAddress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AllocateAddress execution.
     *
     * @return Amazon_EC2_AllocateAddress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AllocateAddress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_AllocateAddress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_AllocateAddress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AllocateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AllocateAddress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AllocateAddress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_AllocateAddress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AllocateAddress execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new database security group which you can use to control the access to the database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup extends Temboo_Choreography
{
    /**
     * Creates a new database security group which you can use to control the access to the database instance.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSecurityGroup Choreo.
     * @return Amazon_RDS_CreateDBSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/CreateDBSecurityGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateDBSecurityGroup Choreo.
     *
     * @param Amazon_RDS_CreateDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_CreateDBSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateDBSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_CreateDBSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateDBSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateDBSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSecurityGroupDescription input for this CreateDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) A description for the security group you're creating.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupDescription($value)
    {
        return $this->set('DBSecurityGroupDescription', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this CreateDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) A unique name for the security group you want to create.
     * @return Amazon_RDS_CreateDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }
}


/**
 * Execution object for the CreateDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateDBSecurityGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSecurityGroup execution.
     * @param Amazon_RDS_CreateDBSecurityGroup $choreo The choreography object for this execution.
     * @param Amazon_RDS_CreateDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_CreateDBSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateDBSecurityGroup execution.
     *
     * @return Amazon_RDS_CreateDBSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateDBSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_CreateDBSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateDBSecurityGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateDBSecurityGroup execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new queue with a specified queue name.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue extends Temboo_Choreography
{
    /**
     * Creates a new queue with a specified queue name.
     *
     * @param Temboo_Session $session The session that owns this CreateQueue Choreo.
     * @return Amazon_SQS_CreateQueue New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/CreateQueue/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateQueue Choreo.
     *
     * @param Amazon_SQS_CreateQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_CreateQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_CreateQueue_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_CreateQueue_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateQueue Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_CreateQueue_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_CreateQueue_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateQueue Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateQueue Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_CreateQueue_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateQueue input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateQueue Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateQueue Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DefaultVisibilityTimeout input for this CreateQueue Choreo.
     *
     * @param int $value (optional, integer) The visibility timeout (in seconds) to use for the newly created queue.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setDefaultVisibilityTimeout($value)
    {
        return $this->set('DefaultVisibilityTimeout', $value);
    }

    /**
     * Set the value for the QueueName input for this CreateQueue Choreo.
     *
     * @param string $value (required, string) The name of the queue you want to create.
     * @return Amazon_SQS_CreateQueue_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the CreateQueue Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateQueue Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateQueue execution.
     * @param Amazon_SQS_CreateQueue $choreo The choreography object for this execution.
     * @param Amazon_SQS_CreateQueue_Inputs|array $inputs (optional) Inputs as Amazon_SQS_CreateQueue_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_CreateQueue_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_CreateQueue $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateQueue execution.
     *
     * @return Amazon_SQS_CreateQueue_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateQueue execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_CreateQueue_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_CreateQueue_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateQueue Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_CreateQueue_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateQueue Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_CreateQueue_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateQueue execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new DB Instance from a DB snapshot.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot extends Temboo_Choreography
{
    /**
     * Creates a new DB Instance from a DB snapshot.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceFromDBSnapshot Choreo.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RestoreDBInstanceFromDBSnapshot/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RestoreDBInstanceFromDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RestoreDBInstanceFromDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AutoMinorVersionUpgrade input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param bool $value (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAutoMinorVersionUpgrade($value)
    {
        return $this->set('AutoMinorVersionUpgrade', $value);
    }

    /**
     * Set the value for the AvailabilityZone input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (optional, string) The EC2 Availability Zone that the database instance will be created in. A random one is chose if not provided. Can not be specified if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setAvailabilityZone($value)
    {
        return $this->set('AvailabilityZone', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (optional, string) The compute and memory capacity of the Amazon RDS DB instance. Valid Values: db.m1.small | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (required, string) The identifier for the new DB instance that will be created from the specified Snapshot.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBName input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (optional, string) The database name for the restored DB Instance. Note that this parameter doesn't apply to the MySQL engine.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBName($value)
    {
        return $this->set('DBName', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (required, string) The name of the DB Snapshot to use.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }

    /**
     * Set the value for the Engine input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (optional, string) The database engine to use for the new instance. Valid Values: MySQL | oracle-se1 | oracle-se | oracle-ee.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setEngine($value)
    {
        return $this->set('Engine', $value);
    }

    /**
     * Set the value for the LicenseModel input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param string $value (optional, string) License model information for the restored DB Instance. Valid values: license-included | bring-your-own-license | general-public-license.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setLicenseModel($value)
    {
        return $this->set('LicenseModel', $value);
    }

    /**
     * Set the value for the MultiAZ input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param bool $value (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. Do not specify the AvailabilityZone parameter if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setMultiAZ($value)
    {
        return $this->set('MultiAZ', $value);
    }

    /**
     * Set the value for the Port input for this RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param int $value (optional, integer) The port number on which the database accepts connections.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs For method chaining.
     */
    public function setPort($value)
    {
        return $this->set('Port', $value);
    }
}


/**
 * Execution object for the RestoreDBInstanceFromDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceFromDBSnapshot execution.
     * @param Amazon_RDS_RestoreDBInstanceFromDBSnapshot $choreo The choreography object for this execution.
     * @param Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RestoreDBInstanceFromDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RestoreDBInstanceFromDBSnapshot execution.
     *
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RestoreDBInstanceFromDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RestoreDBInstanceFromDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RestoreDBInstanceFromDBSnapshot Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceFromDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RestoreDBInstanceFromDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListMFADevices extends Temboo_Choreography
{
    /**
     * Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request.
     *
     * @param Temboo_Session $session The session that owns this ListMFADevices Choreo.
     * @return Amazon_IAM_ListMFADevices New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListMFADevices/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListMFADevices Choreo.
     *
     * @param Amazon_IAM_ListMFADevices_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListMFADevices_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListMFADevices_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListMFADevices_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListMFADevices Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListMFADevices_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListMFADevices_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListMFADevices Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListMFADevices_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListMFADevices Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListMFADevices_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListMFADevices input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListMFADevices Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListMFADevices Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListMFADevices Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListMFADevices Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListMFADevices Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this ListMFADevices Choreo.
     *
     * @param string $value (optional, string) Name of the user whose MFA devices you want to list.
     * @return Amazon_IAM_ListMFADevices_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the ListMFADevices Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListMFADevices_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListMFADevices Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListMFADevices execution.
     * @param Amazon_IAM_ListMFADevices $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListMFADevices_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListMFADevices_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListMFADevices_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListMFADevices $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListMFADevices execution.
     *
     * @return Amazon_IAM_ListMFADevices_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListMFADevices execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListMFADevices_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListMFADevices_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListMFADevices Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListMFADevices_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListMFADevices Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListMFADevices_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListMFADevices execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes the statement from a topic's access control policy that was created with the AddPermission action.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission extends Temboo_Choreography
{
    /**
     * Removes the statement from a topic's access control policy that was created with the AddPermission action.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission Choreo.
     * @return Amazon_SNS_RemovePermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/RemovePermission/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RemovePermission Choreo.
     *
     * @param Amazon_SNS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_RemovePermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_RemovePermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RemovePermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_RemovePermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_RemovePermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RemovePermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RemovePermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_RemovePermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RemovePermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Label input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The unique identifier for the policy statement that you want to delete.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the TopicArn input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The ARN of the topic that has an access control policy you want to adjust.
     * @return Amazon_SNS_RemovePermission_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the RemovePermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RemovePermission Choreo.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission execution.
     * @param Amazon_SNS_RemovePermission $choreo The choreography object for this execution.
     * @param Amazon_SNS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_RemovePermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_RemovePermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RemovePermission execution.
     *
     * @return Amazon_SNS_RemovePermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RemovePermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_RemovePermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_RemovePermission_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RemovePermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_RemovePermission_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RemovePermission Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_RemovePermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RemovePermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified policy that is associated with the specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroupPolicy extends Temboo_Choreography
{
    /**
     * Deletes the specified policy that is associated with the specified group.
     *
     * @param Temboo_Session $session The session that owns this DeleteGroupPolicy Choreo.
     * @return Amazon_IAM_DeleteGroupPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteGroupPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteGroupPolicy Choreo.
     *
     * @param Amazon_IAM_DeleteGroupPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteGroupPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteGroupPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteGroupPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteGroupPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteGroupPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteGroupPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroupPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteGroupPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteGroupPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteGroupPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteGroupPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this DeleteGroupPolicy Choreo.
     *
     * @param string $value (required, string) Name of the group the policy is associated with.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the PolicyName input for this DeleteGroupPolicy Choreo.
     *
     * @param string $value (required, string) Name of the policy document.
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs For method chaining.
     */
    public function setPolicyName($value)
    {
        return $this->set('PolicyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteGroupPolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteGroupPolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeleteGroupPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroupPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteGroupPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteGroupPolicy execution.
     * @param Amazon_IAM_DeleteGroupPolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteGroupPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteGroupPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteGroupPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteGroupPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteGroupPolicy execution.
     *
     * @return Amazon_IAM_DeleteGroupPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteGroupPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteGroupPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteGroupPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteGroupPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroupPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteGroupPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteGroupPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteGroupPolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified topic and all its subscriptions.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic extends Temboo_Choreography
{
    /**
     * Deletes a specified topic and all its subscriptions.
     *
     * @param Temboo_Session $session The session that owns this DeleteTopic Choreo.
     * @return Amazon_SNS_DeleteTopic New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/DeleteTopic/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteTopic Choreo.
     *
     * @param Amazon_SNS_DeleteTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_DeleteTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_DeleteTopic_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_DeleteTopic_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteTopic Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_DeleteTopic_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_DeleteTopic_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteTopic Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_DeleteTopic_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteTopic input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteTopic Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteTopic Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the TopicArn input for this DeleteTopic Choreo.
     *
     * @param string $value (required, string) The ARN of the topic you want to delete.
     * @return Amazon_SNS_DeleteTopic_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the DeleteTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteTopic Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteTopic execution.
     * @param Amazon_SNS_DeleteTopic $choreo The choreography object for this execution.
     * @param Amazon_SNS_DeleteTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_DeleteTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_DeleteTopic_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_DeleteTopic $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteTopic execution.
     *
     * @return Amazon_SNS_DeleteTopic_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteTopic execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_DeleteTopic_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_DeleteTopic_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_DeleteTopic_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteTopic Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_DeleteTopic_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteTopic execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited flat file active listings report that contains only the SKU, ASIN, Price, and Quantity fields for items that have a quantity greater than zero.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited flat file active listings report that contains only the SKU, ASIN, Price, and Quantity fields for items that have a quantity greater than zero.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsLiteReport Choreo.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/MerchantListingsLiteReport/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this MerchantListingsLiteReport Choreo.
     *
     * @param Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this MerchantListingsLiteReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the MerchantListingsLiteReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the MerchantListingsLiteReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this MerchantListingsLiteReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this MerchantListingsLiteReport Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this MerchantListingsLiteReport Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this MerchantListingsLiteReport Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this MerchantListingsLiteReport Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this MerchantListingsLiteReport Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this MerchantListingsLiteReport Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the MerchantListingsLiteReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the MerchantListingsLiteReport Choreo.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsLiteReport execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsLiteReport $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsLiteReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_MerchantListingsLiteReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this MerchantListingsLiteReport execution.
     *
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this MerchantListingsLiteReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the MerchantListingsLiteReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the MerchantListingsLiteReport Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsLiteReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "GeneratedReportId" output from this MerchantListingsLiteReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this MerchantListingsLiteReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this MerchantListingsLiteReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Report" output from this MerchantListingsLiteReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }
}

/**
 * Deletes the specified AWS account alias.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountAlias extends Temboo_Choreography
{
    /**
     * Deletes the specified AWS account alias.
     *
     * @param Temboo_Session $session The session that owns this DeleteAccountAlias Choreo.
     * @return Amazon_IAM_DeleteAccountAlias New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteAccountAlias/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteAccountAlias Choreo.
     *
     * @param Amazon_IAM_DeleteAccountAlias_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteAccountAlias_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteAccountAlias_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteAccountAlias_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAccountAlias Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteAccountAlias_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteAccountAlias_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAccountAlias Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountAlias_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteAccountAlias Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteAccountAlias_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAccountAlias input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteAccountAlias_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteAccountAlias_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteAccountAlias Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteAccountAlias_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteAccountAlias Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteAccountAlias_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AccountAlias input for this DeleteAccountAlias Choreo.
     *
     * @param string $value (required, string) Name of the account alias to delete.
     * @return Amazon_IAM_DeleteAccountAlias_Inputs For method chaining.
     */
    public function setAccountAlias($value)
    {
        return $this->set('AccountAlias', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteAccountAlias Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteAccountAlias_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeleteAccountAlias Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountAlias_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAccountAlias Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteAccountAlias execution.
     * @param Amazon_IAM_DeleteAccountAlias $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteAccountAlias_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteAccountAlias_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteAccountAlias_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteAccountAlias $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAccountAlias execution.
     *
     * @return Amazon_IAM_DeleteAccountAlias_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteAccountAlias execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteAccountAlias_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteAccountAlias_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteAccountAlias Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccountAlias_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteAccountAlias Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteAccountAlias_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteAccountAlias execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited report of open listings. The report contains the SKU, ASIN, Price, and Quantity fields for inventory listings.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited report of open listings. The report contains the SKU, ASIN, Price, and Quantity fields for inventory listings.
     *
     * @param Temboo_Session $session The session that owns this ListInventoryReport Choreo.
     * @return Amazon_Marketplace_Reports_ListInventoryReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/ListInventoryReport/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListInventoryReport Choreo.
     *
     * @param Amazon_Marketplace_Reports_ListInventoryReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_ListInventoryReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_ListInventoryReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInventoryReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_ListInventoryReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInventoryReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListInventoryReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInventoryReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInventoryReport Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListInventoryReport Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListInventoryReport Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInventoryReport Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListInventoryReport Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this ListInventoryReport Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the ListInventoryReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInventoryReport Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListInventoryReport execution.
     * @param Amazon_Marketplace_Reports_ListInventoryReport $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_ListInventoryReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_ListInventoryReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_ListInventoryReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInventoryReport execution.
     *
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListInventoryReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_ListInventoryReport_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListInventoryReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_ListInventoryReport_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListInventoryReport Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_ListInventoryReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "GeneratedReportId" output from this ListInventoryReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this ListInventoryReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this ListInventoryReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Report" output from this ListInventoryReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }
}

/**
 * Returns orders associated with a seller order id that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId extends Temboo_Choreography
{
    /**
     * Returns orders associated with a seller order id that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithSellerOrderId Choreo.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/ListOrdersWithSellerOrderId/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListOrdersWithSellerOrderId Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListOrdersWithSellerOrderId Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListOrdersWithSellerOrderId input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CreatedAfter input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setCreatedAfter($value)
    {
        return $this->set('CreatedAfter', $value);
    }

    /**
     * Set the value for the CreatedBefore input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setCreatedBefore($value)
    {
        return $this->set('CreatedBefore', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxResultsPerPage input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param int $value (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setMaxResultsPerPage($value)
    {
        return $this->set('MaxResultsPerPage', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SellerOrderId input for this ListOrdersWithSellerOrderId Choreo.
     *
     * @param string $value (required, string) An order identifier that is specified by the seller.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs For method chaining.
     */
    public function setSellerOrderId($value)
    {
        return $this->set('SellerOrderId', $value);
    }
}


/**
 * Execution object for the ListOrdersWithSellerOrderId Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListOrdersWithSellerOrderId Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithSellerOrderId execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListOrdersWithSellerOrderId execution.
     *
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListOrdersWithSellerOrderId execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListOrdersWithSellerOrderId Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListOrdersWithSellerOrderId Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithSellerOrderId_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListOrdersWithSellerOrderId execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroup extends Temboo_Choreography
{
    /**
     * Deletes a specified group.
     *
     * @param Temboo_Session $session The session that owns this DeleteGroup Choreo.
     * @return Amazon_IAM_DeleteGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteGroup Choreo.
     *
     * @param Amazon_IAM_DeleteGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this DeleteGroup Choreo.
     *
     * @param string $value (required, string) The name of the group to delete.
     * @return Amazon_IAM_DeleteGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteGroup Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeleteGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteGroup execution.
     * @param Amazon_IAM_DeleteGroup $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteGroup execution.
     *
     * @return Amazon_IAM_DeleteGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about the availability of a seller's inventory using a given SellerSKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU extends Temboo_Choreography
{
    /**
     * Returns information about the availability of a seller's inventory using a given SellerSKU.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyBySKU Choreo.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Inventory/ListInventorySupplyBySKU/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListInventorySupplyBySKU Choreo.
     *
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInventorySupplyBySKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInventorySupplyBySKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListInventorySupplyBySKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInventorySupplyBySKU input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ResponseGroup input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (optional, string) Indicates whether or not to return the SupplyDetail element in the response. Valid values are: "Basic" (does not include SupplyDetail), and "Detailed" (includes SupplyDetail). Defaults to "Basic".
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setResponseGroup($value)
    {
        return $this->set('ResponseGroup', $value);
    }

    /**
     * Set the value for the SellerSKU input for this ListInventorySupplyBySKU Choreo.
     *
     * @param string $value (required, string) A seller SKU for an item that you want inventory availability information about.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs For method chaining.
     */
    public function setSellerSKU($value)
    {
        return $this->set('SellerSKU', $value);
    }
}


/**
 * Execution object for the ListInventorySupplyBySKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInventorySupplyBySKU Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyBySKU execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyBySKU $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Inventory_ListInventorySupplyBySKU $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInventorySupplyBySKU execution.
     *
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListInventorySupplyBySKU execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListInventorySupplyBySKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListInventorySupplyBySKU Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyBySKU_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListInventorySupplyBySKU execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeactivateMFADevice extends Temboo_Choreography
{
    /**
     * Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.
     *
     * @param Temboo_Session $session The session that owns this DeactivateMFADevice Choreo.
     * @return Amazon_IAM_DeactivateMFADevice New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeactivateMFADevice/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeactivateMFADevice Choreo.
     *
     * @param Amazon_IAM_DeactivateMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeactivateMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeactivateMFADevice_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeactivateMFADevice_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeactivateMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeactivateMFADevice_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeactivateMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeactivateMFADevice_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeactivateMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeactivateMFADevice input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeactivateMFADevice Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeactivateMFADevice Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeactivateMFADevice Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeactivateMFADevice_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SerialNumber input for this DeactivateMFADevice Choreo.
     *
     * @param string $value (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs For method chaining.
     */
    public function setSerialNumber($value)
    {
        return $this->set('SerialNumber', $value);
    }

    /**
     * Set the value for the UserName input for this DeactivateMFADevice Choreo.
     *
     * @param string $value (required, string) Name of the user whose MFA device you want to deactivate.
     * @return Amazon_IAM_DeactivateMFADevice_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the DeactivateMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeactivateMFADevice_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeactivateMFADevice Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeactivateMFADevice execution.
     * @param Amazon_IAM_DeactivateMFADevice $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeactivateMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeactivateMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeactivateMFADevice_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeactivateMFADevice $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeactivateMFADevice execution.
     *
     * @return Amazon_IAM_DeactivateMFADevice_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeactivateMFADevice execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeactivateMFADevice_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeactivateMFADevice_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeactivateMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeactivateMFADevice_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeactivateMFADevice Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeactivateMFADevice_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeactivateMFADevice execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns Availability Zones that are available for your EC2 account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones extends Temboo_Choreography
{
    /**
     * Returns Availability Zones that are available for your EC2 account.
     *
     * @param Temboo_Session $session The session that owns this DescribeAvailabilityZones Choreo.
     * @return Amazon_EC2_DescribeAvailabilityZones New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeAvailabilityZones/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeAvailabilityZones Choreo.
     *
     * @param Amazon_EC2_DescribeAvailabilityZones_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeAvailabilityZones_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeAvailabilityZones_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeAvailabilityZones_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeAvailabilityZones Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeAvailabilityZones_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeAvailabilityZones Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeAvailabilityZones Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeAvailabilityZones input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeAvailabilityZones Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeAvailabilityZones Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeAvailabilityZones Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow results with.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeAvailabilityZones Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeAvailabilityZones Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ZoneName input for this DescribeAvailabilityZones Choreo.
     *
     * @param string $value (optional, string) One or more Availability Zones.  This can be a comma-separated list of up to 10 instance Zones.
     * @return Amazon_EC2_DescribeAvailabilityZones_Inputs For method chaining.
     */
    public function setZoneName($value)
    {
        return $this->set('ZoneName', $value);
    }
}


/**
 * Execution object for the DescribeAvailabilityZones Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeAvailabilityZones Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeAvailabilityZones execution.
     * @param Amazon_EC2_DescribeAvailabilityZones $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeAvailabilityZones_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeAvailabilityZones_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeAvailabilityZones_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeAvailabilityZones $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeAvailabilityZones execution.
     *
     * @return Amazon_EC2_DescribeAvailabilityZones_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeAvailabilityZones execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeAvailabilityZones_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeAvailabilityZones Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAvailabilityZones_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeAvailabilityZones Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeAvailabilityZones_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeAvailabilityZones execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance extends Temboo_Choreography
{
    /**
     * Creates a new database instance.
     *
     * @param Temboo_Session $session The session that owns this CreateDBInstance Choreo.
     * @return Amazon_RDS_CreateDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/CreateDBInstance/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateDBInstance Choreo.
     *
     * @param Amazon_RDS_CreateDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_CreateDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_CreateDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateDBInstance Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateDBInstance Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllocatedStorage input for this CreateDBInstance Choreo.
     *
     * @param int $value (required, integer) Storage amount (in gigabytes) to be configured for the DB. Use 5 to 1024 for MySQL , 10 to 1024 for Oracle, or 200 to 1024 for SQLServer.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAllocatedStorage($value)
    {
        return $this->set('AllocatedStorage', $value);
    }

    /**
     * Set the value for the AutoMinorVersionUpgrade input for this CreateDBInstance Choreo.
     *
     * @param bool $value (optional, boolean) Indicates that minor engine upgrades will be applied to the DB Instance automatically during the maintenance window.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAutoMinorVersionUpgrade($value)
    {
        return $this->set('AutoMinorVersionUpgrade', $value);
    }

    /**
     * Set the value for the AvailabilityZone input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) The EC2 Availability Zone that the database instance will be created in (e.g. us-east-1a, us-east-1b, us-east-1c).
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setAvailabilityZone($value)
    {
        return $this->set('AvailabilityZone', $value);
    }

    /**
     * Set the value for the BackupRetentionPeriod input for this CreateDBInstance Choreo.
     *
     * @param int $value (optional, integer) The number of days for which automated backups are retained. When set to a positive number, backups are enabled. Set to 0 to disable automated backups.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setBackupRetentionPeriod($value)
    {
        return $this->set('BackupRetentionPeriod', $value);
    }

    /**
     * Set the value for the CharacterSetName input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) Indicates that the DB Instance should be associated with the specified CharacterSet.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setCharacterSetName($value)
    {
        return $this->set('CharacterSetName', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this CreateDBInstance Choreo.
     *
     * @param string $value (required, string) Capacity for the DB instance.  (db.m1.small, db.m1.large, db.m1.xlarge, db.m2.xlarge, db.m2.2xlarge, or db.m2.4xlarge).
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this CreateDBInstance Choreo.
     *
     * @param string $value (required, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBName input for this CreateDBInstance Choreo.
     *
     * @param string $value (conditional, string) For MySQL, this is the name of the db that is created on the instance. For Oracle, it refers to the SID. Must be null for SQLServer.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBName($value)
    {
        return $this->set('DBName', $value);
    }

    /**
     * Set the value for the DBParameterGroupName input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) The name of the DB Parameter Group to associate with this DB instance. If this argument is omitted, the default DBParameterGroup for the specified engine will be used.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBParameterGroupName($value)
    {
        return $this->set('DBParameterGroupName', $value);
    }

    /**
     * Set the value for the DBSecurityGroups input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) A comma separated list of up to 10 DB Security Groups to associate with this DB Instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBSecurityGroups($value)
    {
        return $this->set('DBSecurityGroups', $value);
    }

    /**
     * Set the value for the DBSubnetGroupName input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) A DB Subnet Group to associate with this DB Instance. When not specified, it indicates that this is a non-VPC DB instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setDBSubnetGroupName($value)
    {
        return $this->set('DBSubnetGroupName', $value);
    }

    /**
     * Set the value for the EngineVersion input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) The version number of the database engine to use.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setEngineVersion($value)
    {
        return $this->set('EngineVersion', $value);
    }

    /**
     * Set the value for the Engine input for this CreateDBInstance Choreo.
     *
     * @param string $value (required, string) The name of the database engine to use for the instance. Options are: MySQL, oracle-se1, oracle-se, oracle-ee, sqlserver-ee, sqlserver-se, sqlserver-ex, sqlserver-web.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setEngine($value)
    {
        return $this->set('Engine', $value);
    }

    /**
     * Set the value for the Iops input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) The amount of provisioned input/output operations per second to be initially allocated for the DB Instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setIops($value)
    {
        return $this->set('Iops', $value);
    }

    /**
     * Set the value for the LicenseModel input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) License model information for this DB Instance. Valid values are: license-included, bring-your-own-license, general-public-license.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setLicenseModel($value)
    {
        return $this->set('LicenseModel', $value);
    }

    /**
     * Set the value for the MasterUserPassword input for this CreateDBInstance Choreo.
     *
     * @param string $value (required, string) The master password for the DB instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setMasterUserPassword($value)
    {
        return $this->set('MasterUserPassword', $value);
    }

    /**
     * Set the value for the MasterUsername input for this CreateDBInstance Choreo.
     *
     * @param string $value (required, string) The master username for the DB instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setMasterUsername($value)
    {
        return $this->set('MasterUsername', $value);
    }

    /**
     * Set the value for the MultiAZ input for this CreateDBInstance Choreo.
     *
     * @param bool $value (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setMultiAZ($value)
    {
        return $this->set('MultiAZ', $value);
    }

    /**
     * Set the value for the OptionGroupName input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) Indicates that the DB Instance should be associated with the specified option group.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setOptionGroupName($value)
    {
        return $this->set('OptionGroupName', $value);
    }

    /**
     * Set the value for the Port input for this CreateDBInstance Choreo.
     *
     * @param int $value (optional, integer) The port number on which the database accepts connections. Valid range for MySQL is 1150-65535. Valid range for Oracle is 1150-65535. Valid range for SQLServer is 1150-65535 except for 1434 and 3389.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setPort($value)
    {
        return $this->set('Port', $value);
    }

    /**
     * Set the value for the PreferredBackupWindow input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter. Must be in the format hh24:mi-hh24:mi (in UTC).
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setPreferredBackupWindow($value)
    {
        return $this->set('PreferredBackupWindow', $value);
    }

    /**
     * Set the value for the PreferredMaintenanceWindow input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) The weekly time range (in UTC) during which system maintenance can occur. Format: ddd:hh24:mi-ddd:hh24:mi.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setPreferredMaintenanceWindow($value)
    {
        return $this->set('PreferredMaintenanceWindow', $value);
    }

    /**
     * Set the value for the PubliclyAccessible input for this CreateDBInstance Choreo.
     *
     * @param bool $value (optional, boolean) Specifies the accessibility options for the DB Instance. The default behavior varies depending on whether a VPC has been requested or not.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setPubliclyAccessible($value)
    {
        return $this->set('PubliclyAccessible', $value);
    }

    /**
     * Set the value for the VpcSecurityGroupIds input for this CreateDBInstance Choreo.
     *
     * @param string $value (optional, string) A comma separated list of up to 10 EC2 VPC Security Groups to associate with this DB Instance.
     * @return Amazon_RDS_CreateDBInstance_Inputs For method chaining.
     */
    public function setVpcSecurityGroupIds($value)
    {
        return $this->set('VpcSecurityGroupIds', $value);
    }
}


/**
 * Execution object for the CreateDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateDBInstance Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateDBInstance execution.
     * @param Amazon_RDS_CreateDBInstance $choreo The choreography object for this execution.
     * @param Amazon_RDS_CreateDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_CreateDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateDBInstance execution.
     *
     * @return Amazon_RDS_CreateDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_CreateDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_CreateDBInstance_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateDBInstance Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_CreateDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves account level information about account entity usage and IAM quotas.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountSummary extends Temboo_Choreography
{
    /**
     * Retrieves account level information about account entity usage and IAM quotas.
     *
     * @param Temboo_Session $session The session that owns this GetAccountSummary Choreo.
     * @return Amazon_IAM_GetAccountSummary New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetAccountSummary/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAccountSummary Choreo.
     *
     * @param Amazon_IAM_GetAccountSummary_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetAccountSummary_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetAccountSummary_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetAccountSummary_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountSummary Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetAccountSummary_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetAccountSummary_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountSummary Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountSummary_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAccountSummary Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetAccountSummary_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountSummary input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetAccountSummary_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetAccountSummary_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetAccountSummary Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetAccountSummary_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetAccountSummary Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetAccountSummary_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetAccountSummary Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetAccountSummary_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetAccountSummary Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountSummary_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountSummary Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAccountSummary execution.
     * @param Amazon_IAM_GetAccountSummary $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetAccountSummary_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetAccountSummary_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetAccountSummary_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetAccountSummary $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountSummary execution.
     *
     * @return Amazon_IAM_GetAccountSummary_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAccountSummary execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetAccountSummary_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetAccountSummary_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAccountSummary Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetAccountSummary_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAccountSummary Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetAccountSummary_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetAccountSummary execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified signing certificate associated with the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteSigningCertificate extends Temboo_Choreography
{
    /**
     * Deletes the specified signing certificate associated with the specified user.
     *
     * @param Temboo_Session $session The session that owns this DeleteSigningCertificate Choreo.
     * @return Amazon_IAM_DeleteSigningCertificate New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteSigningCertificate/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteSigningCertificate Choreo.
     *
     * @param Amazon_IAM_DeleteSigningCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteSigningCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteSigningCertificate_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteSigningCertificate_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteSigningCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteSigningCertificate_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteSigningCertificate_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteSigningCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteSigningCertificate input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteSigningCertificate Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteSigningCertificate Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CertificateId input for this DeleteSigningCertificate Choreo.
     *
     * @param string $value (required, string) ID of the signing certificate to delete.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs For method chaining.
     */
    public function setCertificateId($value)
    {
        return $this->set('CertificateId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteSigningCertificate Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this DeleteSigningCertificate Choreo.
     *
     * @param string $value (optional, string) Name of the user the signing certificate belongs to.
     * @return Amazon_IAM_DeleteSigningCertificate_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the DeleteSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteSigningCertificate_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteSigningCertificate Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteSigningCertificate execution.
     * @param Amazon_IAM_DeleteSigningCertificate $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteSigningCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteSigningCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteSigningCertificate_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteSigningCertificate $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteSigningCertificate execution.
     *
     * @return Amazon_IAM_DeleteSigningCertificate_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteSigningCertificate execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteSigningCertificate_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteSigningCertificate_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteSigningCertificate_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteSigningCertificate Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteSigningCertificate_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteSigningCertificate execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the request payment configuration of a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketRequestPayment extends Temboo_Choreography
{
    /**
     * Retrieves the request payment configuration of a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketRequestPayment Choreo.
     * @return Amazon_S3_GetBucketRequestPayment New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketRequestPayment/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketRequestPayment Choreo.
     *
     * @param Amazon_S3_GetBucketRequestPayment_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketRequestPayment_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketRequestPayment_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketRequestPayment_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketRequestPayment Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketRequestPayment_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketRequestPayment_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketRequestPayment Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketRequestPayment_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketRequestPayment Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketRequestPayment_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketRequestPayment input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketRequestPayment_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketRequestPayment_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketRequestPayment Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketRequestPayment_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketRequestPayment Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketRequestPayment_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketRequestPayment Choreo.
     *
     * @param string $value (required, string) The name of the bucket to retrieve request payment configuration information for.
     * @return Amazon_S3_GetBucketRequestPayment_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketRequestPayment Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketRequestPayment_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketRequestPayment Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketRequestPayment_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketRequestPayment Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketRequestPayment execution.
     * @param Amazon_S3_GetBucketRequestPayment $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketRequestPayment_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketRequestPayment_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketRequestPayment_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketRequestPayment $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketRequestPayment execution.
     *
     * @return Amazon_S3_GetBucketRequestPayment_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketRequestPayment execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketRequestPayment_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketRequestPayment_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketRequestPayment Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketRequestPayment_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketRequestPayment Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketRequestPayment_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketRequestPayment execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Submits a feed, of the specified type, to Amazon Marketplace.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed extends Temboo_Choreography
{
    /**
     * Submits a feed, of the specified type, to Amazon Marketplace.
     *
     * @param Temboo_Session $session The session that owns this SubmitFeed Choreo.
     * @return Amazon_Marketplace_Feeds_SubmitFeed New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/SubmitFeed/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SubmitFeed Choreo.
     *
     * @param Amazon_Marketplace_Feeds_SubmitFeed_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_SubmitFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_SubmitFeed_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SubmitFeed Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_SubmitFeed_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SubmitFeed Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SubmitFeed Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SubmitFeed input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FeedData input for this SubmitFeed Choreo.
     *
     * @param string $value (conditional, multiline) The feed data to submit to Amazon Marketplace.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setFeedData($value)
    {
        return $this->set('FeedData', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SubmitFeed Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this SubmitFeed Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this SubmitFeed Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SubmitFeed Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this SubmitFeed Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FeedType input for this SubmitFeed Choreo.
     *
     * @param string $value (optional, string) The type of feed being submitted.  Default value is set to  _POST_FLAT_FILE_INVLOADER_DATA_).
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setFeedType($value)
    {
        return $this->set('FeedType', $value);
    }

    /**
     * Set the value for the TimeToWait input for this SubmitFeed Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the SubmitFeed Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SubmitFeed Choreo.
     *
     * @param Temboo_Session $session The session that owns this SubmitFeed execution.
     * @param Amazon_Marketplace_Feeds_SubmitFeed $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_SubmitFeed_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_SubmitFeed_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_SubmitFeed $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SubmitFeed execution.
     *
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SubmitFeed execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_SubmitFeed_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SubmitFeed Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_SubmitFeed_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SubmitFeed Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_SubmitFeed_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ProcessingStatus" output from this SubmitFeed execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this SubmitFeed execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "SubmissionId" output from this SubmitFeed execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }
    /**
     * Retrieve the value for the "SubmissionResult" output from this SubmitFeed execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Retrieves a specified item from an Amazon S3 bucket, returns the file content as base64-encoded data, and returns the values of key response headers as output variables if available.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject extends Temboo_Choreography
{
    /**
     * Retrieves a specified item from an Amazon S3 bucket, returns the file content as base64-encoded data, and returns the values of key response headers as output variables if available.
     *
     * @param Temboo_Session $session The session that owns this GetBase64EncodedObject Choreo.
     * @return Amazon_S3_GetBase64EncodedObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBase64EncodedObject/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBase64EncodedObject Choreo.
     *
     * @param Amazon_S3_GetBase64EncodedObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBase64EncodedObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBase64EncodedObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBase64EncodedObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBase64EncodedObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBase64EncodedObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBase64EncodedObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBase64EncodedObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBase64EncodedObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (required, string) The name of the bucket that contains the object to retrieve.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (required, string) The name of the file to retrieve.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }

    /**
     * Set the value for the IfMatch input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (optional, string) Returns the object only if its entity tag (ETag) is the same as the one specified, otherwise returns a 412 (precondition failed) error.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setIfMatch($value)
    {
        return $this->set('IfMatch', $value);
    }

    /**
     * Set the value for the IfModifiedSince input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (optional, date) Returns the object only if it has been modified since the specific time, otherwise returns a 304 (not modified) error.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setIfModifiedSince($value)
    {
        return $this->set('IfModifiedSince', $value);
    }

    /**
     * Set the value for the IfNoneMatch input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (optional, string) Returns the object only if its entity tag (ETag) is different from the one specified, otherwise retuns a 304 (not modified) error. Will not work correctly with IfModifiedSince.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setIfNoneMatch($value)
    {
        return $this->set('IfNoneMatch', $value);
    }

    /**
     * Set the value for the IfUnmodifiedSince input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (optional, date) Returns the object only if it has not been modified since the specified time, otherwise returns a 412 (precondition failed) error.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setIfUnmodifiedSince($value)
    {
        return $this->set('IfUnmodifiedSince', $value);
    }

    /**
     * Set the value for the Range input for this GetBase64EncodedObject Choreo.
     *
     * @param string $value (optional, string) Downloads the specific range of bytes of an object. Ex: 0-9 (returns the first 10 bytes of an object), 100-1000, etc. If the range value exceeds the end of file, it will return up to the end of file.
     * @return Amazon_S3_GetBase64EncodedObject_Inputs For method chaining.
     */
    public function setRange($value)
    {
        return $this->set('Range', $value);
    }
}


/**
 * Execution object for the GetBase64EncodedObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBase64EncodedObject Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBase64EncodedObject execution.
     * @param Amazon_S3_GetBase64EncodedObject $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBase64EncodedObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBase64EncodedObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBase64EncodedObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBase64EncodedObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBase64EncodedObject execution.
     *
     * @return Amazon_S3_GetBase64EncodedObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBase64EncodedObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBase64EncodedObject_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBase64EncodedObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBase64EncodedObject_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBase64EncodedObject Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBase64EncodedObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "DeleteMarker" output from this GetBase64EncodedObject execution.
     *
     * @return bool (boolean) Returns true if the object retrieved was a Delete Marker otherwise no value.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getDeleteMarker()
    {
        return $this->get('DeleteMarker');
    }
    /**
     * Retrieve the value for the "Expiration" output from this GetBase64EncodedObject execution.
     *
     * @return string (string) Appears if the object expiration is configured. It includes expiry-date and URL-encoded rule-id key value pairs providing object expiration information.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getExpiration()
    {
        return $this->get('Expiration');
    }
    /**
     * Retrieve the value for the "Response" output from this GetBase64EncodedObject execution.
     *
     * @return string (string) The base64-encoded contents of the file you are retrieving.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "Restore" output from this GetBase64EncodedObject execution.
     *
     * @return string (string) Provides information about the object restoration operation and expiration time of the restored object copy.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getRestore()
    {
        return $this->get('Restore');
    }
    /**
     * Retrieve the value for the "ServerSideEncryption" output from this GetBase64EncodedObject execution.
     *
     * @return string (string) If the object is stored using server-side encryption, response includes this header with value of the encryption algorithm used. Valid Values: AES256.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getServerSideEncryption()
    {
        return $this->get('ServerSideEncryption');
    }
    /**
     * Retrieve the value for the "VersionID" output from this GetBase64EncodedObject execution.
     *
     * @return string (string) Returns the version ID of the retrieved object if it has a unique version ID.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getVersionID()
    {
        return $this->get('VersionID');
    }
    /**
     * Retrieve the value for the "WebsiteRedirectLocation" output from this GetBase64EncodedObject execution.
     *
     * @return string (string) For a bucket configured as a website, this metadata can be set so the website will evaluate the request for the object as a 301 redirect to another object in the same bucket or an external URL.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getWebsiteRedirectLocation()
    {
        return $this->get('WebsiteRedirectLocation');
    }
}

/**
 * Deletes multiple objects from an S3 Bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects extends Temboo_Choreography
{
    /**
     * Deletes multiple objects from an S3 Bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteMultipleObjects Choreo.
     * @return Amazon_S3_DeleteMultipleObjects New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteMultipleObjects/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteMultipleObjects Choreo.
     *
     * @param Amazon_S3_DeleteMultipleObjects_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteMultipleObjects_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteMultipleObjects_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteMultipleObjects_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteMultipleObjects Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteMultipleObjects_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteMultipleObjects Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteMultipleObjects Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteMultipleObjects input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteMultipleObjects Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteMultipleObjects Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteMultipleObjects Choreo.
     *
     * @param string $value (required, string) The the name of the bucket that contains the objects that you want to delete.
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileNames input for this DeleteMultipleObjects Choreo.
     *
     * @param string $value (required, string) A list of file names to delete (separated by commas).
     * @return Amazon_S3_DeleteMultipleObjects_Inputs For method chaining.
     */
    public function setFileNames($value)
    {
        return $this->set('FileNames', $value);
    }
}


/**
 * Execution object for the DeleteMultipleObjects Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteMultipleObjects Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteMultipleObjects execution.
     * @param Amazon_S3_DeleteMultipleObjects $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteMultipleObjects_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteMultipleObjects_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteMultipleObjects_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteMultipleObjects $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteMultipleObjects execution.
     *
     * @return Amazon_S3_DeleteMultipleObjects_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteMultipleObjects execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteMultipleObjects_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteMultipleObjects Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteMultipleObjects_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteMultipleObjects Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteMultipleObjects_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteMultipleObjects execution.
     *
     * @return string The response from Amazon. Note that no content is returned for a successful delete operation.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the policy of a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy extends Temboo_Choreography
{
    /**
     * Returns the policy of a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketPolicy Choreo.
     * @return Amazon_S3_GetBucketPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketPolicy Choreo.
     *
     * @param Amazon_S3_GetBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketPolicy Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the policy you want to retrieve.
     * @return Amazon_S3_GetBucketPolicy_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the GetBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketPolicy execution.
     * @param Amazon_S3_GetBucketPolicy $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketPolicy execution.
     *
     * @return Amazon_S3_GetBucketPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketPolicy execution.
     *
     * @return string (json) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new EBS volume that your EC2 instance can attach to.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume extends Temboo_Choreography
{
    /**
     * Creates a new EBS volume that your EC2 instance can attach to.
     *
     * @param Temboo_Session $session The session that owns this CreateVolume Choreo.
     * @return Amazon_EC2_CreateVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateVolume/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateVolume Choreo.
     *
     * @param Amazon_EC2_CreateVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateVolume Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateVolume Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AvailabilityZone input for this CreateVolume Choreo.
     *
     * @param string $value (required, string) The Availability Zone to use when creating thew new volume (i.e us-east-1a).
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setAvailabilityZone($value)
    {
        return $this->set('AvailabilityZone', $value);
    }

    /**
     * Set the value for the Iops input for this CreateVolume Choreo.
     *
     * @param int $value (optional, integer) The number of I/O operations per second (IOPS) that the volume supports. Valid range is 100 to 2000. Required when the volume type is io1.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setIops($value)
    {
        return $this->set('Iops', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateVolume Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Size input for this CreateVolume Choreo.
     *
     * @param int $value (conditional, integer) The size for the volume (in gigabytes) that you are creating. Valid Values are 1-1024. Required if you're not creating a volume from a snapshot. If the volume type is io1, the min size is 10 GiB.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setSize($value)
    {
        return $this->set('Size', $value);
    }

    /**
     * Set the value for the SnapshotId input for this CreateVolume Choreo.
     *
     * @param string $value (conditional, string) The snapshot from which to create the new volume. Required if you are creating a volume from a snapshot.
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }

    /**
     * Set the value for the VolumeType input for this CreateVolume Choreo.
     *
     * @param string $value (optional, string) The volume type.Valid values are: "standard" (the default) and "io1".
     * @return Amazon_EC2_CreateVolume_Inputs For method chaining.
     */
    public function setVolumeType($value)
    {
        return $this->set('VolumeType', $value);
    }
}


/**
 * Execution object for the CreateVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateVolume Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateVolume execution.
     * @param Amazon_EC2_CreateVolume $choreo The choreography object for this execution.
     * @param Amazon_EC2_CreateVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateVolume execution.
     *
     * @return Amazon_EC2_CreateVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateVolume_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateVolume_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateVolume Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateVolume execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Enable monitoring for a specified instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances extends Temboo_Choreography
{
    /**
     * Enable monitoring for a specified instance.
     *
     * @param Temboo_Session $session The session that owns this MonitorInstances Choreo.
     * @return Amazon_EC2_MonitorInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/MonitorInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this MonitorInstances Choreo.
     *
     * @param Amazon_EC2_MonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_MonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_MonitorInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_MonitorInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this MonitorInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_MonitorInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_MonitorInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the MonitorInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the MonitorInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_MonitorInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this MonitorInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this MonitorInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this MonitorInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this MonitorInstances Choreo.
     *
     * @param string $value (required, string) The ID(s) of the instance(s) you want to monitor. This can be a comma-separated list of up to 10 instance IDs.
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this MonitorInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_MonitorInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the MonitorInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the MonitorInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this MonitorInstances execution.
     * @param Amazon_EC2_MonitorInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_MonitorInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_MonitorInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_MonitorInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_MonitorInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this MonitorInstances execution.
     *
     * @return Amazon_EC2_MonitorInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this MonitorInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_MonitorInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_MonitorInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the MonitorInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_MonitorInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the MonitorInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_MonitorInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this MonitorInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the name and/or the path of the specified server certificate.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateServerCertificate extends Temboo_Choreography
{
    /**
     * Updates the name and/or the path of the specified server certificate.
     *
     * @param Temboo_Session $session The session that owns this UpdateServerCertificate Choreo.
     * @return Amazon_IAM_UpdateServerCertificate New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UpdateServerCertificate/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateServerCertificate Choreo.
     *
     * @param Amazon_IAM_UpdateServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateServerCertificate_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UpdateServerCertificate_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UpdateServerCertificate_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateServerCertificate_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateServerCertificate input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateServerCertificate Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateServerCertificate Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NewPath input for this UpdateServerCertificate Choreo.
     *
     * @param string $value (conditional, string) The new path for the server certificate. Include this only if you are updating the server certificate's path.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function setNewPath($value)
    {
        return $this->set('NewPath', $value);
    }

    /**
     * Set the value for the NewServerCertificateName input for this UpdateServerCertificate Choreo.
     *
     * @param string $value (conditional, string) The new name for the server certificate. Include this only if you are updating the server certificate's name.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function setNewServerCertificateName($value)
    {
        return $this->set('NewServerCertificateName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateServerCertificate Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ServerCertificateName input for this UpdateServerCertificate Choreo.
     *
     * @param string $value (required, string) The name for the server certificate. Do not include the path in this value.
     * @return Amazon_IAM_UpdateServerCertificate_Inputs For method chaining.
     */
    public function setServerCertificateName($value)
    {
        return $this->set('ServerCertificateName', $value);
    }
}


/**
 * Execution object for the UpdateServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateServerCertificate_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateServerCertificate Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateServerCertificate execution.
     * @param Amazon_IAM_UpdateServerCertificate $choreo The choreography object for this execution.
     * @param Amazon_IAM_UpdateServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateServerCertificate_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UpdateServerCertificate $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateServerCertificate execution.
     *
     * @return Amazon_IAM_UpdateServerCertificate_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateServerCertificate execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UpdateServerCertificate_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UpdateServerCertificate_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateServerCertificate_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateServerCertificate Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UpdateServerCertificate_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateServerCertificate execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the current competitive pricing of products, based on  ASIN values and the MarketplaceId that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN extends Temboo_Choreography
{
    /**
     * Returns the current competitive pricing of products, based on  ASIN values and the MarketplaceId that you specify.
     *
     * @param Temboo_Session $session The session that owns this GetCompetitivePricingForASIN Choreo.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetCompetitivePricingForASIN/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetCompetitivePricingForASIN Choreo.
     *
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetCompetitivePricingForASIN Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetCompetitivePricingForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetCompetitivePricingForASIN Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetCompetitivePricingForASIN input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetCompetitivePricingForASIN Choreo.
     *
     * @param string $value (required, string) A comma-separated list of up to 20 ASIN values used to identify products in the given marketplace.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetCompetitivePricingForASIN Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetCompetitivePricingForASIN Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetCompetitivePricingForASIN Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetCompetitivePricingForASIN Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetCompetitivePricingForASIN Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetCompetitivePricingForASIN Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetCompetitivePricingForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetCompetitivePricingForASIN Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetCompetitivePricingForASIN execution.
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForASIN $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetCompetitivePricingForASIN $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetCompetitivePricingForASIN execution.
     *
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetCompetitivePricingForASIN execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetCompetitivePricingForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetCompetitivePricingForASIN Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForASIN_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetCompetitivePricingForASIN execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of the user's subscriptions. Each call returns a limited list of subscriptions, up to 100.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions extends Temboo_Choreography
{
    /**
     * Returns a list of the user's subscriptions. Each call returns a limited list of subscriptions, up to 100.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptions Choreo.
     * @return Amazon_SNS_ListSubscriptions New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ListSubscriptions/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListSubscriptions Choreo.
     *
     * @param Amazon_SNS_ListSubscriptions_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptions_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptions_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ListSubscriptions_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListSubscriptions Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptions_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ListSubscriptions_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListSubscriptions Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListSubscriptions Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptions_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListSubscriptions input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListSubscriptions Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListSubscriptions Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NextToken input for this ListSubscriptions Choreo.
     *
     * @param string $value (optional, string) The token returned from a previous LIstSubscriptions request.
     * @return Amazon_SNS_ListSubscriptions_Inputs For method chaining.
     */
    public function setNextToken($value)
    {
        return $this->set('NextToken', $value);
    }
}


/**
 * Execution object for the ListSubscriptions Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListSubscriptions Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptions execution.
     * @param Amazon_SNS_ListSubscriptions $choreo The choreography object for this execution.
     * @param Amazon_SNS_ListSubscriptions_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptions_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptions_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ListSubscriptions $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListSubscriptions execution.
     *
     * @return Amazon_SNS_ListSubscriptions_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListSubscriptions execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptions_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ListSubscriptions_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListSubscriptions Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptions_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListSubscriptions Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptions_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListSubscriptions execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of the subscriptions for a specified topic.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic extends Temboo_Choreography
{
    /**
     * Returns a list of the subscriptions for a specified topic.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptionsByTopic Choreo.
     * @return Amazon_SNS_ListSubscriptionsByTopic New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ListSubscriptionsByTopic/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListSubscriptionsByTopic Choreo.
     *
     * @param Amazon_SNS_ListSubscriptionsByTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptionsByTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ListSubscriptionsByTopic_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListSubscriptionsByTopic Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ListSubscriptionsByTopic_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListSubscriptionsByTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListSubscriptionsByTopic Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListSubscriptionsByTopic input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListSubscriptionsByTopic Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListSubscriptionsByTopic Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NextToken input for this ListSubscriptionsByTopic Choreo.
     *
     * @param string $value (optional, string) The token returned from a previous LIstSubscriptionsByTopic request.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setNextToken($value)
    {
        return $this->set('NextToken', $value);
    }

    /**
     * Set the value for the TopicArn input for this ListSubscriptionsByTopic Choreo.
     *
     * @param string $value (required, string) The ARN of the topic that you want to find subscriptions for.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the ListSubscriptionsByTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListSubscriptionsByTopic Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListSubscriptionsByTopic execution.
     * @param Amazon_SNS_ListSubscriptionsByTopic $choreo The choreography object for this execution.
     * @param Amazon_SNS_ListSubscriptionsByTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListSubscriptionsByTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ListSubscriptionsByTopic $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListSubscriptionsByTopic execution.
     *
     * @return Amazon_SNS_ListSubscriptionsByTopic_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListSubscriptionsByTopic execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ListSubscriptionsByTopic_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListSubscriptionsByTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListSubscriptionsByTopic_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListSubscriptionsByTopic Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ListSubscriptionsByTopic_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListSubscriptionsByTopic execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Configures the specified bucket as a website and redirects all web requests to the designated hostname.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirectAll extends Temboo_Choreography
{
    /**
     * Configures the specified bucket as a website and redirects all web requests to the designated hostname.
     *
     * @param Temboo_Session $session The session that owns this PutBucketWebsiteRedirectAll Choreo.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketWebsiteRedirectAll/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketWebsiteRedirectAll Choreo.
     *
     * @param Amazon_S3_PutBucketWebsiteRedirectAll_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketWebsiteRedirectAll_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketWebsiteRedirectAll_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketWebsiteRedirectAll Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketWebsiteRedirectAll_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketWebsiteRedirectAll Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirectAll_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketWebsiteRedirectAll Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketWebsiteRedirectAll input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketWebsiteRedirectAll Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketWebsiteRedirectAll Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketWebsiteRedirectAll Choreo.
     *
     * @param string $value (required, string) The name of the bucket that you wish to configure.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the HostName input for this PutBucketWebsiteRedirectAll Choreo.
     *
     * @param string $value (required, string) Name of the host where requests will be redirected. Ex.: example.com
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs For method chaining.
     */
    public function setHostName($value)
    {
        return $this->set('HostName', $value);
    }

    /**
     * Set the value for the Protocol input for this PutBucketWebsiteRedirectAll Choreo.
     *
     * @param string $value (optional, string) Protocol to use (http, https) when redirecting requests. The default is http.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Inputs For method chaining.
     */
    public function setProtocol($value)
    {
        return $this->set('Protocol', $value);
    }
}


/**
 * Execution object for the PutBucketWebsiteRedirectAll Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirectAll_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketWebsiteRedirectAll Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketWebsiteRedirectAll execution.
     * @param Amazon_S3_PutBucketWebsiteRedirectAll $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketWebsiteRedirectAll_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketWebsiteRedirectAll_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketWebsiteRedirectAll $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketWebsiteRedirectAll execution.
     *
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketWebsiteRedirectAll execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketWebsiteRedirectAll_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketWebsiteRedirectAll Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketWebsiteRedirectAll_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketWebsiteRedirectAll Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketWebsiteRedirectAll_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketWebsiteRedirectAll execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful website configuration request, no content is returned and this output variable will be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes the specified user from the specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveUserFromGroup extends Temboo_Choreography
{
    /**
     * Removes the specified user from the specified group.
     *
     * @param Temboo_Session $session The session that owns this RemoveUserFromGroup Choreo.
     * @return Amazon_IAM_RemoveUserFromGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/RemoveUserFromGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RemoveUserFromGroup Choreo.
     *
     * @param Amazon_IAM_RemoveUserFromGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_RemoveUserFromGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_RemoveUserFromGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_RemoveUserFromGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RemoveUserFromGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_RemoveUserFromGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RemoveUserFromGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveUserFromGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RemoveUserFromGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RemoveUserFromGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RemoveUserFromGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RemoveUserFromGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this RemoveUserFromGroup Choreo.
     *
     * @param string $value (required, string) Name of the group to update.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RemoveUserFromGroup Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this RemoveUserFromGroup Choreo.
     *
     * @param string $value (required, string) Name of the user to remove.
     * @return Amazon_IAM_RemoveUserFromGroup_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the RemoveUserFromGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveUserFromGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RemoveUserFromGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this RemoveUserFromGroup execution.
     * @param Amazon_IAM_RemoveUserFromGroup $choreo The choreography object for this execution.
     * @param Amazon_IAM_RemoveUserFromGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_RemoveUserFromGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_RemoveUserFromGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_RemoveUserFromGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RemoveUserFromGroup execution.
     *
     * @return Amazon_IAM_RemoveUserFromGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RemoveUserFromGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_RemoveUserFromGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_RemoveUserFromGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RemoveUserFromGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveUserFromGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RemoveUserFromGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_RemoveUserFromGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RemoveUserFromGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds an ingress rule to a security group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AuthorizeSecurityGroupIngress extends Temboo_Choreography
{
    /**
     * Adds an ingress rule to a security group.
     *
     * @param Temboo_Session $session The session that owns this AuthorizeSecurityGroupIngress Choreo.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/AuthorizeSecurityGroupIngress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_AuthorizeSecurityGroupIngress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AuthorizeSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AuthorizeSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AuthorizeSecurityGroupIngress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupId input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The ID of the security group to modify. Can be used instead of GroupName.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setGroupId($value)
    {
        return $this->set('GroupId', $value);
    }

    /**
     * Set the value for the GroupName input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The name of the security group to modify. Can be used instead of GroupId.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the IpPermissionsCidrIp input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The CIDR range. Cannot be used when specifying a source security group.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsCidrIp($value)
    {
        return $this->set('IpPermissionsCidrIp', $value);
    }

    /**
     * Set the value for the IpPermissionsFromPort input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param int $value (optional, integer) The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, you can use -1 to specify all ICMP types.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsFromPort($value)
    {
        return $this->set('IpPermissionsFromPort', $value);
    }

    /**
     * Set the value for the IpPermissionsGroupId input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The ID of the source security group. Cannot be used when specifying a CIDR IP address.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsGroupId($value)
    {
        return $this->set('IpPermissionsGroupId', $value);
    }

    /**
     * Set the value for the IpPermissionsGroupName input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The name of the source security group. Cannot be used when specifying a CIDR IP address.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsGroupName($value)
    {
        return $this->set('IpPermissionsGroupName', $value);
    }

    /**
     * Set the value for the IpPermissionsIpProtocol input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The IP protocol name or number. Valid values for EC2-Classic: tcp, udp, icmp (or 6, 17, 1). Valid values for EC2-VPC: tcp, udp, icmp, any valid protocol number (0-254), or -1 (to specify all).
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsIpProtocol($value)
    {
        return $this->set('IpPermissionsIpProtocol', $value);
    }

    /**
     * Set the value for the IpPermissionsToPort input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param int $value (optional, integer) The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, you can use -1 to specify all ICMP codes for the given ICMP type.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsToPort($value)
    {
        return $this->set('IpPermissionsToPort', $value);
    }

    /**
     * Set the value for the IpPermissionsUserId input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The AWS account ID that owns the source security group. Cannot be used when specifying a CIDR IP address.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsUserId($value)
    {
        return $this->set('IpPermissionsUserId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this AuthorizeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the AuthorizeSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AuthorizeSecurityGroupIngress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AuthorizeSecurityGroupIngress Choreo.
     *
     * @param Temboo_Session $session The session that owns this AuthorizeSecurityGroupIngress execution.
     * @param Amazon_EC2_AuthorizeSecurityGroupIngress $choreo The choreography object for this execution.
     * @param Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AuthorizeSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_AuthorizeSecurityGroupIngress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AuthorizeSecurityGroupIngress execution.
     *
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AuthorizeSecurityGroupIngress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_AuthorizeSecurityGroupIngress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AuthorizeSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AuthorizeSecurityGroupIngress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AuthorizeSecurityGroupIngress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_AuthorizeSecurityGroupIngress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AuthorizeSecurityGroupIngress execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the Region where the bucket is stored. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLocation extends Temboo_Choreography
{
    /**
     * Returns the Region where the bucket is stored. 
     *
     * @param Temboo_Session $session The session that owns this GetBucketLocation Choreo.
     * @return Amazon_S3_GetBucketLocation New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketLocation/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketLocation Choreo.
     *
     * @param Amazon_S3_GetBucketLocation_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLocation_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketLocation_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLocation_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketLocation_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketLocation Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLocation_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketLocation Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLocation_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketLocation input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketLocation_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketLocation_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketLocation Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLocation_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketLocation Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLocation_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketLocation Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the location you want to retrieve.
     * @return Amazon_S3_GetBucketLocation_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketLocation Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketLocation_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketLocation Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLocation_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketLocation Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketLocation execution.
     * @param Amazon_S3_GetBucketLocation $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketLocation_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLocation_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLocation_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketLocation $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketLocation execution.
     *
     * @return Amazon_S3_GetBucketLocation_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketLocation execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketLocation_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketLocation_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketLocation Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLocation_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketLocation Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketLocation_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "LocationConstraint" output from this GetBucketLocation execution.
     *
     * @return string (string) The Region returned by the choreo. Valid values: blank (Default US Classic Region AKA us-east-1), EU (AKA eu-west-1), us-west-1, us-west-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getLocationConstraint()
    {
        return $this->get('LocationConstraint');
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketLocation execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified instance profile. 
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteInstanceProfile extends Temboo_Choreography
{
    /**
     * Deletes the specified instance profile. 
     *
     * @param Temboo_Session $session The session that owns this DeleteInstanceProfile Choreo.
     * @return Amazon_IAM_DeleteInstanceProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteInstanceProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteInstanceProfile Choreo.
     *
     * @param Amazon_IAM_DeleteInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteInstanceProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteInstanceProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteInstanceProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteInstanceProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteInstanceProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceProfileName input for this DeleteInstanceProfile Choreo.
     *
     * @param string $value (required, string) Name of the instance profile to delete.
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs For method chaining.
     */
    public function setInstanceProfileName($value)
    {
        return $this->set('InstanceProfileName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteInstanceProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteInstanceProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeleteInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteInstanceProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteInstanceProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteInstanceProfile execution.
     * @param Amazon_IAM_DeleteInstanceProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteInstanceProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteInstanceProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteInstanceProfile execution.
     *
     * @return Amazon_IAM_DeleteInstanceProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteInstanceProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteInstanceProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteInstanceProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteInstanceProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteInstanceProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteInstanceProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteInstanceProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the users that have the specified path prefix. If there are none, the action returns an empty list.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUsers extends Temboo_Choreography
{
    /**
     * Lists the users that have the specified path prefix. If there are none, the action returns an empty list.
     *
     * @param Temboo_Session $session The session that owns this ListUsers Choreo.
     * @return Amazon_IAM_ListUsers New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListUsers/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListUsers Choreo.
     *
     * @param Amazon_IAM_ListUsers_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListUsers_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListUsers_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListUsers_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListUsers Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListUsers_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListUsers_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListUsers Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUsers_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListUsers Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListUsers_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListUsers input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListUsers Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListUsers Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListUsers Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListUsers Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the PathPrefix input for this ListUsers Choreo.
     *
     * @param string $value (conditional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all users whose path starts with that string. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function setPathPrefix($value)
    {
        return $this->set('PathPrefix', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListUsers Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListUsers_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListUsers Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUsers_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListUsers Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListUsers execution.
     * @param Amazon_IAM_ListUsers $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListUsers_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListUsers_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListUsers_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListUsers $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListUsers execution.
     *
     * @return Amazon_IAM_ListUsers_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListUsers execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListUsers_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListUsers_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListUsers Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUsers_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListUsers Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListUsers_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListUsers execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the virtual MFA devices under the AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListVirtualMFADevices extends Temboo_Choreography
{
    /**
     * Lists the virtual MFA devices under the AWS account.
     *
     * @param Temboo_Session $session The session that owns this ListVirtualMFADevices Choreo.
     * @return Amazon_IAM_ListVirtualMFADevices New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListVirtualMFADevices/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListVirtualMFADevices Choreo.
     *
     * @param Amazon_IAM_ListVirtualMFADevices_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListVirtualMFADevices_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListVirtualMFADevices_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListVirtualMFADevices_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListVirtualMFADevices Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListVirtualMFADevices_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListVirtualMFADevices Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListVirtualMFADevices_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListVirtualMFADevices Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListVirtualMFADevices input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListVirtualMFADevices Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListVirtualMFADevices Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AssignmentStatus input for this ListVirtualMFADevices Choreo.
     *
     * @param string $value (optional, string) Filters by the whether the device is assigned or unassigned to a specific user. Valid values: "Unassigned", "Assigned" or "Any" (default - both assigned and unassigned devices).
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function setAssignmentStatus($value)
    {
        return $this->set('AssignmentStatus', $value);
    }

    /**
     * Set the value for the Marker input for this ListVirtualMFADevices Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListVirtualMFADevices Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListVirtualMFADevices Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListVirtualMFADevices_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListVirtualMFADevices Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListVirtualMFADevices_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListVirtualMFADevices Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListVirtualMFADevices execution.
     * @param Amazon_IAM_ListVirtualMFADevices $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListVirtualMFADevices_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListVirtualMFADevices_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListVirtualMFADevices_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListVirtualMFADevices $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListVirtualMFADevices execution.
     *
     * @return Amazon_IAM_ListVirtualMFADevices_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListVirtualMFADevices execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListVirtualMFADevices_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListVirtualMFADevices_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListVirtualMFADevices Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListVirtualMFADevices_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListVirtualMFADevices Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListVirtualMFADevices_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListVirtualMFADevices execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new virtual MFA device for the AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateVirtualMFADevice extends Temboo_Choreography
{
    /**
     * Creates a new virtual MFA device for the AWS account.
     *
     * @param Temboo_Session $session The session that owns this CreateVirtualMFADevice Choreo.
     * @return Amazon_IAM_CreateVirtualMFADevice New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/CreateVirtualMFADevice/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateVirtualMFADevice Choreo.
     *
     * @param Amazon_IAM_CreateVirtualMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateVirtualMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateVirtualMFADevice_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_CreateVirtualMFADevice_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateVirtualMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_CreateVirtualMFADevice_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateVirtualMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateVirtualMFADevice_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateVirtualMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateVirtualMFADevice input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateVirtualMFADevice Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateVirtualMFADevice Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Path input for this CreateVirtualMFADevice Choreo.
     *
     * @param string $value (optional, string) The path for the virtual MFA device. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs For method chaining.
     */
    public function setPath($value)
    {
        return $this->set('Path', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateVirtualMFADevice Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the VirtualMFADeviceName input for this CreateVirtualMFADevice Choreo.
     *
     * @param string $value (required, string) The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.
     * @return Amazon_IAM_CreateVirtualMFADevice_Inputs For method chaining.
     */
    public function setVirtualMFADeviceName($value)
    {
        return $this->set('VirtualMFADeviceName', $value);
    }
}


/**
 * Execution object for the CreateVirtualMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateVirtualMFADevice_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateVirtualMFADevice Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateVirtualMFADevice execution.
     * @param Amazon_IAM_CreateVirtualMFADevice $choreo The choreography object for this execution.
     * @param Amazon_IAM_CreateVirtualMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateVirtualMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateVirtualMFADevice_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_CreateVirtualMFADevice $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateVirtualMFADevice execution.
     *
     * @return Amazon_IAM_CreateVirtualMFADevice_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateVirtualMFADevice execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_CreateVirtualMFADevice_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_CreateVirtualMFADevice_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateVirtualMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateVirtualMFADevice_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateVirtualMFADevice Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_CreateVirtualMFADevice_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateVirtualMFADevice execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the billing tag set associated with the specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketTagging extends Temboo_Choreography
{
    /**
     * Retrieves the billing tag set associated with the specified bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketTagging Choreo.
     * @return Amazon_S3_GetBucketTagging New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketTagging/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketTagging Choreo.
     *
     * @param Amazon_S3_GetBucketTagging_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketTagging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketTagging_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketTagging_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketTagging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketTagging_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketTagging_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketTagging_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketTagging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketTagging_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketTagging input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketTagging_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketTagging_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketTagging Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketTagging_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketTagging Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketTagging_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketTagging Choreo.
     *
     * @param string $value (required, string) The name of the bucket to retrieve tagging information for.
     * @return Amazon_S3_GetBucketTagging_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketTagging Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketTagging_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketTagging_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketTagging Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketTagging execution.
     * @param Amazon_S3_GetBucketTagging $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketTagging_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketTagging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketTagging_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketTagging $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketTagging execution.
     *
     * @return Amazon_S3_GetBucketTagging_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketTagging execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketTagging_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketTagging_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketTagging_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketTagging Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketTagging_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketTagging execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new topic that notifications can be published to.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic extends Temboo_Choreography
{
    /**
     * Creates a new topic that notifications can be published to.
     *
     * @param Temboo_Session $session The session that owns this CreateTopic Choreo.
     * @return Amazon_SNS_CreateTopic New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/CreateTopic/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateTopic Choreo.
     *
     * @param Amazon_SNS_CreateTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_CreateTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_CreateTopic_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_CreateTopic_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateTopic Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_CreateTopic_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_CreateTopic_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateTopic Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_CreateTopic_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateTopic input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateTopic Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateTopic Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Name input for this CreateTopic Choreo.
     *
     * @param string $value (required, string) The name of the topic you want to create.
     * @return Amazon_SNS_CreateTopic_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }
}


/**
 * Execution object for the CreateTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateTopic Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateTopic execution.
     * @param Amazon_SNS_CreateTopic $choreo The choreography object for this execution.
     * @param Amazon_SNS_CreateTopic_Inputs|array $inputs (optional) Inputs as Amazon_SNS_CreateTopic_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_CreateTopic_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_CreateTopic $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateTopic execution.
     *
     * @return Amazon_SNS_CreateTopic_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateTopic execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_CreateTopic_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_CreateTopic_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateTopic Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_CreateTopic_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateTopic Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_CreateTopic_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateTopic execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves information about an attribute of an AMI.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute extends Temboo_Choreography
{
    /**
     * Retrieves information about an attribute of an AMI.
     *
     * @param Temboo_Session $session The session that owns this DescribeImageAttribute Choreo.
     * @return Amazon_EC2_DescribeImageAttribute New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeImageAttribute/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeImageAttribute Choreo.
     *
     * @param Amazon_EC2_DescribeImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImageAttribute_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeImageAttribute_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeImageAttribute Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeImageAttribute_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeImageAttribute Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeImageAttribute Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeImageAttribute input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeImageAttribute Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeImageAttribute Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Attribute input for this DescribeImageAttribute Choreo.
     *
     * @param string $value (required, string) The AMI attribute to get. Valid Values are: description | kernel | ramdisk | launchPermission | productCodes | blockDeviceMapping.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setAttribute($value)
    {
        return $this->set('Attribute', $value);
    }

    /**
     * Set the value for the ImageId input for this DescribeImageAttribute Choreo.
     *
     * @param string $value (required, string) The AMI ID.
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeImageAttribute Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeImageAttribute_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DescribeImageAttribute Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeImageAttribute Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeImageAttribute execution.
     * @param Amazon_EC2_DescribeImageAttribute $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImageAttribute_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeImageAttribute $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeImageAttribute execution.
     *
     * @return Amazon_EC2_DescribeImageAttribute_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeImageAttribute execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeImageAttribute_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeImageAttribute Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImageAttribute_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeImageAttribute Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeImageAttribute_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeImageAttribute execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified database snapshot.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot extends Temboo_Choreography
{
    /**
     * Deletes a specified database snapshot.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSnapshot Choreo.
     * @return Amazon_RDS_DeleteDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DeleteDBSnapshot/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteDBSnapshot Choreo.
     *
     * @param Amazon_RDS_DeleteDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DeleteDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DeleteDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this DeleteDBSnapshot Choreo.
     *
     * @param string $value (required, string) A unique identifier for the snapshot you want to delete.
     * @return Amazon_RDS_DeleteDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }
}


/**
 * Execution object for the DeleteDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDBSnapshot Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSnapshot execution.
     * @param Amazon_RDS_DeleteDBSnapshot $choreo The choreography object for this execution.
     * @param Amazon_RDS_DeleteDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DeleteDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDBSnapshot execution.
     *
     * @return Amazon_RDS_DeleteDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DeleteDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteDBSnapshot Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty list.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListSigningCertificates extends Temboo_Choreography
{
    /**
     * Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty list.
     *
     * @param Temboo_Session $session The session that owns this ListSigningCertificates Choreo.
     * @return Amazon_IAM_ListSigningCertificates New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListSigningCertificates/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListSigningCertificates Choreo.
     *
     * @param Amazon_IAM_ListSigningCertificates_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListSigningCertificates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListSigningCertificates_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListSigningCertificates_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListSigningCertificates Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListSigningCertificates_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListSigningCertificates_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListSigningCertificates Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListSigningCertificates_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListSigningCertificates Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListSigningCertificates_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListSigningCertificates input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListSigningCertificates Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListSigningCertificates Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListSigningCertificates Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListSigningCertificates Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListSigningCertificates Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this ListSigningCertificates Choreo.
     *
     * @param string $value (optional, string) The name of the user.
     * @return Amazon_IAM_ListSigningCertificates_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the ListSigningCertificates Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListSigningCertificates_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListSigningCertificates Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListSigningCertificates execution.
     * @param Amazon_IAM_ListSigningCertificates $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListSigningCertificates_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListSigningCertificates_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListSigningCertificates_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListSigningCertificates $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListSigningCertificates execution.
     *
     * @return Amazon_IAM_ListSigningCertificates_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListSigningCertificates execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListSigningCertificates_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListSigningCertificates_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListSigningCertificates Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListSigningCertificates_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListSigningCertificates Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListSigningCertificates_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListSigningCertificates execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Revokes access from a DBSecurityGroup for previously authorized IP ranges or EC2 Security Groups.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress extends Temboo_Choreography
{
    /**
     * Revokes access from a DBSecurityGroup for previously authorized IP ranges or EC2 Security Groups.
     *
     * @param Temboo_Session $session The session that owns this RevokeDBSecurityGroupIngress Choreo.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RevokeDBSecurityGroupIngress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RevokeDBSecurityGroupIngress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RevokeDBSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RevokeDBSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RevokeDBSecurityGroupIngress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CIDRIP input for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) IP range that should be revoked. Required unless EC2SecurityGroupName and EC2SecurityGroupOwnerId are used.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCIDRIP($value)
    {
        return $this->set('CIDRIP', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) A unique name for the security group you want to revoke ingress from.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupName input for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The EC2 security group to revoke. This and EC2SecurityGroupOwnerId are required if CIDRIP is not used.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupName($value)
    {
        return $this->set('EC2SecurityGroupName', $value);
    }

    /**
     * Set the value for the EC2SecurityGroupOwnerId input for this RevokeDBSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The account number for the security group owner to revoke. This and EC2SecurityGroupName are required if CIDRIP is not used.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs For method chaining.
     */
    public function setEC2SecurityGroupOwnerId($value)
    {
        return $this->set('EC2SecurityGroupOwnerId', $value);
    }
}


/**
 * Execution object for the RevokeDBSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RevokeDBSecurityGroupIngress Choreo.
     *
     * @param Temboo_Session $session The session that owns this RevokeDBSecurityGroupIngress execution.
     * @param Amazon_RDS_RevokeDBSecurityGroupIngress $choreo The choreography object for this execution.
     * @param Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RevokeDBSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RevokeDBSecurityGroupIngress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RevokeDBSecurityGroupIngress execution.
     *
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RevokeDBSecurityGroupIngress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RevokeDBSecurityGroupIngress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RevokeDBSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RevokeDBSecurityGroupIngress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RevokeDBSecurityGroupIngress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RevokeDBSecurityGroupIngress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RevokeDBSecurityGroupIngress execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds a specified user to a specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddUserToGroup extends Temboo_Choreography
{
    /**
     * Adds a specified user to a specified group.
     *
     * @param Temboo_Session $session The session that owns this AddUserToGroup Choreo.
     * @return Amazon_IAM_AddUserToGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/AddUserToGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddUserToGroup Choreo.
     *
     * @param Amazon_IAM_AddUserToGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_AddUserToGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_AddUserToGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_AddUserToGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddUserToGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_AddUserToGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_AddUserToGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddUserToGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddUserToGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddUserToGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_AddUserToGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddUserToGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_AddUserToGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_AddUserToGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddUserToGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_AddUserToGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddUserToGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_AddUserToGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this AddUserToGroup Choreo.
     *
     * @param string $value (required, string) The name of the group that the user will be added to.
     * @return Amazon_IAM_AddUserToGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this AddUserToGroup Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_AddUserToGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this AddUserToGroup Choreo.
     *
     * @param string $value (required, string) The name of the user to add.
     * @return Amazon_IAM_AddUserToGroup_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the AddUserToGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddUserToGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddUserToGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddUserToGroup execution.
     * @param Amazon_IAM_AddUserToGroup $choreo The choreography object for this execution.
     * @param Amazon_IAM_AddUserToGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_AddUserToGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_AddUserToGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_AddUserToGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddUserToGroup execution.
     *
     * @return Amazon_IAM_AddUserToGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddUserToGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_AddUserToGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_AddUserToGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddUserToGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddUserToGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddUserToGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_AddUserToGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AddUserToGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes any permission in the queue policy by specifying the permission label.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission extends Temboo_Choreography
{
    /**
     * Removes any permission in the queue policy by specifying the permission label.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission Choreo.
     * @return Amazon_SQS_RemovePermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/RemovePermission/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RemovePermission Choreo.
     *
     * @param Amazon_SQS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_RemovePermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_RemovePermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RemovePermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_RemovePermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_RemovePermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RemovePermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RemovePermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_RemovePermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RemovePermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this RemovePermission Choreo.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Label input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The unique identifier for the permission that is being removed.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the QueueName input for this RemovePermission Choreo.
     *
     * @param string $value (required, string) The name of the queue that that has the policy you want to adjust.
     * @return Amazon_SQS_RemovePermission_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the RemovePermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RemovePermission Choreo.
     *
     * @param Temboo_Session $session The session that owns this RemovePermission execution.
     * @param Amazon_SQS_RemovePermission $choreo The choreography object for this execution.
     * @param Amazon_SQS_RemovePermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_RemovePermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_RemovePermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_RemovePermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RemovePermission execution.
     *
     * @return Amazon_SQS_RemovePermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RemovePermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_RemovePermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_RemovePermission_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RemovePermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_RemovePermission_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RemovePermission Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_RemovePermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RemovePermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Imports the public key from an RSA key pair that you created with a third-party tool.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ImportKeyPair extends Temboo_Choreography
{
    /**
     * Imports the public key from an RSA key pair that you created with a third-party tool.
     *
     * @param Temboo_Session $session The session that owns this ImportKeyPair Choreo.
     * @return Amazon_EC2_ImportKeyPair New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/ImportKeyPair/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ImportKeyPair Choreo.
     *
     * @param Amazon_EC2_ImportKeyPair_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ImportKeyPair_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ImportKeyPair_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_ImportKeyPair_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ImportKeyPair Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ImportKeyPair_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_ImportKeyPair_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ImportKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ImportKeyPair_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ImportKeyPair Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ImportKeyPair_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ImportKeyPair input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_ImportKeyPair_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_ImportKeyPair_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ImportKeyPair Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ImportKeyPair_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ImportKeyPair Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ImportKeyPair_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the KeyName input for this ImportKeyPair Choreo.
     *
     * @param string $value (required, string) A unique name for the key pair.
     * @return Amazon_EC2_ImportKeyPair_Inputs For method chaining.
     */
    public function setKeyName($value)
    {
        return $this->set('KeyName', $value);
    }

    /**
     * Set the value for the PublicKeyMaterial input for this ImportKeyPair Choreo.
     *
     * @param string $value (required, string) The public key. You must Base64-encode the public key material before sending it to AWS.
     * @return Amazon_EC2_ImportKeyPair_Inputs For method chaining.
     */
    public function setPublicKeyMaterial($value)
    {
        return $this->set('PublicKeyMaterial', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ImportKeyPair Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_ImportKeyPair_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ImportKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ImportKeyPair_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ImportKeyPair Choreo.
     *
     * @param Temboo_Session $session The session that owns this ImportKeyPair execution.
     * @param Amazon_EC2_ImportKeyPair $choreo The choreography object for this execution.
     * @param Amazon_EC2_ImportKeyPair_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ImportKeyPair_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ImportKeyPair_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_ImportKeyPair $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ImportKeyPair execution.
     *
     * @return Amazon_EC2_ImportKeyPair_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ImportKeyPair execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_ImportKeyPair_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_ImportKeyPair_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ImportKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ImportKeyPair_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ImportKeyPair Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_ImportKeyPair_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ImportKeyPair execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of users that are in the specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroup extends Temboo_Choreography
{
    /**
     * Returns a list of users that are in the specified group.
     *
     * @param Temboo_Session $session The session that owns this GetGroup Choreo.
     * @return Amazon_IAM_GetGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetGroup Choreo.
     *
     * @param Amazon_IAM_GetGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this GetGroup Choreo.
     *
     * @param string $value (required, string) The name of the group to return.
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the Marker input for this GetGroup Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this GetGroup Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetGroup Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetGroup execution.
     * @param Amazon_IAM_GetGroup $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetGroup execution.
     *
     * @return Amazon_IAM_GetGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of all feed submissions submitted in the previous 90 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList extends Temboo_Choreography
{
    /**
     * Returns a list of all feed submissions submitted in the previous 90 days.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionList Choreo.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/GetFeedSubmissionList/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetFeedSubmissionList Choreo.
     *
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetFeedSubmissionList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetFeedSubmissionList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetFeedSubmissionList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetFeedSubmissionList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FeedProcessingStatusList input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (optional, string) A comma separated list of one or more feed processing statuses by which to filter the list of feed submissions.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setFeedProcessingStatusList($value)
    {
        return $this->set('FeedProcessingStatusList', $value);
    }

    /**
     * Set the value for the FeedSubmissionIdList input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (optional, string) A comma separated list of FeedSubmmissionId values. If you pass in FeedSubmmissionId values in a request, other query conditions are ignored.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setFeedSubmissionIdList($value)
    {
        return $this->set('FeedSubmissionIdList', $value);
    }

    /**
     * Set the value for the FeedTypeList input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (optional, string) A comma separated list of one or more FeedType enumeration values by which to filter the list of feed submissions.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setFeedTypeList($value)
    {
        return $this->set('FeedTypeList', $value);
    }

    /**
     * Set the value for the MaxCount input for this GetFeedSubmissionList Choreo.
     *
     * @param int $value (optional, integer) A non-negative integer that indicates the maximum number of feed submissions to return in the list. Defaults to 10. Max is 100.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setMaxCount($value)
    {
        return $this->set('MaxCount', $value);
    }

    /**
     * Set the value for the SubmittedFromDate input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (optional, date) The earliest submission date that you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setSubmittedFromDate($value)
    {
        return $this->set('SubmittedFromDate', $value);
    }

    /**
     * Set the value for the SubmittedToDate input for this GetFeedSubmissionList Choreo.
     *
     * @param string $value (optional, date) The latest submission date that you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs For method chaining.
     */
    public function setSubmittedToDate($value)
    {
        return $this->set('SubmittedToDate', $value);
    }
}


/**
 * Execution object for the GetFeedSubmissionList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetFeedSubmissionList Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetFeedSubmissionList execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionList $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_GetFeedSubmissionList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_GetFeedSubmissionList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetFeedSubmissionList execution.
     *
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetFeedSubmissionList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetFeedSubmissionList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetFeedSubmissionList Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_GetFeedSubmissionList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "FeedProcessingStatus" output from this GetFeedSubmissionList execution.
     *
     * @return string (string) The FeedProcessingStatus parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFeedProcessingStatus()
    {
        return $this->get('FeedProcessingStatus');
    }
    /**
     * Retrieve the value for the "FeedSubmissionId" output from this GetFeedSubmissionList execution.
     *
     * @return int (integer) The FeedSubmissionId parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getFeedSubmissionId()
    {
        return $this->get('FeedSubmissionId');
    }
    /**
     * Retrieve the value for the "Response" output from this GetFeedSubmissionList execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified item from an Amazon S3 bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject extends Temboo_Choreography
{
    /**
     * Deletes a specified item from an Amazon S3 bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteObject Choreo.
     * @return Amazon_S3_DeleteObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteObject/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteObject Choreo.
     *
     * @param Amazon_S3_DeleteObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteObject Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteObject Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteObject Choreo.
     *
     * @param string $value (required, string) The the name of the bucket that contains the object that you want to delete.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this DeleteObject Choreo.
     *
     * @param string $value (required, string) The file name that you want to delete.
     * @return Amazon_S3_DeleteObject_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }
}


/**
 * Execution object for the DeleteObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteObject Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteObject execution.
     * @param Amazon_S3_DeleteObject $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteObject execution.
     *
     * @return Amazon_S3_DeleteObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteObject_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteObject_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteObject Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteObject execution.
     *
     * @return string The response from Amazon. Note that no content is returned for a successful delete operation.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns security group information associated with your AWS Account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups extends Temboo_Choreography
{
    /**
     * Returns security group information associated with your AWS Account.
     *
     * @param Temboo_Session $session The session that owns this DescribeSecurityGroups Choreo.
     * @return Amazon_EC2_DescribeSecurityGroups New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeSecurityGroups/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeSecurityGroups Choreo.
     *
     * @param Amazon_EC2_DescribeSecurityGroups_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSecurityGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSecurityGroups_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeSecurityGroups_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeSecurityGroups Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeSecurityGroups_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeSecurityGroups Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeSecurityGroups Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeSecurityGroups input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeSecurityGroups Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeSecurityGroups Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeSecurityGroups Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow results with.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeSecurityGroups Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the GroupId input for this DescribeSecurityGroups Choreo.
     *
     * @param string $value (optional, string) One or more security group IDs.  This can be a comma-separated list of up to 10 GroupIDs.  If no group names nor group IDs supplied, returns all groups.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setGroupId($value)
    {
        return $this->set('GroupId', $value);
    }

    /**
     * Set the value for the GroupName input for this DescribeSecurityGroups Choreo.
     *
     * @param string $value (optional, string) One or more security group names. This can be a comma-separated list of up to 10 group names.  If no group names nor group IDs supplied, returns all groups.
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeSecurityGroups Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeSecurityGroups_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DescribeSecurityGroups Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeSecurityGroups Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeSecurityGroups execution.
     * @param Amazon_EC2_DescribeSecurityGroups $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeSecurityGroups_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSecurityGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSecurityGroups_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeSecurityGroups $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeSecurityGroups execution.
     *
     * @return Amazon_EC2_DescribeSecurityGroups_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeSecurityGroups execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeSecurityGroups_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeSecurityGroups Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSecurityGroups_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeSecurityGroups Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeSecurityGroups_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeSecurityGroups execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new user for your AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateUser extends Temboo_Choreography
{
    /**
     * Creates a new user for your AWS account.
     *
     * @param Temboo_Session $session The session that owns this CreateUser Choreo.
     * @return Amazon_IAM_CreateUser New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/CreateUser/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateUser Choreo.
     *
     * @param Amazon_IAM_CreateUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateUser_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_CreateUser_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateUser_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_CreateUser_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateUser_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateUser_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateUser input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_CreateUser_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_CreateUser_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateUser Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateUser_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateUser Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateUser_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Path input for this CreateUser Choreo.
     *
     * @param string $value (optional, string) The path for the user name. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_CreateUser_Inputs For method chaining.
     */
    public function setPath($value)
    {
        return $this->set('Path', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateUser Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_CreateUser_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this CreateUser Choreo.
     *
     * @param string $value (required, string) The name of the user to create.
     * @return Amazon_IAM_CreateUser_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the CreateUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateUser_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateUser Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateUser execution.
     * @param Amazon_IAM_CreateUser $choreo The choreography object for this execution.
     * @param Amazon_IAM_CreateUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateUser_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_CreateUser $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateUser execution.
     *
     * @return Amazon_IAM_CreateUser_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateUser execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_CreateUser_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_CreateUser_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateUser_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateUser Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_CreateUser_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateUser execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Launches the specified number of instances of an AMI for which you have permissions.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RunInstances extends Temboo_Choreography
{
    /**
     * Launches the specified number of instances of an AMI for which you have permissions.
     *
     * @param Temboo_Session $session The session that owns this RunInstances Choreo.
     * @return Amazon_EC2_RunInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/RunInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RunInstances Choreo.
     *
     * @param Amazon_EC2_RunInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RunInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RunInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_RunInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RunInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RunInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_RunInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RunInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RunInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RunInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RunInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RunInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RunInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RunInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DeleteOnTermination input for this RunInstances Choreo.
     *
     * @param bool $value (optional, boolean) Sets whether the volume is deleted on instance termination. Defaults to "true". This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setDeleteOnTermination($value)
    {
        return $this->set('DeleteOnTermination', $value);
    }

    /**
     * Set the value for the DeviceName input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The device name exposed to the instance (i.e. /dev/sdh or xvdh). This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setDeviceName($value)
    {
        return $this->set('DeviceName', $value);
    }

    /**
     * Set the value for the ImageId input for this RunInstances Choreo.
     *
     * @param string $value (required, string) The ID of the AMI.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }

    /**
     * Set the value for the InstanceType input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The instance type (i.e. t1.micro, m1.small, m1.medium, m1.large, m1.xlarge). Default is m1.small.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setInstanceType($value)
    {
        return $this->set('InstanceType', $value);
    }

    /**
     * Set the value for the Iops input for this RunInstances Choreo.
     *
     * @param int $value (optional, integer) The number of I/O operations per second (IOPS) that the volume supports. Valid range is 100 to 2000. This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setIops($value)
    {
        return $this->set('Iops', $value);
    }

    /**
     * Set the value for the KernelId input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The ID of the kernel with which to launch the instance.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setKernelId($value)
    {
        return $this->set('KernelId', $value);
    }

    /**
     * Set the value for the KeyName input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The name of the key pair to use.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setKeyName($value)
    {
        return $this->set('KeyName', $value);
    }

    /**
     * Set the value for the MaxCount input for this RunInstances Choreo.
     *
     * @param int $value (required, integer) The maximum number of instances to launch. If the value is more than Amazon EC2 can launch, the largest possible number above MinCount will be launched instead.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setMaxCount($value)
    {
        return $this->set('MaxCount', $value);
    }

    /**
     * Set the value for the MinCount input for this RunInstances Choreo.
     *
     * @param int $value (required, integer) The minimum number of instances to launch. If the value is more than Amazon EC2 can launch, no instances are launched at all.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setMinCount($value)
    {
        return $this->set('MinCount', $value);
    }

    /**
     * Set the value for the MonitoringEnabled input for this RunInstances Choreo.
     *
     * @param bool $value (optional, boolean) Enables monitoring for the instance. Defaults to false.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setMonitoringEnabled($value)
    {
        return $this->set('MonitoringEnabled', $value);
    }

    /**
     * Set the value for the NoDevice input for this RunInstances Choreo.
     *
     * @param bool $value (optional, boolean) Suppresses a device mapping. This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setNoDevice($value)
    {
        return $this->set('NoDevice', $value);
    }

    /**
     * Set the value for the PlacementAvailabilityZone input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The Availability Zone to launch the instance into.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setPlacementAvailabilityZone($value)
    {
        return $this->set('PlacementAvailabilityZone', $value);
    }

    /**
     * Set the value for the PlacementGroupName input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The name of an existing placement group you want to launch the instance into (for cluster instances).
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setPlacementGroupName($value)
    {
        return $this->set('PlacementGroupName', $value);
    }

    /**
     * Set the value for the PlacementTenancy input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The tenancy of the instance. When set to "dedicated", the instance will run on single-tenant hardware and can only be launched into a VPC.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setPlacementTenancy($value)
    {
        return $this->set('PlacementTenancy', $value);
    }

    /**
     * Set the value for the RamdiskId input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The ID of the RAM disk.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setRamdiskId($value)
    {
        return $this->set('RamdiskId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SecurityGroupId input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) One or more security group IDs. This can be a comma-separated list of up to 10 security group ids.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setSecurityGroupId($value)
    {
        return $this->set('SecurityGroupId', $value);
    }

    /**
     * Set the value for the SecurityGroup input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) One or more security group names. This can be a comma-separated list of up to 10 security group names.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setSecurityGroup($value)
    {
        return $this->set('SecurityGroup', $value);
    }

    /**
     * Set the value for the ShutdownBehavior input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) Whether the instance stops or terminates on instance-initiated shutdown. Valid values are: stop and terminate.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setShutdownBehavior($value)
    {
        return $this->set('ShutdownBehavior', $value);
    }

    /**
     * Set the value for the SnapshotId input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The ID of the snapshot. This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }

    /**
     * Set the value for the SubnetId input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The ID of the subnet to launch the instance into (i.e. subnet-dea63cb7).
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setSubnetId($value)
    {
        return $this->set('SubnetId', $value);
    }

    /**
     * Set the value for the UserData input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The Base64-encoded MIME user data to be made available to the instance(s).
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setUserData($value)
    {
        return $this->set('UserData', $value);
    }

    /**
     * Set the value for the VirtualName input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The name of the virtual device. This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setVirtualName($value)
    {
        return $this->set('VirtualName', $value);
    }

    /**
     * Set the value for the VolumeSize input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The size of the volume, in GiBs. Required unless you're creating the volume from a snapshot which indicates that the size will be the size of the snapshot. This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setVolumeSize($value)
    {
        return $this->set('VolumeSize', $value);
    }

    /**
     * Set the value for the VolumeType input for this RunInstances Choreo.
     *
     * @param string $value (optional, string) The volume type. Valid values are: standard (the default) and io1. This is a Block Device Mapping parameter.
     * @return Amazon_EC2_RunInstances_Inputs For method chaining.
     */
    public function setVolumeType($value)
    {
        return $this->set('VolumeType', $value);
    }
}


/**
 * Execution object for the RunInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RunInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RunInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this RunInstances execution.
     * @param Amazon_EC2_RunInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_RunInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RunInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RunInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_RunInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RunInstances execution.
     *
     * @return Amazon_EC2_RunInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RunInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_RunInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_RunInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RunInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RunInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RunInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_RunInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RunInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance extends Temboo_Choreography
{
    /**
     * Deletes a specified database instance.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBInstance Choreo.
     * @return Amazon_RDS_DeleteDBInstance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DeleteDBInstance/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteDBInstance Choreo.
     *
     * @param Amazon_RDS_DeleteDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBInstance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DeleteDBInstance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBInstance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DeleteDBInstance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteDBInstance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBInstance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDBInstance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteDBInstance Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteDBInstance Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this DeleteDBInstance Choreo.
     *
     * @param string $value (required, string) The ID for the DB instance to delete.
     * @return Amazon_RDS_DeleteDBInstance_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }
}


/**
 * Execution object for the DeleteDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDBInstance Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBInstance execution.
     * @param Amazon_RDS_DeleteDBInstance $choreo The choreography object for this execution.
     * @param Amazon_RDS_DeleteDBInstance_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBInstance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBInstance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DeleteDBInstance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDBInstance execution.
     *
     * @return Amazon_RDS_DeleteDBInstance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteDBInstance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBInstance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DeleteDBInstance_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteDBInstance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBInstance_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteDBInstance Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBInstance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteDBInstance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns account transactions from a specified start date.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity extends Temboo_Choreography
{
    /**
     * Returns account transactions from a specified start date.
     *
     * @param Temboo_Session $session The session that owns this GetAccountActivity Choreo.
     * @return Amazon_FPS_GetAccountActivity New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetAccountActivity/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAccountActivity Choreo.
     *
     * @param Amazon_FPS_GetAccountActivity_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountActivity_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetAccountActivity_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountActivity Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountActivity_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetAccountActivity_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountActivity Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAccountActivity Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountActivity_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountActivity input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetAccountActivity Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetAccountActivity Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAccountActivity Choreo.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the StartDate input for this GetAccountActivity Choreo.
     *
     * @param string $value (required, date) The first date of transactions to return (epoch timestamp in milliseconds or formatted like 2009-10-07Z).
     * @return Amazon_FPS_GetAccountActivity_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }
}


/**
 * Execution object for the GetAccountActivity Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountActivity Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAccountActivity execution.
     * @param Amazon_FPS_GetAccountActivity $choreo The choreography object for this execution.
     * @param Amazon_FPS_GetAccountActivity_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountActivity_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountActivity_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetAccountActivity $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountActivity execution.
     *
     * @return Amazon_FPS_GetAccountActivity_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAccountActivity execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetAccountActivity_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetAccountActivity_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAccountActivity Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountActivity_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAccountActivity Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetAccountActivity_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetAccountActivity execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns orders associated with a buyer's email address that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail extends Temboo_Choreography
{
    /**
     * Returns orders associated with a buyer's email address that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithBuyerEmail Choreo.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/ListOrdersWithBuyerEmail/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListOrdersWithBuyerEmail Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListOrdersWithBuyerEmail Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListOrdersWithBuyerEmail input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BuyerEmail input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (required, string) The e-mail address of a buyer. Used to select only the orders that contain the specified e-mail address.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setBuyerEmail($value)
    {
        return $this->set('BuyerEmail', $value);
    }

    /**
     * Set the value for the CreatedAfter input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setCreatedAfter($value)
    {
        return $this->set('CreatedAfter', $value);
    }

    /**
     * Set the value for the CreatedBefore input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setCreatedBefore($value)
    {
        return $this->set('CreatedBefore', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxResultsPerPage input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param int $value (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setMaxResultsPerPage($value)
    {
        return $this->set('MaxResultsPerPage', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListOrdersWithBuyerEmail Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListOrdersWithBuyerEmail Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListOrdersWithBuyerEmail Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListOrdersWithBuyerEmail execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListOrdersWithBuyerEmail execution.
     *
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListOrdersWithBuyerEmail execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListOrdersWithBuyerEmail Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListOrdersWithBuyerEmail Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrdersWithBuyerEmail_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListOrdersWithBuyerEmail execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of the user's topics.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics extends Temboo_Choreography
{
    /**
     * Returns a list of the user's topics.
     *
     * @param Temboo_Session $session The session that owns this ListTopics Choreo.
     * @return Amazon_SNS_ListTopics New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ListTopics/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListTopics Choreo.
     *
     * @param Amazon_SNS_ListTopics_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListTopics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListTopics_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ListTopics_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListTopics Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListTopics_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ListTopics_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListTopics Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListTopics Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ListTopics_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListTopics input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListTopics Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListTopics Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NextToken input for this ListTopics Choreo.
     *
     * @param string $value (optional, string) The token returned from a previous LIstTopics request.
     * @return Amazon_SNS_ListTopics_Inputs For method chaining.
     */
    public function setNextToken($value)
    {
        return $this->set('NextToken', $value);
    }
}


/**
 * Execution object for the ListTopics Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListTopics Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListTopics execution.
     * @param Amazon_SNS_ListTopics $choreo The choreography object for this execution.
     * @param Amazon_SNS_ListTopics_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ListTopics_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ListTopics_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ListTopics $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListTopics execution.
     *
     * @return Amazon_SNS_ListTopics_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListTopics execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ListTopics_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ListTopics_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListTopics Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ListTopics_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListTopics Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ListTopics_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListTopics execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns properties for a specified topic.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes extends Temboo_Choreography
{
    /**
     * Returns properties for a specified topic.
     *
     * @param Temboo_Session $session The session that owns this GetTopicAttributes Choreo.
     * @return Amazon_SNS_GetTopicAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/GetTopicAttributes/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetTopicAttributes Choreo.
     *
     * @param Amazon_SNS_GetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_GetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_GetTopicAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_GetTopicAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetTopicAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_GetTopicAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_GetTopicAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetTopicAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetTopicAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_GetTopicAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetTopicAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the TopicArn input for this GetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The ARN of the topic you want to retrieve attributes for.
     * @return Amazon_SNS_GetTopicAttributes_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the GetTopicAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetTopicAttributes Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetTopicAttributes execution.
     * @param Amazon_SNS_GetTopicAttributes $choreo The choreography object for this execution.
     * @param Amazon_SNS_GetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_GetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_GetTopicAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_GetTopicAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetTopicAttributes execution.
     *
     * @return Amazon_SNS_GetTopicAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetTopicAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_GetTopicAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_GetTopicAttributes_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetTopicAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_GetTopicAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetTopicAttributes Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_GetTopicAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetTopicAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Uploads an X.509 signing certificate and associates it with the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadSigningCertificate extends Temboo_Choreography
{
    /**
     * Uploads an X.509 signing certificate and associates it with the specified user.
     *
     * @param Temboo_Session $session The session that owns this UploadSigningCertificate Choreo.
     * @return Amazon_IAM_UploadSigningCertificate New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UploadSigningCertificate/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UploadSigningCertificate Choreo.
     *
     * @param Amazon_IAM_UploadSigningCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UploadSigningCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UploadSigningCertificate_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UploadSigningCertificate_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UploadSigningCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UploadSigningCertificate_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UploadSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadSigningCertificate_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UploadSigningCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UploadSigningCertificate input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UploadSigningCertificate Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UploadSigningCertificate Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CertificateBody input for this UploadSigningCertificate Choreo.
     *
     * @param string $value (required, multiline) The contents of the signing certificate.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs For method chaining.
     */
    public function setCertificateBody($value)
    {
        return $this->set('CertificateBody', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UploadSigningCertificate Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UploadSigningCertificate_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this UploadSigningCertificate Choreo.
     *
     * @param string $value (optional, string) The name of the user.
     * @return Amazon_IAM_UploadSigningCertificate_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the UploadSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadSigningCertificate_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UploadSigningCertificate Choreo.
     *
     * @param Temboo_Session $session The session that owns this UploadSigningCertificate execution.
     * @param Amazon_IAM_UploadSigningCertificate $choreo The choreography object for this execution.
     * @param Amazon_IAM_UploadSigningCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UploadSigningCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UploadSigningCertificate_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UploadSigningCertificate $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UploadSigningCertificate execution.
     *
     * @return Amazon_IAM_UploadSigningCertificate_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UploadSigningCertificate execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UploadSigningCertificate_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UploadSigningCertificate_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UploadSigningCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UploadSigningCertificate_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UploadSigningCertificate Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UploadSigningCertificate_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UploadSigningCertificate execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified database security group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup extends Temboo_Choreography
{
    /**
     * Deletes a specified database security group.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSecurityGroup Choreo.
     * @return Amazon_RDS_DeleteDBSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DeleteDBSecurityGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteDBSecurityGroup Choreo.
     *
     * @param Amazon_RDS_DeleteDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DeleteDBSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteDBSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DeleteDBSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteDBSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteDBSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBSecurityGroupName input for this DeleteDBSecurityGroup Choreo.
     *
     * @param string $value (required, string) The name for the security group you want to delete.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Inputs For method chaining.
     */
    public function setDBSecurityGroupName($value)
    {
        return $this->set('DBSecurityGroupName', $value);
    }
}


/**
 * Execution object for the DeleteDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteDBSecurityGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteDBSecurityGroup execution.
     * @param Amazon_RDS_DeleteDBSecurityGroup $choreo The choreography object for this execution.
     * @param Amazon_RDS_DeleteDBSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DeleteDBSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DeleteDBSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteDBSecurityGroup execution.
     *
     * @return Amazon_RDS_DeleteDBSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteDBSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DeleteDBSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteDBSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DeleteDBSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteDBSecurityGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DeleteDBSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteDBSecurityGroup execution.
     *
     * @return string (string) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates an Amazon Machine Image from an Amazon EBS-backed instance. The image can be used later to launch other identical servers.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage extends Temboo_Choreography
{
    /**
     * Creates an Amazon Machine Image from an Amazon EBS-backed instance. The image can be used later to launch other identical servers.
     *
     * @param Temboo_Session $session The session that owns this CreateImage Choreo.
     * @return Amazon_EC2_CreateImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateImage/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateImage Choreo.
     *
     * @param Amazon_EC2_CreateImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateImage Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateImage Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DeleteOnTermination input for this CreateImage Choreo.
     *
     * @param bool $value (optional, boolean) Whether the volume is deleted on instance termination. Defaults to "true".
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setDeleteOnTermination($value)
    {
        return $this->set('DeleteOnTermination', $value);
    }

    /**
     * Set the value for the Description input for this CreateImage Choreo.
     *
     * @param string $value (optional, string) A description for the image you want to create.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the DeviceName input for this CreateImage Choreo.
     *
     * @param string $value (conditional, string) The device name exposed to the instance (i.e. /dev/sdh or xvdh). When registering an AMI from a snapshot, DiviceName is required as well as SnapshotId.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setDeviceName($value)
    {
        return $this->set('DeviceName', $value);
    }

    /**
     * Set the value for the InstanceId input for this CreateImage Choreo.
     *
     * @param string $value (required, string) The ID of the instance to create the image on.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the Iops input for this CreateImage Choreo.
     *
     * @param int $value (conditional, integer) The number of I/O operations per second (IOPS) that the volume supports. Valid range is 100 to 2000.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setIops($value)
    {
        return $this->set('Iops', $value);
    }

    /**
     * Set the value for the Name input for this CreateImage Choreo.
     *
     * @param string $value (required, string) The name for the image you are creating.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setName($value)
    {
        return $this->set('Name', $value);
    }

    /**
     * Set the value for the NoDevice input for this CreateImage Choreo.
     *
     * @param bool $value (optional, boolean) Suppresses a device mapping. Defaults to "true".
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setNoDevice($value)
    {
        return $this->set('NoDevice', $value);
    }

    /**
     * Set the value for the NoReboot input for this CreateImage Choreo.
     *
     * @param bool $value (optional, boolean) Defaults to "false". Amazon EC2 will attempt to shut down the instance before and after creating the image. Set to "true" for NoReboot.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setNoReboot($value)
    {
        return $this->set('NoReboot', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateImage Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SnapshotId input for this CreateImage Choreo.
     *
     * @param string $value (conditional, string) The ID of the snapshot. Required when registering from a snapshot. You must also specify DeviceName with the root device name.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }

    /**
     * Set the value for the VirtualName input for this CreateImage Choreo.
     *
     * @param string $value (optional, string) The name of the virtual device.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setVirtualName($value)
    {
        return $this->set('VirtualName', $value);
    }

    /**
     * Set the value for the VolumeSize input for this CreateImage Choreo.
     *
     * @param string $value (conditional, string) The size of the volume, in GiBs. Required unless you're creating the volume from a snapshot which indicates that the size will be the size of the snapshot.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setVolumeSize($value)
    {
        return $this->set('VolumeSize', $value);
    }

    /**
     * Set the value for the VolumeType input for this CreateImage Choreo.
     *
     * @param string $value (optional, string) The volume type. Valid values are: standard (the default) and io1.
     * @return Amazon_EC2_CreateImage_Inputs For method chaining.
     */
    public function setVolumeType($value)
    {
        return $this->set('VolumeType', $value);
    }
}


/**
 * Execution object for the CreateImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateImage Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateImage execution.
     * @param Amazon_EC2_CreateImage $choreo The choreography object for this execution.
     * @param Amazon_EC2_CreateImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateImage execution.
     *
     * @return Amazon_EC2_CreateImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateImage_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateImage_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateImage Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateImage execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and an ASIN to uniquely identify a product.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN extends Temboo_Choreography
{
    /**
     * Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and an ASIN to uniquely identify a product.
     *
     * @param Temboo_Session $session The session that owns this GetProductCategoriesForASIN Choreo.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetProductCategoriesForASIN/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetProductCategoriesForASIN Choreo.
     *
     * @param Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetProductCategoriesForASIN Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetProductCategoriesForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetProductCategoriesForASIN Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetProductCategoriesForASIN input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetProductCategoriesForASIN Choreo.
     *
     * @param string $value (required, string) An ASIN value used to identify a product in the given marketplace.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetProductCategoriesForASIN Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetProductCategoriesForASIN Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetProductCategoriesForASIN Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetProductCategoriesForASIN Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetProductCategoriesForASIN Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetProductCategoriesForASIN Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetProductCategoriesForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetProductCategoriesForASIN Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetProductCategoriesForASIN execution.
     * @param Amazon_Marketplace_Products_GetProductCategoriesForASIN $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetProductCategoriesForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetProductCategoriesForASIN $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetProductCategoriesForASIN execution.
     *
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetProductCategoriesForASIN execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetProductCategoriesForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetProductCategoriesForASIN Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetProductCategoriesForASIN_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetProductCategoriesForASIN execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the lifecycle configuration from the specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle extends Temboo_Choreography
{
    /**
     * Deletes the lifecycle configuration from the specified bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketLifecycle Choreo.
     * @return Amazon_S3_DeleteBucketLifecycle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucketLifecycle/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteBucketLifecycle Choreo.
     *
     * @param Amazon_S3_DeleteBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketLifecycle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucketLifecycle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucketLifecycle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucketLifecycle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteBucketLifecycle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucketLifecycle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the lifecycle you want to delete.
     * @return Amazon_S3_DeleteBucketLifecycle_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucketLifecycle Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketLifecycle execution.
     * @param Amazon_S3_DeleteBucketLifecycle $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketLifecycle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucketLifecycle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucketLifecycle execution.
     *
     * @return Amazon_S3_DeleteBucketLifecycle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteBucketLifecycle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucketLifecycle_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketLifecycle_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteBucketLifecycle Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketLifecycle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteBucketLifecycle execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful delete operation, no content is returned, and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets the access control list (ACL) permissions for an existing object.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObjectACL extends Temboo_Choreography
{
    /**
     * Sets the access control list (ACL) permissions for an existing object.
     *
     * @param Temboo_Session $session The session that owns this PutObjectACL Choreo.
     * @return Amazon_S3_PutObjectACL New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutObjectACL/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutObjectACL Choreo.
     *
     * @param Amazon_S3_PutObjectACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutObjectACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutObjectACL_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutObjectACL_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutObjectACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutObjectACL_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutObjectACL_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutObjectACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObjectACL_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutObjectACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutObjectACL_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutObjectACL input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutObjectACL Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutObjectACL Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AccessControlList input for this PutObjectACL Choreo.
     *
     * @param string $value (optional, xml) Custom Access Control List xml for advanced configuration. See description for an example, plus Amazon documentation.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setAccessControlList($value)
    {
        return $this->set('AccessControlList', $value);
    }

    /**
     * Set the value for the BucketName input for this PutObjectACL Choreo.
     *
     * @param string $value (required, string) The name of the bucket that contains the object that you want to create or update a policy for.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CannedACL input for this PutObjectACL Choreo.
     *
     * @param string $value (conditional, string) Most common ACL usage, required unless creating a custom policy. Values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, or bucket-owner-full-control.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setCannedACL($value)
    {
        return $this->set('CannedACL', $value);
    }

    /**
     * Set the value for the FileName input for this PutObjectACL Choreo.
     *
     * @param string $value (required, string) The name of the file or object that you want to put access controls on in S3. Ex.: file.txt or folder/file.txt.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }

    /**
     * Set the value for the OwnerEmailAddress input for this PutObjectACL Choreo.
     *
     * @param string $value (optional, string) The email address of the owner who is granting permission. Required if creating your own custom ACL policy.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setOwnerEmailAddress($value)
    {
        return $this->set('OwnerEmailAddress', $value);
    }

    /**
     * Set the value for the OwnerId input for this PutObjectACL Choreo.
     *
     * @param string $value (optional, string) The canonical user id of the owner who is granting permission. Required if creating your own custom ACL policy.
     * @return Amazon_S3_PutObjectACL_Inputs For method chaining.
     */
    public function setOwnerId($value)
    {
        return $this->set('OwnerId', $value);
    }
}


/**
 * Execution object for the PutObjectACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObjectACL_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutObjectACL Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutObjectACL execution.
     * @param Amazon_S3_PutObjectACL $choreo The choreography object for this execution.
     * @param Amazon_S3_PutObjectACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutObjectACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutObjectACL_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutObjectACL $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutObjectACL execution.
     *
     * @return Amazon_S3_PutObjectACL_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutObjectACL execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutObjectACL_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutObjectACL_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutObjectACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObjectACL_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutObjectACL Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutObjectACL_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutObjectACL execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful ACL creation, no content is returned and this output variable is empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns events related to DB Instances, DB Security Groups, DB Snapshots and DB Parameter Groups for the past 14 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents extends Temboo_Choreography
{
    /**
     * Returns events related to DB Instances, DB Security Groups, DB Snapshots and DB Parameter Groups for the past 14 days.
     *
     * @param Temboo_Session $session The session that owns this DescribeEvents Choreo.
     * @return Amazon_RDS_DescribeEvents New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/DescribeEvents/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeEvents Choreo.
     *
     * @param Amazon_RDS_DescribeEvents_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeEvents_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_DescribeEvents_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeEvents_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_DescribeEvents_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeEvents Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeEvents Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_DescribeEvents_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeEvents input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeEvents Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeEvents Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Duration input for this DescribeEvents Choreo.
     *
     * @param int $value (optional, integer) The number of minutes to retrieve events for. Defaults to 60.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setDuration($value)
    {
        return $this->set('Duration', $value);
    }

    /**
     * Set the value for the EndTime input for this DescribeEvents Choreo.
     *
     * @param string $value (optional, date) The end of the time interval for which to retrieve events, specified in ISO 8601 format (i.e. 2009-07-08T18:00Z).
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setEndTime($value)
    {
        return $this->set('EndTime', $value);
    }

    /**
     * Set the value for the Marker input for this DescribeEvents Choreo.
     *
     * @param int $value (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxRecords input for this DescribeEvents Choreo.
     *
     * @param int $value (optional, integer) The maximum number of records to include in the response. If more records exist, a marker is included in the response so that the remaining results may be retrieved. Defaults to max (100). Min is 20.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setMaxRecords($value)
    {
        return $this->set('MaxRecords', $value);
    }

    /**
     * Set the value for the SourceIdentifier input for this DescribeEvents Choreo.
     *
     * @param string $value (optional, string) The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setSourceIdentifier($value)
    {
        return $this->set('SourceIdentifier', $value);
    }

    /**
     * Set the value for the SourceType input for this DescribeEvents Choreo.
     *
     * @param string $value (optional, string) The event source to retrieve events for. If no value is specified, all events are returned. Valid values are: db-instance | db-parameter-group | db-security-group | db-snapshot.
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setSourceType($value)
    {
        return $this->set('SourceType', $value);
    }

    /**
     * Set the value for the StartTime input for this DescribeEvents Choreo.
     *
     * @param string $value (optional, date) The beginning of the time interval to retrieve events for, specified in ISO 8601 format (i.e. 2009-07-08T18:00Z)
     * @return Amazon_RDS_DescribeEvents_Inputs For method chaining.
     */
    public function setStartTime($value)
    {
        return $this->set('StartTime', $value);
    }
}


/**
 * Execution object for the DescribeEvents Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeEvents Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeEvents execution.
     * @param Amazon_RDS_DescribeEvents $choreo The choreography object for this execution.
     * @param Amazon_RDS_DescribeEvents_Inputs|array $inputs (optional) Inputs as Amazon_RDS_DescribeEvents_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_DescribeEvents_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_DescribeEvents $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeEvents execution.
     *
     * @return Amazon_RDS_DescribeEvents_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeEvents execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_DescribeEvents_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_DescribeEvents_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeEvents Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_DescribeEvents_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeEvents Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_DescribeEvents_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeEvents execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the website configuration and static URL of a bucket if it is setup as a website.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketWebsite extends Temboo_Choreography
{
    /**
     * Returns the website configuration and static URL of a bucket if it is setup as a website.
     *
     * @param Temboo_Session $session The session that owns this GetBucketWebsite Choreo.
     * @return Amazon_S3_GetBucketWebsite New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketWebsite/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketWebsite Choreo.
     *
     * @param Amazon_S3_GetBucketWebsite_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketWebsite_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketWebsite_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketWebsite_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketWebsite Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketWebsite_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketWebsite_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketWebsite Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketWebsite_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketWebsite Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketWebsite_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketWebsite input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketWebsite_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketWebsite_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketWebsite Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketWebsite_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketWebsite Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketWebsite_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketWebsite Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the website configuration you want to retrieve.
     * @return Amazon_S3_GetBucketWebsite_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketWebsite Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketWebsite_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketWebsite Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketWebsite_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketWebsite Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketWebsite execution.
     * @param Amazon_S3_GetBucketWebsite $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketWebsite_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketWebsite_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketWebsite_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketWebsite $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketWebsite execution.
     *
     * @return Amazon_S3_GetBucketWebsite_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketWebsite execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketWebsite_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketWebsite_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketWebsite Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketWebsite_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketWebsite Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketWebsite_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketWebsite execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "StaticURL" output from this GetBucketWebsite execution.
     *
     * @return string (string) The URL of the Amazon static website. Note that the region code included in the URL is required for static websites.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getStaticURL()
    {
        return $this->get('StaticURL');
    }
}

/**
 * Sets the versioning state of an existing bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketVersioning extends Temboo_Choreography
{
    /**
     * Sets the versioning state of an existing bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketVersioning Choreo.
     * @return Amazon_S3_PutBucketVersioning New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketVersioning/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketVersioning Choreo.
     *
     * @param Amazon_S3_PutBucketVersioning_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketVersioning_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketVersioning_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketVersioning_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketVersioning Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketVersioning_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketVersioning_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketVersioning Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketVersioning_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketVersioning Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketVersioning_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketVersioning input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketVersioning_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketVersioning_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketVersioning Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketVersioning_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketVersioning Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketVersioning_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketVersioning Choreo.
     *
     * @param string $value (required, string) The name of the bucket to create a notification for.
     * @return Amazon_S3_PutBucketVersioning_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the Status input for this PutBucketVersioning Choreo.
     *
     * @param string $value (required, string) Indicates whether or not the bucket has versioning enabled. Valid values are: Enabled or Suspended (case-sensitive).
     * @return Amazon_S3_PutBucketVersioning_Inputs For method chaining.
     */
    public function setStatus($value)
    {
        return $this->set('Status', $value);
    }
}


/**
 * Execution object for the PutBucketVersioning Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketVersioning_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketVersioning Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketVersioning execution.
     * @param Amazon_S3_PutBucketVersioning $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketVersioning_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketVersioning_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketVersioning_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketVersioning $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketVersioning execution.
     *
     * @return Amazon_S3_PutBucketVersioning_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketVersioning execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketVersioning_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketVersioning_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketVersioning Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketVersioning_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketVersioning Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketVersioning_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketVersioning execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a snapshot using a snapshot id that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot extends Temboo_Choreography
{
    /**
     * Deletes a snapshot using a snapshot id that you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteSnapshot Choreo.
     * @return Amazon_EC2_DeleteSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteSnapshot/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteSnapshot Choreo.
     *
     * @param Amazon_EC2_DeleteSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteSnapshot Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteSnapshot Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteSnapshot Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SnapshotId input for this DeleteSnapshot Choreo.
     *
     * @param string $value (required, string) The id of the snapshot to delete.
     * @return Amazon_EC2_DeleteSnapshot_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }
}


/**
 * Execution object for the DeleteSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteSnapshot Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteSnapshot execution.
     * @param Amazon_EC2_DeleteSnapshot $choreo The choreography object for this execution.
     * @param Amazon_EC2_DeleteSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteSnapshot execution.
     *
     * @return Amazon_EC2_DeleteSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteSnapshot_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteSnapshot Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteSnapshot execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a security group using the group name you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup extends Temboo_Choreography
{
    /**
     * Deletes a security group using the group name you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteSecurityGroup Choreo.
     * @return Amazon_EC2_DeleteSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteSecurityGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteSecurityGroup Choreo.
     *
     * @param Amazon_EC2_DeleteSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupId input for this DeleteSecurityGroup Choreo.
     *
     * @param string $value (conditional, string) The id of the security group to delete. Required unless providing the GroupName.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setGroupId($value)
    {
        return $this->set('GroupId', $value);
    }

    /**
     * Set the value for the GroupName input for this DeleteSecurityGroup Choreo.
     *
     * @param string $value (conditional, string) The name of the security group to delete.Required unless providing the GroupId.
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteSecurityGroup Choreo.
     *
     * @param mixed $value (optional, any) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DeleteSecurityGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeleteSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteSecurityGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteSecurityGroup execution.
     * @param Amazon_EC2_DeleteSecurityGroup $choreo The choreography object for this execution.
     * @param Amazon_EC2_DeleteSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteSecurityGroup execution.
     *
     * @return Amazon_EC2_DeleteSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteSecurityGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteSecurityGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the current competitive pricing of products, based on SellerSKU values and the MarketplaceId that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForSKU extends Temboo_Choreography
{
    /**
     * Returns the current competitive pricing of products, based on SellerSKU values and the MarketplaceId that you specify.
     *
     * @param Temboo_Session $session The session that owns this GetCompetitivePricingForSKU Choreo.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetCompetitivePricingForSKU/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetCompetitivePricingForSKU Choreo.
     *
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetCompetitivePricingForSKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetCompetitivePricingForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetCompetitivePricingForSKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetCompetitivePricingForSKU input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetCompetitivePricingForSKU Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetCompetitivePricingForSKU Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetCompetitivePricingForSKU Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetCompetitivePricingForSKU Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetCompetitivePricingForSKU Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetCompetitivePricingForSKU Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SellerSKU input for this GetCompetitivePricingForSKU Choreo.
     *
     * @param string $value (required, string) A comma-separated list of up to 20 SellerSKU values used to identify products in the given marketplace.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs For method chaining.
     */
    public function setSellerSKU($value)
    {
        return $this->set('SellerSKU', $value);
    }
}


/**
 * Execution object for the GetCompetitivePricingForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetCompetitivePricingForSKU Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetCompetitivePricingForSKU execution.
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForSKU $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetCompetitivePricingForSKU $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetCompetitivePricingForSKU execution.
     *
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetCompetitivePricingForSKU execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetCompetitivePricingForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetCompetitivePricingForSKU Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetCompetitivePricingForSKU_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetCompetitivePricingForSKU execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key as part of a key rotation workflow.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccessKey extends Temboo_Choreography
{
    /**
     * Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key as part of a key rotation workflow.
     *
     * @param Temboo_Session $session The session that owns this UpdateAccessKey Choreo.
     * @return Amazon_IAM_UpdateAccessKey New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UpdateAccessKey/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateAccessKey Choreo.
     *
     * @param Amazon_IAM_UpdateAccessKey_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateAccessKey_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateAccessKey_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UpdateAccessKey_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateAccessKey Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateAccessKey_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UpdateAccessKey_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccessKey_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateAccessKey Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateAccessKey_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateAccessKey input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateAccessKey Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateAccessKey Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AccessKeyId input for this UpdateAccessKey Choreo.
     *
     * @param string $value (conditional, string) The Access Key ID for the Access Key ID and Secret Access Key you want to delete.
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function setAccessKeyId($value)
    {
        return $this->set('AccessKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateAccessKey Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the Status input for this UpdateAccessKey Choreo.
     *
     * @param string $value (required, string) The status you want to assign to the Secret Access Key. Active means the key can be used for API calls to AWS, while Inactive means the key cannot be used.
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function setStatus($value)
    {
        return $this->set('Status', $value);
    }

    /**
     * Set the value for the UserName input for this UpdateAccessKey Choreo.
     *
     * @param string $value (conditional, string) Name of the user whose key you want to update.  If the UserName field is not specified, the UserName is determined implicitly based on the AWS Access Key ID used to sign the request.
     * @return Amazon_IAM_UpdateAccessKey_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the UpdateAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccessKey_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateAccessKey Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateAccessKey execution.
     * @param Amazon_IAM_UpdateAccessKey $choreo The choreography object for this execution.
     * @param Amazon_IAM_UpdateAccessKey_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateAccessKey_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateAccessKey_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UpdateAccessKey $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateAccessKey execution.
     *
     * @return Amazon_IAM_UpdateAccessKey_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateAccessKey execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UpdateAccessKey_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UpdateAccessKey_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateAccessKey_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateAccessKey Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UpdateAccessKey_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateAccessKey execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the acknowledged status of a report.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements extends Temboo_Choreography
{
    /**
     * Updates the acknowledged status of a report.
     *
     * @param Temboo_Session $session The session that owns this UpdateReportAcknowledgements Choreo.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/UpdateReportAcknowledgements/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateReportAcknowledgements Choreo.
     *
     * @param Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateReportAcknowledgements Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateReportAcknowledgements Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateReportAcknowledgements Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateReportAcknowledgements input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateReportAcknowledgements Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this UpdateReportAcknowledgements Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this UpdateReportAcknowledgements Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateReportAcknowledgements Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Acknowledged input for this UpdateReportAcknowledgements Choreo.
     *
     * @param bool $value (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to true to list order reports that have been acknowledged.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setAcknowledged($value)
    {
        return $this->set('Acknowledged', $value);
    }

    /**
     * Set the value for the Endpoint input for this UpdateReportAcknowledgements Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportId input for this UpdateReportAcknowledgements Choreo.
     *
     * @param int $value (required, integer) The id of the report to acknowledge.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setReportId($value)
    {
        return $this->set('ReportId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateReportAcknowledgements Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the UpdateReportAcknowledgements Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateReportAcknowledgements Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateReportAcknowledgements execution.
     * @param Amazon_Marketplace_Reports_UpdateReportAcknowledgements $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_UpdateReportAcknowledgements $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateReportAcknowledgements execution.
     *
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateReportAcknowledgements execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateReportAcknowledgements Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateReportAcknowledgements Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UpdateReportAcknowledgements_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateReportAcknowledgements execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the versioning state of a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketVersioning extends Temboo_Choreography
{
    /**
     * Retrieves the versioning state of a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketVersioning Choreo.
     * @return Amazon_S3_GetBucketVersioning New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketVersioning/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketVersioning Choreo.
     *
     * @param Amazon_S3_GetBucketVersioning_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketVersioning_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketVersioning_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketVersioning_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketVersioning Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketVersioning_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketVersioning_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketVersioning Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketVersioning_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketVersioning Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketVersioning_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketVersioning input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketVersioning_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketVersioning_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketVersioning Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketVersioning_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketVersioning Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketVersioning_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketVersioning Choreo.
     *
     * @param string $value (required, string) The name of the bucket to retrieve versioning information for.
     * @return Amazon_S3_GetBucketVersioning_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketVersioning Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketVersioning_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketVersioning Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketVersioning_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketVersioning Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketVersioning execution.
     * @param Amazon_S3_GetBucketVersioning $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketVersioning_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketVersioning_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketVersioning_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketVersioning $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketVersioning execution.
     *
     * @return Amazon_S3_GetBucketVersioning_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketVersioning execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketVersioning_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketVersioning_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketVersioning Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketVersioning_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketVersioning Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketVersioning_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketVersioning execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Enables Amazon SNS notifications of specified events for a bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketNotification extends Temboo_Choreography
{
    /**
     * Enables Amazon SNS notifications of specified events for a bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketNotification Choreo.
     * @return Amazon_S3_PutBucketNotification New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketNotification/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketNotification Choreo.
     *
     * @param Amazon_S3_PutBucketNotification_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketNotification_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketNotification_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketNotification_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketNotification Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketNotification_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketNotification_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketNotification Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketNotification_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketNotification Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketNotification_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketNotification input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketNotification_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketNotification_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketNotification Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketNotification_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketNotification Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketNotification_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketNotification Choreo.
     *
     * @param string $value (required, string) The name of the bucket to create a notification for.
     * @return Amazon_S3_PutBucketNotification_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the Event input for this PutBucketNotification Choreo.
     *
     * @param string $value (optional, string) A bucket event for which to send notifications. Valid value:  "s3:ReducedRedundancyLostObject" (The default and currently only supported notification event).
     * @return Amazon_S3_PutBucketNotification_Inputs For method chaining.
     */
    public function setEvent($value)
    {
        return $this->set('Event', $value);
    }

    /**
     * Set the value for the Topic input for this PutBucketNotification Choreo.
     *
     * @param string $value (conditional, string) The Amazon SNS topic arn that  Amazon S3 will publish a message to report the specified events for the bucket. If this is not supplied, notifications will be turned off.
     * @return Amazon_S3_PutBucketNotification_Inputs For method chaining.
     */
    public function setTopic($value)
    {
        return $this->set('Topic', $value);
    }
}


/**
 * Execution object for the PutBucketNotification Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketNotification_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketNotification Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketNotification execution.
     * @param Amazon_S3_PutBucketNotification $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketNotification_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketNotification_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketNotification_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketNotification $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketNotification execution.
     *
     * @return Amazon_S3_PutBucketNotification_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketNotification execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketNotification_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketNotification_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketNotification Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketNotification_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketNotification Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketNotification_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketNotification execution.
     *
     * @return string (string) Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of products and their attributes, ordered by relevancy, based on a search query that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts extends Temboo_Choreography
{
    /**
     * Returns a list of products and their attributes, ordered by relevancy, based on a search query that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListMatchingProducts Choreo.
     * @return Amazon_Marketplace_Products_ListMatchingProducts New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/ListMatchingProducts/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListMatchingProducts Choreo.
     *
     * @param Amazon_Marketplace_Products_ListMatchingProducts_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_ListMatchingProducts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_ListMatchingProducts_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListMatchingProducts Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_ListMatchingProducts_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListMatchingProducts Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListMatchingProducts Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListMatchingProducts input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListMatchingProducts Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListMatchingProducts Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListMatchingProducts Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListMatchingProducts Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListMatchingProducts Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Query input for this ListMatchingProducts Choreo.
     *
     * @param string $value (required, string) A search string used to search for products.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setQuery($value)
    {
        return $this->set('Query', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListMatchingProducts Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListMatchingProducts Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListMatchingProducts Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListMatchingProducts execution.
     * @param Amazon_Marketplace_Products_ListMatchingProducts $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_ListMatchingProducts_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_ListMatchingProducts_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_ListMatchingProducts $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListMatchingProducts execution.
     *
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListMatchingProducts execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_ListMatchingProducts_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListMatchingProducts Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_ListMatchingProducts_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListMatchingProducts Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_ListMatchingProducts_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListMatchingProducts execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Shuts down one or more instances.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_TerminateInstances extends Temboo_Choreography
{
    /**
     * Shuts down one or more instances.
     *
     * @param Temboo_Session $session The session that owns this TerminateInstances Choreo.
     * @return Amazon_EC2_TerminateInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/TerminateInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this TerminateInstances Choreo.
     *
     * @param Amazon_EC2_TerminateInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_TerminateInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_TerminateInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_TerminateInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this TerminateInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_TerminateInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_TerminateInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the TerminateInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_TerminateInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the TerminateInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_TerminateInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this TerminateInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_TerminateInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_TerminateInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this TerminateInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_TerminateInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this TerminateInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_TerminateInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this TerminateInstances Choreo.
     *
     * @param string $value (required, string) The instance ID to terminate. This can be a comma-separated list of up to 10 instance IDs.
     * @return Amazon_EC2_TerminateInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this TerminateInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_TerminateInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the TerminateInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_TerminateInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the TerminateInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this TerminateInstances execution.
     * @param Amazon_EC2_TerminateInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_TerminateInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_TerminateInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_TerminateInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_TerminateInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this TerminateInstances execution.
     *
     * @return Amazon_EC2_TerminateInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this TerminateInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_TerminateInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_TerminateInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the TerminateInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_TerminateInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the TerminateInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_TerminateInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this TerminateInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the specified policy document for the specified role.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRolePolicy extends Temboo_Choreography
{
    /**
     * Retrieves the specified policy document for the specified role.
     *
     * @param Temboo_Session $session The session that owns this GetRolePolicy Choreo.
     * @return Amazon_IAM_GetRolePolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetRolePolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetRolePolicy Choreo.
     *
     * @param Amazon_IAM_GetRolePolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetRolePolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetRolePolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetRolePolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetRolePolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetRolePolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetRolePolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetRolePolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRolePolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetRolePolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetRolePolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetRolePolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetRolePolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetRolePolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetRolePolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetRolePolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetRolePolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetRolePolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the PolicyName input for this GetRolePolicy Choreo.
     *
     * @param string $value (required, string) Name of the policy document to get.
     * @return Amazon_IAM_GetRolePolicy_Inputs For method chaining.
     */
    public function setPolicyName($value)
    {
        return $this->set('PolicyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetRolePolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetRolePolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this GetRolePolicy Choreo.
     *
     * @param string $value (required, string) Name of the role associated with the policy.
     * @return Amazon_IAM_GetRolePolicy_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the GetRolePolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRolePolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetRolePolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetRolePolicy execution.
     * @param Amazon_IAM_GetRolePolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetRolePolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetRolePolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetRolePolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetRolePolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetRolePolicy execution.
     *
     * @return Amazon_IAM_GetRolePolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetRolePolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetRolePolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetRolePolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetRolePolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetRolePolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetRolePolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetRolePolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetRolePolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the instance profiles that have the specified path prefix.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfiles extends Temboo_Choreography
{
    /**
     * Lists the instance profiles that have the specified path prefix.
     *
     * @param Temboo_Session $session The session that owns this ListInstanceProfiles Choreo.
     * @return Amazon_IAM_ListInstanceProfiles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListInstanceProfiles/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListInstanceProfiles Choreo.
     *
     * @param Amazon_IAM_ListInstanceProfiles_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListInstanceProfiles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListInstanceProfiles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListInstanceProfiles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInstanceProfiles Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListInstanceProfiles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInstanceProfiles Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfiles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListInstanceProfiles Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInstanceProfiles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInstanceProfiles Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInstanceProfiles Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListInstanceProfiles Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListInstanceProfiles Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the PathPrefix input for this ListInstanceProfiles Choreo.
     *
     * @param string $value (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function setPathPrefix($value)
    {
        return $this->set('PathPrefix', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListInstanceProfiles Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListInstanceProfiles_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListInstanceProfiles Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfiles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInstanceProfiles Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListInstanceProfiles execution.
     * @param Amazon_IAM_ListInstanceProfiles $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListInstanceProfiles_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListInstanceProfiles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListInstanceProfiles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListInstanceProfiles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInstanceProfiles execution.
     *
     * @return Amazon_IAM_ListInstanceProfiles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListInstanceProfiles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListInstanceProfiles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListInstanceProfiles_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListInstanceProfiles Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListInstanceProfiles_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListInstanceProfiles Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListInstanceProfiles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListInstanceProfiles execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the specified policy document for the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUserPolicy extends Temboo_Choreography
{
    /**
     * Retrieves the specified policy document for the specified user.
     *
     * @param Temboo_Session $session The session that owns this GetUserPolicy Choreo.
     * @return Amazon_IAM_GetUserPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/GetUserPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetUserPolicy Choreo.
     *
     * @param Amazon_IAM_GetUserPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetUserPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetUserPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_GetUserPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetUserPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetUserPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_GetUserPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetUserPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUserPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetUserPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_GetUserPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetUserPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_GetUserPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_GetUserPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetUserPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetUserPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetUserPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_GetUserPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the PolicyName input for this GetUserPolicy Choreo.
     *
     * @param string $value (required, string) Name of the policy document to get.
     * @return Amazon_IAM_GetUserPolicy_Inputs For method chaining.
     */
    public function setPolicyName($value)
    {
        return $this->set('PolicyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetUserPolicy Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_GetUserPolicy_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this GetUserPolicy Choreo.
     *
     * @param string $value (required, string) The name of the user to retrieve.
     * @return Amazon_IAM_GetUserPolicy_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the GetUserPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUserPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetUserPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetUserPolicy execution.
     * @param Amazon_IAM_GetUserPolicy $choreo The choreography object for this execution.
     * @param Amazon_IAM_GetUserPolicy_Inputs|array $inputs (optional) Inputs as Amazon_IAM_GetUserPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_GetUserPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_GetUserPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetUserPolicy execution.
     *
     * @return Amazon_IAM_GetUserPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetUserPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_GetUserPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_GetUserPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetUserPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_GetUserPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetUserPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_GetUserPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetUserPolicy execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes an individual inventory listings from a Seller Central account with a given SKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem extends Temboo_Choreography
{
    /**
     * Deletes an individual inventory listings from a Seller Central account with a given SKU.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItem Choreo.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/DeleteInventoryItem/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteInventoryItem Choreo.
     *
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteInventoryItem Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteInventoryItem Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteInventoryItem Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteInventoryItem input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the SKU input for this DeleteInventoryItem Choreo.
     *
     * @param string $value (required, string) A individual SKU associating with the product to delete.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteInventoryItem Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this DeleteInventoryItem Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this DeleteInventoryItem Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteInventoryItem Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DeleteOptions input for this DeleteInventoryItem Choreo.
     *
     * @param string $value (optional, string) Use 'd' to reduce the listings inventory to 0 and keep details in the system. Use 'x'  to completely delete listings from your current inventory. Defaults to "d".
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setDeleteOptions($value)
    {
        return $this->set('DeleteOptions', $value);
    }

    /**
     * Set the value for the Endpoint input for this DeleteInventoryItem Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this DeleteInventoryItem Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the DeleteInventoryItem Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteInventoryItem Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteInventoryItem execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItem $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_DeleteInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_DeleteInventoryItem $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteInventoryItem execution.
     *
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteInventoryItem execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_DeleteInventoryItem_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteInventoryItem Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_DeleteInventoryItem_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteInventoryItem Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_DeleteInventoryItem_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ProcessingStatus" output from this DeleteInventoryItem execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteInventoryItem execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "SubmissionId" output from this DeleteInventoryItem execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }
    /**
     * Retrieve the value for the "SubmissionResult" output from this DeleteInventoryItem execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Add or update an individual inventory listing.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem extends Temboo_Choreography
{
    /**
     * Add or update an individual inventory listing.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItem Choreo.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/AddOrUpdateInventoryItem/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddOrUpdateInventoryItem Choreo.
     *
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddOrUpdateInventoryItem Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddOrUpdateInventoryItem Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddOrUpdateInventoryItem Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddOrUpdateInventoryItem input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ExpeditedShipping input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (optional, string) The expedited shipping options that you offer for this item. Valid values: 3 = UK Only; N = None, no express delivery offered.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setExpeditedShipping($value)
    {
        return $this->set('ExpeditedShipping', $value);
    }

    /**
     * Set the value for the FulfillmentCenterId input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (conditional, string) For those merchants using Amazon fulfillment services, this designates which fulfillment network will be used. Required when using Amazon fulfillment services. Valid values are: AMAZON_EU, DEFAULT.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setFulfillmentCenterId($value)
    {
        return $this->set('FulfillmentCenterId', $value);
    }

    /**
     * Set the value for the ItemCondition input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param int $value (conditional, integer) A numerical entry that indicates the condition of the item. Required for new listings. Valid values are: 1-11. See documentation for description of item condition numeric values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setItemCondition($value)
    {
        return $this->set('ItemCondition', $value);
    }

    /**
     * Set the value for the ItemNote input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (optional, string) A description or note for the item you're adding or updating.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setItemNote($value)
    {
        return $this->set('ItemNote', $value);
    }

    /**
     * Set the value for the Price input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param float $value (conditional, decimal) The price at which the merchant offers the product for sale. Required if ProductId is provided.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setPrice($value)
    {
        return $this->set('Price', $value);
    }

    /**
     * Set the value for the ProductIdType input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param int $value (conditional, integer) The type of standard, unique identifier entered in the product-id field. This is a required field if product-id is provided. Valid values are: 1 (ASIN), 2 (ISBN), 3 (UPC), 4  (EAN).
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setProductIdType($value)
    {
        return $this->set('ProductIdType', $value);
    }

    /**
     * Set the value for the ProductId input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (conditional, string) A standard, alphanumeric string that uniquely identifies the product. This could be a UPC, EAN or ISBN.  This is a required field if product-id-type is provided.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setProductId($value)
    {
        return $this->set('ProductId', $value);
    }

    /**
     * Set the value for the Quantity input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param int $value (conditional, integer) Enter the quantity of the item you are making available for sale. Required for merchant-fulfilled items. Leave blank for amazon-fullfilled items.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setQuantity($value)
    {
        return $this->set('Quantity', $value);
    }

    /**
     * Set the value for the SKU input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param string $value (required, string) A unique identifier for the product, assigned by the merchant. The SKU must be unique for each product listed.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the TimeToWait input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

    /**
     * Set the value for the WillShipInternationally input for this AddOrUpdateInventoryItem Choreo.
     *
     * @param int $value (optional, integer) Specify your international shipping options. Valid values are: 3 = UK Only; 4 = UK and Europe; 5 = UK, Europe, and North America; 6 = Worldwide
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs For method chaining.
     */
    public function setWillShipInternationally($value)
    {
        return $this->set('WillShipInternationally', $value);
    }
}


/**
 * Execution object for the AddOrUpdateInventoryItem Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddOrUpdateInventoryItem Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItem execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddOrUpdateInventoryItem execution.
     *
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddOrUpdateInventoryItem execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddOrUpdateInventoryItem Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddOrUpdateInventoryItem Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItem_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ProcessingStatus" output from this AddOrUpdateInventoryItem execution.
     *
     * @return string (string) The processing status of the product submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this AddOrUpdateInventoryItem execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "SubmissionId" output from this AddOrUpdateInventoryItem execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }
    /**
     * Retrieve the value for the "SubmissionResult" output from this AddOrUpdateInventoryItem execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Creates a snapshot of an existing database instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot extends Temboo_Choreography
{
    /**
     * Creates a snapshot of an existing database instance.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSnapshot Choreo.
     * @return Amazon_RDS_CreateDBSnapshot New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/CreateDBSnapshot/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateDBSnapshot Choreo.
     *
     * @param Amazon_RDS_CreateDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSnapshot_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_CreateDBSnapshot_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_CreateDBSnapshot_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateDBSnapshot Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateDBSnapshot input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateDBSnapshot Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the DBInstanceIdentifier input for this CreateDBSnapshot Choreo.
     *
     * @param string $value (required, string) The DB Instance identifier. Should be in all lowercase.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setDBInstanceIdentifier($value)
    {
        return $this->set('DBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the DBSnapshotIdentifier input for this CreateDBSnapshot Choreo.
     *
     * @param string $value (required, string) The unique identifier for the db snapshot you're creating.
     * @return Amazon_RDS_CreateDBSnapshot_Inputs For method chaining.
     */
    public function setDBSnapshotIdentifier($value)
    {
        return $this->set('DBSnapshotIdentifier', $value);
    }
}


/**
 * Execution object for the CreateDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateDBSnapshot Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateDBSnapshot execution.
     * @param Amazon_RDS_CreateDBSnapshot $choreo The choreography object for this execution.
     * @param Amazon_RDS_CreateDBSnapshot_Inputs|array $inputs (optional) Inputs as Amazon_RDS_CreateDBSnapshot_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_CreateDBSnapshot_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_CreateDBSnapshot $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateDBSnapshot execution.
     *
     * @return Amazon_RDS_CreateDBSnapshot_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateDBSnapshot execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_CreateDBSnapshot_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateDBSnapshot Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_CreateDBSnapshot_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateDBSnapshot Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_CreateDBSnapshot_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateDBSnapshot execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds the specified role to the specified instance profile.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddRoleToInstanceProfile extends Temboo_Choreography
{
    /**
     * Adds the specified role to the specified instance profile.
     *
     * @param Temboo_Session $session The session that owns this AddRoleToInstanceProfile Choreo.
     * @return Amazon_IAM_AddRoleToInstanceProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/AddRoleToInstanceProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddRoleToInstanceProfile Choreo.
     *
     * @param Amazon_IAM_AddRoleToInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_AddRoleToInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_AddRoleToInstanceProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddRoleToInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_AddRoleToInstanceProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddRoleToInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddRoleToInstanceProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddRoleToInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddRoleToInstanceProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddRoleToInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddRoleToInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceProfileName input for this AddRoleToInstanceProfile Choreo.
     *
     * @param string $value (required, string) Name of the instance profile to update.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs For method chaining.
     */
    public function setInstanceProfileName($value)
    {
        return $this->set('InstanceProfileName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this AddRoleToInstanceProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this AddRoleToInstanceProfile Choreo.
     *
     * @param string $value (required, string) Name of the role to add.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the AddRoleToInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddRoleToInstanceProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddRoleToInstanceProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddRoleToInstanceProfile execution.
     * @param Amazon_IAM_AddRoleToInstanceProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_AddRoleToInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_AddRoleToInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_AddRoleToInstanceProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddRoleToInstanceProfile execution.
     *
     * @return Amazon_IAM_AddRoleToInstanceProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddRoleToInstanceProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_AddRoleToInstanceProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddRoleToInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_AddRoleToInstanceProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddRoleToInstanceProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_AddRoleToInstanceProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AddRoleToInstanceProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the name and/or the path of a specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateUser extends Temboo_Choreography
{
    /**
     * Updates the name and/or the path of a specified user.
     *
     * @param Temboo_Session $session The session that owns this UpdateUser Choreo.
     * @return Amazon_IAM_UpdateUser New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UpdateUser/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateUser Choreo.
     *
     * @param Amazon_IAM_UpdateUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateUser_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UpdateUser_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateUser_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UpdateUser_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateUser_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateUser_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateUser input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateUser Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateUser Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NewPath input for this UpdateUser Choreo.
     *
     * @param string $value (optional, string) The new path for the user. Include a value here only if you are changing the user's existing path. The path needs to start with and end with a slash(/).  For example, "/Division/HR/".
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function setNewPath($value)
    {
        return $this->set('NewPath', $value);
    }

    /**
     * Set the value for the NewUserName input for this UpdateUser Choreo.
     *
     * @param string $value (optional, string) The new name of the user. Include a value here only if you are updating the user's name.
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function setNewUserName($value)
    {
        return $this->set('NewUserName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateUser Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this UpdateUser Choreo.
     *
     * @param string $value (required, string) The name of the user to update.
     * @return Amazon_IAM_UpdateUser_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the UpdateUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateUser_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateUser Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateUser execution.
     * @param Amazon_IAM_UpdateUser $choreo The choreography object for this execution.
     * @param Amazon_IAM_UpdateUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateUser_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UpdateUser $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateUser execution.
     *
     * @return Amazon_IAM_UpdateUser_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateUser execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UpdateUser_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UpdateUser_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateUser_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateUser Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UpdateUser_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateUser execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns orders created during a time frame that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders extends Temboo_Choreography
{
    /**
     * Returns orders created during a time frame that you specify.
     *
     * @param Temboo_Session $session The session that owns this ListOrders Choreo.
     * @return Amazon_Marketplace_Orders_ListOrders New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/ListOrders/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListOrders Choreo.
     *
     * @param Amazon_Marketplace_Orders_ListOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrders_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_ListOrders_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListOrders Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_ListOrders_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListOrders Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListOrders Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListOrders input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListOrders Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListOrders Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListOrders Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListOrders Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the CreatedAfter input for this ListOrders Choreo.
     *
     * @param string $value (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setCreatedAfter($value)
    {
        return $this->set('CreatedAfter', $value);
    }

    /**
     * Set the value for the CreatedBefore input for this ListOrders Choreo.
     *
     * @param string $value (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setCreatedBefore($value)
    {
        return $this->set('CreatedBefore', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListOrders Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the FullfillmentChannel input for this ListOrders Choreo.
     *
     * @param string $value (optional, string) A string indicating how an order was fulfilled. Use "AFN" for Amazon fulfilled orders, and "MFN" for seller fulfilled orders.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setFullfillmentChannel($value)
    {
        return $this->set('FullfillmentChannel', $value);
    }

    /**
     * Set the value for the MaxResultsPerPage input for this ListOrders Choreo.
     *
     * @param int $value (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setMaxResultsPerPage($value)
    {
        return $this->set('MaxResultsPerPage', $value);
    }

    /**
     * Set the value for the OrderStatus input for this ListOrders Choreo.
     *
     * @param string $value (optional, string) An OrderStatus value to select only orders with a certain status. Valid values are: Pending, Unshipped, PartiallyShipped, Shipped, Canceled, Unfulfillable.
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setOrderStatus($value)
    {
        return $this->set('OrderStatus', $value);
    }

    /**
     * Set the value for the PaymentMethod input for this ListOrders Choreo.
     *
     * @param string $value (optional, string) Used to select only orders of a certain payment type. Valid values are: COD (cash on delivery), CSV (convenience store payment), or Other (Any payment method other than COD or CVS).
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setPaymentMethod($value)
    {
        return $this->set('PaymentMethod', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListOrders Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Orders_ListOrders_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListOrders Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListOrders Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListOrders execution.
     * @param Amazon_Marketplace_Orders_ListOrders $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Orders_ListOrders_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_ListOrders_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_ListOrders_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_ListOrders $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListOrders execution.
     *
     * @return Amazon_Marketplace_Orders_ListOrders_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListOrders execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_ListOrders_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListOrders Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_ListOrders_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListOrders Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_ListOrders_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListOrders execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the current balance of your account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance extends Temboo_Choreography
{
    /**
     * Retrieves the current balance of your account.
     *
     * @param Temboo_Session $session The session that owns this GetAccountBalance Choreo.
     * @return Amazon_FPS_GetAccountBalance New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetAccountBalance/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetAccountBalance Choreo.
     *
     * @param Amazon_FPS_GetAccountBalance_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountBalance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountBalance_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetAccountBalance_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetAccountBalance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountBalance_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetAccountBalance_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetAccountBalance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetAccountBalance Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetAccountBalance_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetAccountBalance input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetAccountBalance Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetAccountBalance Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetAccountBalance Choreo.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetAccountBalance_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }
}


/**
 * Execution object for the GetAccountBalance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetAccountBalance Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetAccountBalance execution.
     * @param Amazon_FPS_GetAccountBalance $choreo The choreography object for this execution.
     * @param Amazon_FPS_GetAccountBalance_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetAccountBalance_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetAccountBalance_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetAccountBalance $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetAccountBalance execution.
     *
     * @return Amazon_FPS_GetAccountBalance_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetAccountBalance execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetAccountBalance_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetAccountBalance_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetAccountBalance Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetAccountBalance_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetAccountBalance Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetAccountBalance_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetAccountBalance execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the access control list (ACL) of a bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL extends Temboo_Choreography
{
    /**
     * Returns the access control list (ACL) of a bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketACL Choreo.
     * @return Amazon_S3_GetBucketACL New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketACL/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketACL Choreo.
     *
     * @param Amazon_S3_GetBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketACL_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketACL_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketACL_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketACL_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketACL_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketACL input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketACL Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketACL Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketACL Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the ACL you want to retrieve.
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketACL Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketACL_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketACL Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketACL execution.
     * @param Amazon_S3_GetBucketACL $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketACL_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketACL $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketACL execution.
     *
     * @return Amazon_S3_GetBucketACL_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketACL execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketACL_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketACL_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketACL_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketACL Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketACL_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketACL execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a volume using a volume id that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume extends Temboo_Choreography
{
    /**
     * Deletes a volume using a volume id that you specify.
     *
     * @param Temboo_Session $session The session that owns this DeleteVolume Choreo.
     * @return Amazon_EC2_DeleteVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteVolume/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteVolume Choreo.
     *
     * @param Amazon_EC2_DeleteVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteVolume Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteVolume Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteVolume Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the VolumeId input for this DeleteVolume Choreo.
     *
     * @param string $value (required, string) The id of the volume to delete.
     * @return Amazon_EC2_DeleteVolume_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the DeleteVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteVolume Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteVolume execution.
     * @param Amazon_EC2_DeleteVolume $choreo The choreography object for this execution.
     * @param Amazon_EC2_DeleteVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteVolume execution.
     *
     * @return Amazon_EC2_DeleteVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteVolume_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteVolume_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteVolume Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteVolume execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new EC2 security group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup extends Temboo_Choreography
{
    /**
     * Creates a new EC2 security group.
     *
     * @param Temboo_Session $session The session that owns this CreateSecurityGroup Choreo.
     * @return Amazon_EC2_CreateSecurityGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/CreateSecurityGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateSecurityGroup Choreo.
     *
     * @param Amazon_EC2_CreateSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSecurityGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_CreateSecurityGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_CreateSecurityGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateSecurityGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateSecurityGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateSecurityGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupDescription input for this CreateSecurityGroup Choreo.
     *
     * @param string $value (required, string) A description for the security group that that you want to create.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setGroupDescription($value)
    {
        return $this->set('GroupDescription', $value);
    }

    /**
     * Set the value for the GroupName input for this CreateSecurityGroup Choreo.
     *
     * @param string $value (required, string) A name for the security group to create.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateSecurityGroup Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the VpcId input for this CreateSecurityGroup Choreo.
     *
     * @param string $value (optional, string) The ID of the VPC. Required for EC2-VPC.
     * @return Amazon_EC2_CreateSecurityGroup_Inputs For method chaining.
     */
    public function setVpcId($value)
    {
        return $this->set('VpcId', $value);
    }
}


/**
 * Execution object for the CreateSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateSecurityGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateSecurityGroup execution.
     * @param Amazon_EC2_CreateSecurityGroup $choreo The choreography object for this execution.
     * @param Amazon_EC2_CreateSecurityGroup_Inputs|array $inputs (optional) Inputs as Amazon_EC2_CreateSecurityGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_CreateSecurityGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_CreateSecurityGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateSecurityGroup execution.
     *
     * @return Amazon_EC2_CreateSecurityGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateSecurityGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_CreateSecurityGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateSecurityGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_CreateSecurityGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateSecurityGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_CreateSecurityGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateSecurityGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a list of groups and allows you to filter the results with a specific path prefix.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroups extends Temboo_Choreography
{
    /**
     * Returns a list of groups and allows you to filter the results with a specific path prefix.
     *
     * @param Temboo_Session $session The session that owns this ListGroups Choreo.
     * @return Amazon_IAM_ListGroups New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListGroups/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListGroups Choreo.
     *
     * @param Amazon_IAM_ListGroups_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListGroups_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListGroups_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListGroups Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListGroups_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListGroups_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListGroups Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroups_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListGroups Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListGroups_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListGroups input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListGroups Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListGroups Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListGroups Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListGroups Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the PathPrefix input for this ListGroups Choreo.
     *
     * @param string $value (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function setPathPrefix($value)
    {
        return $this->set('PathPrefix', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListGroups Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListGroups_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListGroups Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroups_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListGroups Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListGroups execution.
     * @param Amazon_IAM_ListGroups $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListGroups_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListGroups_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListGroups_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListGroups $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListGroups execution.
     *
     * @return Amazon_IAM_ListGroups_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListGroups execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListGroups_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListGroups_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListGroups Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroups_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListGroups Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListGroups_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListGroups execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Stops an Amazon EBS-backed instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances extends Temboo_Choreography
{
    /**
     * Stops an Amazon EBS-backed instance.
     *
     * @param Temboo_Session $session The session that owns this StopInstances Choreo.
     * @return Amazon_EC2_StopInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/StopInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this StopInstances Choreo.
     *
     * @param Amazon_EC2_StopInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StopInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StopInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_StopInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this StopInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StopInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_StopInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the StopInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the StopInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StopInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this StopInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this StopInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this StopInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this StopInstances Choreo.
     *
     * @param string $value (required, string) The instance ID to stop. This can be a comma-separated list of up to 10 instance IDs.
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this StopInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_StopInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the StopInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the StopInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this StopInstances execution.
     * @param Amazon_EC2_StopInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_StopInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StopInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StopInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_StopInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this StopInstances execution.
     *
     * @return Amazon_EC2_StopInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this StopInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_StopInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_StopInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the StopInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StopInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the StopInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_StopInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this StopInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds or updates a product image with a given image location and SKU.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage extends Temboo_Choreography
{
    /**
     * Adds or updates a product image with a given image location and SKU.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateProductImage Choreo.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/AddOrUpdateProductImage/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddOrUpdateProductImage Choreo.
     *
     * @param Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddOrUpdateProductImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddOrUpdateProductImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddOrUpdateProductImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddOrUpdateProductImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ImageLocation input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (required, string) The URL for the image location.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setImageLocation($value)
    {
        return $this->set('ImageLocation', $value);
    }

    /**
     * Set the value for the ImageType input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (optional, string) The type of image (Main, Alternate, or Swatch). Defaults to "Main".
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setImageType($value)
    {
        return $this->set('ImageType', $value);
    }

    /**
     * Set the value for the SKU input for this AddOrUpdateProductImage Choreo.
     *
     * @param string $value (required, string) A SKU is a "Stock Keeping Unit" which you can assign to your products to track your inventory. Provide the SKU for the product that is associated with the image you are uploading.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setSKU($value)
    {
        return $this->set('SKU', $value);
    }

    /**
     * Set the value for the TimeToWait input for this AddOrUpdateProductImage Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the AddOrUpdateProductImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddOrUpdateProductImage Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateProductImage execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateProductImage $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_AddOrUpdateProductImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddOrUpdateProductImage execution.
     *
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddOrUpdateProductImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddOrUpdateProductImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddOrUpdateProductImage Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateProductImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ProcessingStatus" output from this AddOrUpdateProductImage execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this AddOrUpdateProductImage execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "SubmissionId" output from this AddOrUpdateProductImage execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }
    /**
     * Retrieve the value for the "SubmissionResult" output from this AddOrUpdateProductImage execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Allows the authenticating user to change their password.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ChangePassword extends Temboo_Choreography
{
    /**
     * Allows the authenticating user to change their password.
     *
     * @param Temboo_Session $session The session that owns this ChangePassword Choreo.
     * @return Amazon_IAM_ChangePassword New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ChangePassword/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ChangePassword Choreo.
     *
     * @param Amazon_IAM_ChangePassword_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ChangePassword_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ChangePassword_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ChangePassword_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ChangePassword Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ChangePassword_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ChangePassword_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ChangePassword Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ChangePassword_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ChangePassword Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ChangePassword_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ChangePassword input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ChangePassword_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ChangePassword_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ChangePassword Choreo.
     *
     * @param string $value (required, string) The user's Access Key ID.
     * @return Amazon_IAM_ChangePassword_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ChangePassword Choreo.
     *
     * @param string $value (required, string) The user's Secret Key ID.
     * @return Amazon_IAM_ChangePassword_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the NewPassword input for this ChangePassword Choreo.
     *
     * @param string $value (required, string) The new password.
     * @return Amazon_IAM_ChangePassword_Inputs For method chaining.
     */
    public function setNewPassword($value)
    {
        return $this->set('NewPassword', $value);
    }

    /**
     * Set the value for the OldPassword input for this ChangePassword Choreo.
     *
     * @param string $value (required, string) The old password.
     * @return Amazon_IAM_ChangePassword_Inputs For method chaining.
     */
    public function setOldPassword($value)
    {
        return $this->set('OldPassword', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ChangePassword Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ChangePassword_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ChangePassword Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ChangePassword_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ChangePassword Choreo.
     *
     * @param Temboo_Session $session The session that owns this ChangePassword execution.
     * @param Amazon_IAM_ChangePassword $choreo The choreography object for this execution.
     * @param Amazon_IAM_ChangePassword_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ChangePassword_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ChangePassword_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ChangePassword $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ChangePassword execution.
     *
     * @return Amazon_IAM_ChangePassword_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ChangePassword execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ChangePassword_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ChangePassword_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ChangePassword Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ChangePassword_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ChangePassword Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ChangePassword_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ChangePassword execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the website configuration for the specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketWebsite extends Temboo_Choreography
{
    /**
     * Deletes the website configuration for the specified bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketWebsite Choreo.
     * @return Amazon_S3_DeleteBucketWebsite New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucketWebsite/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteBucketWebsite Choreo.
     *
     * @param Amazon_S3_DeleteBucketWebsite_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketWebsite_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketWebsite_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucketWebsite_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucketWebsite Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketWebsite_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucketWebsite_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucketWebsite Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketWebsite_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteBucketWebsite Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketWebsite_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucketWebsite input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucketWebsite_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucketWebsite_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucketWebsite Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketWebsite_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucketWebsite Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketWebsite_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucketWebsite Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the website configuration you want to delete.
     * @return Amazon_S3_DeleteBucketWebsite_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucketWebsite Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketWebsite_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucketWebsite Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketWebsite execution.
     * @param Amazon_S3_DeleteBucketWebsite $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteBucketWebsite_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketWebsite_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketWebsite_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucketWebsite $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucketWebsite execution.
     *
     * @return Amazon_S3_DeleteBucketWebsite_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteBucketWebsite execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketWebsite_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucketWebsite_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteBucketWebsite Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketWebsite_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteBucketWebsite Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketWebsite_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteBucketWebsite execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful delete operation, no content is returned and this output variable is empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the number of your available Amazon Marketplace reports, ready for download, that were generated in the last 90 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount extends Temboo_Choreography
{
    /**
     * Retrieves the number of your available Amazon Marketplace reports, ready for download, that were generated in the last 90 days.
     *
     * @param Temboo_Session $session The session that owns this GetReportCount Choreo.
     * @return Amazon_Marketplace_Reports_GetReportCount New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportCount/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetReportCount Choreo.
     *
     * @param Amazon_Marketplace_Reports_GetReportCount_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportCount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportCount_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportCount_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportCount Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportCount_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportCount Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetReportCount Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportCount input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportCount Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportCount Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportCount Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportCount Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Acknowledged input for this GetReportCount Choreo.
     *
     * @param bool $value (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to "true" to list order reports that have been acknowledged.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAcknowledged($value)
    {
        return $this->set('Acknowledged', $value);
    }

    /**
     * Set the value for the AvailableFromDate input for this GetReportCount Choreo.
     *
     * @param string $value (optional, date) The earliest date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAvailableFromDate($value)
    {
        return $this->set('AvailableFromDate', $value);
    }

    /**
     * Set the value for the AvailableToDate input for this GetReportCount Choreo.
     *
     * @param string $value (optional, date) The most recent date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setAvailableToDate($value)
    {
        return $this->set('AvailableToDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportCount Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportType input for this GetReportCount Choreo.
     *
     * @param string $value (optional, string) A ReportType enumeration value (i.e. _GET_FLAT_FILE_OPEN_LISTINGS_DATA_).
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetReportCount Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Reports_GetReportCount_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetReportCount Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportCount Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetReportCount execution.
     * @param Amazon_Marketplace_Reports_GetReportCount $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportCount_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportCount_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportCount_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportCount $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportCount execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportCount_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetReportCount execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportCount_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetReportCount Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportCount_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetReportCount Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportCount_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Count" output from this GetReportCount execution.
     *
     * @return int (integer) A non-negative integer. parsed from the Amazon response, that represents the total number of reports available to download.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCount()
    {
        return $this->get('Count');
    }
    /**
     * Retrieve the value for the "Response" output from this GetReportCount execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sends the endpoint a confirmation message in preparation for subscribing an endpoint.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe extends Temboo_Choreography
{
    /**
     * Sends the endpoint a confirmation message in preparation for subscribing an endpoint.
     *
     * @param Temboo_Session $session The session that owns this Subscribe Choreo.
     * @return Amazon_SNS_Subscribe New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/Subscribe/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Subscribe Choreo.
     *
     * @param Amazon_SNS_Subscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Subscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Subscribe_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_Subscribe_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Subscribe Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Subscribe_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_Subscribe_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Subscribe Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Subscribe Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Subscribe_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Subscribe input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this Subscribe Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this Subscribe Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this Subscribe Choreo.
     *
     * @param string $value (required, string) The endpoint that will receive the notifications. Can be an email address, URL, or the ARN of an Amazon SQS queue depending on the protocol specified.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the Protocol input for this Subscribe Choreo.
     *
     * @param string $value (required, string) The protocol you want to use. Accepted values are: http, https, email, email-json, or sqs.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setProtocol($value)
    {
        return $this->set('Protocol', $value);
    }

    /**
     * Set the value for the TopicArn input for this Subscribe Choreo.
     *
     * @param string $value (required, string) The ARN of the topic you want to subscribe to.
     * @return Amazon_SNS_Subscribe_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the Subscribe Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Subscribe Choreo.
     *
     * @param Temboo_Session $session The session that owns this Subscribe execution.
     * @param Amazon_SNS_Subscribe $choreo The choreography object for this execution.
     * @param Amazon_SNS_Subscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Subscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Subscribe_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_Subscribe $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Subscribe execution.
     *
     * @return Amazon_SNS_Subscribe_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Subscribe execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_Subscribe_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_Subscribe_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Subscribe Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Subscribe_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Subscribe Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_Subscribe_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this Subscribe execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new AWS Secret Access Key and corresponding AWS Access Key ID for a specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccessKey extends Temboo_Choreography
{
    /**
     * Creates a new AWS Secret Access Key and corresponding AWS Access Key ID for a specified user.
     *
     * @param Temboo_Session $session The session that owns this CreateAccessKey Choreo.
     * @return Amazon_IAM_CreateAccessKey New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/CreateAccessKey/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateAccessKey Choreo.
     *
     * @param Amazon_IAM_CreateAccessKey_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateAccessKey_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateAccessKey_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_CreateAccessKey_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateAccessKey Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateAccessKey_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_CreateAccessKey_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccessKey_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateAccessKey Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateAccessKey_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateAccessKey input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_CreateAccessKey_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_CreateAccessKey_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateAccessKey Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateAccessKey_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateAccessKey Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateAccessKey_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateAccessKey Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_CreateAccessKey_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this CreateAccessKey Choreo.
     *
     * @param string $value (conditional, string) The user name that the new key will belong to.  If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request. 
     * @return Amazon_IAM_CreateAccessKey_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the CreateAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccessKey_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateAccessKey Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateAccessKey execution.
     * @param Amazon_IAM_CreateAccessKey $choreo The choreography object for this execution.
     * @param Amazon_IAM_CreateAccessKey_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateAccessKey_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateAccessKey_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_CreateAccessKey $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateAccessKey execution.
     *
     * @return Amazon_IAM_CreateAccessKey_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateAccessKey execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_CreateAccessKey_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_CreateAccessKey_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccessKey_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateAccessKey Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_CreateAccessKey_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateAccessKey execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the lowest price offer listings for specific products by item condition. This method uses a MarketplaceId and SellerSKU values to uniquely identify products.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForSKU extends Temboo_Choreography
{
    /**
     * Returns the lowest price offer listings for specific products by item condition. This method uses a MarketplaceId and SellerSKU values to uniquely identify products.
     *
     * @param Temboo_Session $session The session that owns this GetLowestOfferListingsForSKU Choreo.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetLowestOfferListingsForSKU/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetLowestOfferListingsForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetLowestOfferListingsForSKU Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetLowestOfferListingsForSKU input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ExcludeMe input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param bool $value (optional, boolean) Excludes your own offer listings from the offer listings that are returned. Set to "true" to exclude your own offer listings from the results. Defaults to "false".
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setExcludeMe($value)
    {
        return $this->set('ExcludeMe', $value);
    }

    /**
     * Set the value for the ItemCondition input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (optional, string) Filters the offer listings to be considered based on item condition. Valid values: New, Used, Collectible, Refurbished, Club.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setItemCondition($value)
    {
        return $this->set('ItemCondition', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SellerSKU input for this GetLowestOfferListingsForSKU Choreo.
     *
     * @param string $value (required, string) A comma-separated list of up to 20 SellerSKU values used to identify products in the given marketplace.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs For method chaining.
     */
    public function setSellerSKU($value)
    {
        return $this->set('SellerSKU', $value);
    }
}


/**
 * Execution object for the GetLowestOfferListingsForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetLowestOfferListingsForSKU Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetLowestOfferListingsForSKU execution.
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForSKU $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetLowestOfferListingsForSKU $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetLowestOfferListingsForSKU execution.
     *
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetLowestOfferListingsForSKU execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetLowestOfferListingsForSKU Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetLowestOfferListingsForSKU Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForSKU_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetLowestOfferListingsForSKU execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the access key associated with the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccessKey extends Temboo_Choreography
{
    /**
     * Deletes the access key associated with the specified user.
     *
     * @param Temboo_Session $session The session that owns this DeleteAccessKey Choreo.
     * @return Amazon_IAM_DeleteAccessKey New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteAccessKey/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteAccessKey Choreo.
     *
     * @param Amazon_IAM_DeleteAccessKey_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteAccessKey_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteAccessKey_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteAccessKey_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteAccessKey Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteAccessKey_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteAccessKey_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccessKey_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteAccessKey Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteAccessKey_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteAccessKey input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteAccessKey_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteAccessKey_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteAccessKey Choreo.
     *
     * @param string $value (required, string) An AWS Access Key ID with sufficient permissions to delete the specified AccessKeyId.
     * @return Amazon_IAM_DeleteAccessKey_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteAccessKey Choreo.
     *
     * @param string $value (required, string) The Secret Key ID associated with the AWS AccessKey ID with sufficient permissions to delete the AccessKeyId.
     * @return Amazon_IAM_DeleteAccessKey_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AccessKeyId input for this DeleteAccessKey Choreo.
     *
     * @param string $value (conditional, string) The Access Key ID for the Access Key ID and Secret Access Key you want to delete.
     * @return Amazon_IAM_DeleteAccessKey_Inputs For method chaining.
     */
    public function setAccessKeyId($value)
    {
        return $this->set('AccessKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteAccessKey Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteAccessKey_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this DeleteAccessKey Choreo.
     *
     * @param string $value (conditional, string) Name of the user whose key you want to delete.  If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request.
     * @return Amazon_IAM_DeleteAccessKey_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the DeleteAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccessKey_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteAccessKey Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteAccessKey execution.
     * @param Amazon_IAM_DeleteAccessKey $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteAccessKey_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteAccessKey_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteAccessKey_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteAccessKey $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteAccessKey execution.
     *
     * @return Amazon_IAM_DeleteAccessKey_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteAccessKey execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteAccessKey_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteAccessKey_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteAccessKey Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteAccessKey_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteAccessKey Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteAccessKey_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteAccessKey execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds or updates one or more inventory listings in your Seller Central account with a given flat flile.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems extends Temboo_Choreography
{
    /**
     * Adds or updates one or more inventory listings in your Seller Central account with a given flat flile.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItems Choreo.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Feeds/AddOrUpdateInventoryItems/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddOrUpdateInventoryItems Choreo.
     *
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddOrUpdateInventoryItems Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddOrUpdateInventoryItems Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddOrUpdateInventoryItems Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddOrUpdateInventoryItems input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FeedData input for this AddOrUpdateInventoryItems Choreo.
     *
     * @param string $value (conditional, multiline) The feed data to sumbit to Amazon Marketplace.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setFeedData($value)
    {
        return $this->set('FeedData', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddOrUpdateInventoryItems Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this AddOrUpdateInventoryItems Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this AddOrUpdateInventoryItems Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddOrUpdateInventoryItems Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this AddOrUpdateInventoryItems Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this AddOrUpdateInventoryItems Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }

}


/**
 * Execution object for the AddOrUpdateInventoryItems Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddOrUpdateInventoryItems Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddOrUpdateInventoryItems execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddOrUpdateInventoryItems execution.
     *
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddOrUpdateInventoryItems execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddOrUpdateInventoryItems Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddOrUpdateInventoryItems Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Feeds_AddOrUpdateInventoryItems_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "ProcessingStatus" output from this AddOrUpdateInventoryItems execution.
     *
     * @return string (string) The processing status of the feed submission which is parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getProcessingStatus()
    {
        return $this->get('ProcessingStatus');
    }
    /**
     * Retrieve the value for the "Response" output from this AddOrUpdateInventoryItems execution.
     *
     * @return string (xml) The response from Amazon after submitting the feed.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "SubmissionId" output from this AddOrUpdateInventoryItems execution.
     *
     * @return int (integer) The submission id parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionId()
    {
        return $this->get('SubmissionId');
    }
    /**
     * Retrieve the value for the "SubmissionResult" output from this AddOrUpdateInventoryItems execution.
     *
     * @return string (string) The submission result returned from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getSubmissionResult()
    {
        return $this->get('SubmissionResult');
    }
}

/**
 * Returns the access control list (ACL) of a file or object.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectACL extends Temboo_Choreography
{
    /**
     * Returns the access control list (ACL) of a file or object.
     *
     * @param Temboo_Session $session The session that owns this GetObjectACL Choreo.
     * @return Amazon_S3_GetObjectACL New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetObjectACL/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetObjectACL Choreo.
     *
     * @param Amazon_S3_GetObjectACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetObjectACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetObjectACL_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetObjectACL_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetObjectACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetObjectACL_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetObjectACL_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetObjectACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectACL_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetObjectACL Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetObjectACL_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetObjectACL input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetObjectACL_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetObjectACL_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetObjectACL Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetObjectACL_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetObjectACL Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetObjectACL_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetObjectACL Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the ACL you want to retrieve.
     * @return Amazon_S3_GetObjectACL_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this GetObjectACL Choreo.
     *
     * @param string $value (required, string) Name of the file or object you wish to retrieve the ACL for. Ex.: filename.txt or folder/filename.txt.
     * @return Amazon_S3_GetObjectACL_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetObjectACL Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Can be set to xml or json. Defaults to xml.
     * @return Amazon_S3_GetObjectACL_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetObjectACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectACL_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetObjectACL Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetObjectACL execution.
     * @param Amazon_S3_GetObjectACL $choreo The choreography object for this execution.
     * @param Amazon_S3_GetObjectACL_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetObjectACL_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetObjectACL_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetObjectACL $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetObjectACL execution.
     *
     * @return Amazon_S3_GetObjectACL_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetObjectACL execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetObjectACL_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetObjectACL_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetObjectACL Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectACL_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetObjectACL Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetObjectACL_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetObjectACL execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes the specified Role from the specified Instance Profile.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveRoleFromInstanceProfile extends Temboo_Choreography
{
    /**
     * Removes the specified Role from the specified Instance Profile.
     *
     * @param Temboo_Session $session The session that owns this RemoveRoleFromInstanceProfile Choreo.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/RemoveRoleFromInstanceProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RemoveRoleFromInstanceProfile Choreo.
     *
     * @param Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_RemoveRoleFromInstanceProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RemoveRoleFromInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RemoveRoleFromInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RemoveRoleFromInstanceProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RemoveRoleFromInstanceProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RemoveRoleFromInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RemoveRoleFromInstanceProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceProfileName input for this RemoveRoleFromInstanceProfile Choreo.
     *
     * @param string $value (required, string) Name of the instance profile to update.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs For method chaining.
     */
    public function setInstanceProfileName($value)
    {
        return $this->set('InstanceProfileName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RemoveRoleFromInstanceProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RoleName input for this RemoveRoleFromInstanceProfile Choreo.
     *
     * @param string $value (required, string) Name of the role to remove.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs For method chaining.
     */
    public function setRoleName($value)
    {
        return $this->set('RoleName', $value);
    }
}


/**
 * Execution object for the RemoveRoleFromInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveRoleFromInstanceProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RemoveRoleFromInstanceProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this RemoveRoleFromInstanceProfile execution.
     * @param Amazon_IAM_RemoveRoleFromInstanceProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_RemoveRoleFromInstanceProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_RemoveRoleFromInstanceProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RemoveRoleFromInstanceProfile execution.
     *
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RemoveRoleFromInstanceProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_RemoveRoleFromInstanceProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RemoveRoleFromInstanceProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_RemoveRoleFromInstanceProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RemoveRoleFromInstanceProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_RemoveRoleFromInstanceProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RemoveRoleFromInstanceProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves a list of the items that are in a specified Amazon S3 storage bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList extends Temboo_Choreography
{
    /**
     * Retrieves a list of the items that are in a specified Amazon S3 storage bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketList Choreo.
     * @return Amazon_S3_GetBucketList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketList/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketList Choreo.
     *
     * @param Amazon_S3_GetBucketList_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketList Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketList Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketList Choreo.
     *
     * @param string $value (required, string) The name of the bucket that contains the list of objects that you want to retrieve.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the Delimiter input for this GetBucketList Choreo.
     *
     * @param string $value (optional, string) A delimiter is a character you use to group keys. All keys that contain the delimiter are grouped under a single result element, Common Prefixes. For more information see Amazon documentation.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setDelimiter($value)
    {
        return $this->set('Delimiter', $value);
    }

    /**
     * Set the value for the Marker input for this GetBucketList Choreo.
     *
     * @param string $value (optional, string) Specifies the key to start with when listing objects in a bucket. Amazon S3 lists objects in alphabetical order.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxKeys input for this GetBucketList Choreo.
     *
     * @param string $value (optional, string) Lowers the max number of keys returned in the response from 1000 to specified value.The response will contain the key IsTruncated (true) if there are additional keys that exceed the # of MaxKeys.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setMaxKeys($value)
    {
        return $this->set('MaxKeys', $value);
    }

    /**
     * Set the value for the Prefix input for this GetBucketList Choreo.
     *
     * @param string $value (optional, string) Limits the response to keys that begin with the specified prefix - useful for separating a bucket into different groupings of keys. Ex: specify 'test' to get a list of objects starting with 'test'.
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setPrefix($value)
    {
        return $this->set('Prefix', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketList Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketList_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketList Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketList execution.
     * @param Amazon_S3_GetBucketList $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketList_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketList execution.
     *
     * @return Amazon_S3_GetBucketList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketList_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketList_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketList Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketList execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited flat file order report. The report shows orders from the previous 60 days.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited flat file order report. The report shows orders from the previous 60 days.
     *
     * @param Temboo_Session $session The session that owns this FlatFileOrderReport Choreo.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/FlatFileOrderReport/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this FlatFileOrderReport Choreo.
     *
     * @param Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_FlatFileOrderReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this FlatFileOrderReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the FlatFileOrderReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the FlatFileOrderReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this FlatFileOrderReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this FlatFileOrderReport Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this FlatFileOrderReport Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this FlatFileOrderReport Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this FlatFileOrderReport Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this FlatFileOrderReport Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this FlatFileOrderReport Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the FlatFileOrderReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the FlatFileOrderReport Choreo.
     *
     * @param Temboo_Session $session The session that owns this FlatFileOrderReport execution.
     * @param Amazon_Marketplace_Reports_FlatFileOrderReport $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_FlatFileOrderReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_FlatFileOrderReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this FlatFileOrderReport execution.
     *
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this FlatFileOrderReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_FlatFileOrderReport_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the FlatFileOrderReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_FlatFileOrderReport_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the FlatFileOrderReport Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_FlatFileOrderReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "GeneratedReportId" output from this FlatFileOrderReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this FlatFileOrderReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this FlatFileOrderReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Report" output from this FlatFileOrderReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }
}

/**
 * Allows you to start an Amazon Machine Image by specifying its Instance ID.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances extends Temboo_Choreography
{
    /**
     * Allows you to start an Amazon Machine Image by specifying its Instance ID.
     *
     * @param Temboo_Session $session The session that owns this StartInstances Choreo.
     * @return Amazon_EC2_StartInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/StartInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this StartInstances Choreo.
     *
     * @param Amazon_EC2_StartInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StartInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StartInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_StartInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this StartInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StartInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_StartInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the StartInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the StartInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_StartInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this StartInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this StartInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this StartInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the InstanceId input for this StartInstances Choreo.
     *
     * @param string $value (required, string) The instance ID to start. This can be a comma-separated list of up to 10 instance IDs.
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this StartInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_StartInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the StartInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the StartInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this StartInstances execution.
     * @param Amazon_EC2_StartInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_StartInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_StartInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_StartInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_StartInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this StartInstances execution.
     *
     * @return Amazon_EC2_StartInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this StartInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_StartInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_StartInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the StartInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_StartInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the StartInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_StartInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this StartInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a base64-encoded torrent file from an Amazon S3 bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent extends Temboo_Choreography
{
    /**
     * Returns a base64-encoded torrent file from an Amazon S3 bucket.
     *
     * @param Temboo_Session $session The session that owns this GetObjectTorrent Choreo.
     * @return Amazon_S3_GetObjectTorrent New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetObjectTorrent/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetObjectTorrent Choreo.
     *
     * @param Amazon_S3_GetObjectTorrent_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetObjectTorrent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetObjectTorrent_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetObjectTorrent_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetObjectTorrent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetObjectTorrent_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetObjectTorrent_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetObjectTorrent Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetObjectTorrent Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetObjectTorrent_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetObjectTorrent input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetObjectTorrent Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetObjectTorrent Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetObjectTorrent Choreo.
     *
     * @param string $value (required, string) The name of the bucket that contains the object to retrieve.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the FileName input for this GetObjectTorrent Choreo.
     *
     * @param string $value (required, string) The name of the torrent file to retrieve.
     * @return Amazon_S3_GetObjectTorrent_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }
}


/**
 * Execution object for the GetObjectTorrent Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetObjectTorrent Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetObjectTorrent execution.
     * @param Amazon_S3_GetObjectTorrent $choreo The choreography object for this execution.
     * @param Amazon_S3_GetObjectTorrent_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetObjectTorrent_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetObjectTorrent_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetObjectTorrent $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetObjectTorrent execution.
     *
     * @return Amazon_S3_GetObjectTorrent_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetObjectTorrent execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetObjectTorrent_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetObjectTorrent_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetObjectTorrent Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetObjectTorrent_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetObjectTorrent Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetObjectTorrent_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetObjectTorrent execution.
     *
     * @return string The retrieved file. The response is a Bencoded dictionary as defined by the BitTorrent specification, which is then Base64-encoded by Temboo. Decode to get the Bencoded dictionary.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds a permission to a queue for a specific principal user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission extends Temboo_Choreography
{
    /**
     * Adds a permission to a queue for a specific principal user.
     *
     * @param Temboo_Session $session The session that owns this AddPermission Choreo.
     * @return Amazon_SQS_AddPermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/AddPermission/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddPermission Choreo.
     *
     * @param Amazon_SQS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_AddPermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_AddPermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddPermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_AddPermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_AddPermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddPermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddPermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_AddPermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddPermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId1 input for this AddPermission Choreo.
     *
     * @param int $value (required, integer) The AWS account number of the user that will be granted access to a specified action. Enter account number omitting any dashes.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccountId1($value)
    {
        return $this->set('AWSAccountId1', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this AddPermission Choreo.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ActionName input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The action to allow for a specified user. Valid values: SendMessage, ReceiveMessage, DeleteMessage,ChangeMessageVisibility, GetQueueAttributes.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setActionName($value)
    {
        return $this->set('ActionName', $value);
    }

    /**
     * Set the value for the Label input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The unique identifier for the new permission that is being set.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the QueueName input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The name of the queue that you're granting access to.
     * @return Amazon_SQS_AddPermission_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the AddPermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddPermission Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddPermission execution.
     * @param Amazon_SQS_AddPermission $choreo The choreography object for this execution.
     * @param Amazon_SQS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SQS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_AddPermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_AddPermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddPermission execution.
     *
     * @return Amazon_SQS_AddPermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddPermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_AddPermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_AddPermission_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddPermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_AddPermission_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddPermission Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_AddPermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AddPermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes a billing tag set from the specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketTagging extends Temboo_Choreography
{
    /**
     * Removes a billing tag set from the specified bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketTagging Choreo.
     * @return Amazon_S3_DeleteBucketTagging New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucketTagging/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteBucketTagging Choreo.
     *
     * @param Amazon_S3_DeleteBucketTagging_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketTagging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketTagging_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucketTagging_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucketTagging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketTagging_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucketTagging_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketTagging_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteBucketTagging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketTagging_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucketTagging input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucketTagging_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucketTagging_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucketTagging Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketTagging_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucketTagging Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketTagging_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucketTagging Choreo.
     *
     * @param string $value (required, string) The name of the bucket to remove tags from.
     * @return Amazon_S3_DeleteBucketTagging_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketTagging_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucketTagging Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketTagging execution.
     * @param Amazon_S3_DeleteBucketTagging $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteBucketTagging_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketTagging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketTagging_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucketTagging $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucketTagging execution.
     *
     * @return Amazon_S3_DeleteBucketTagging_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteBucketTagging execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketTagging_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucketTagging_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketTagging_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteBucketTagging Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketTagging_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteBucketTagging execution.
     *
     * @return string The response from Amazon. A successful execution returns an empty 204 response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates an alias for your AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccountAlias extends Temboo_Choreography
{
    /**
     * Creates an alias for your AWS account.
     *
     * @param Temboo_Session $session The session that owns this CreateAccountAlias Choreo.
     * @return Amazon_IAM_CreateAccountAlias New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/CreateAccountAlias/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateAccountAlias Choreo.
     *
     * @param Amazon_IAM_CreateAccountAlias_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateAccountAlias_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateAccountAlias_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_CreateAccountAlias_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateAccountAlias Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateAccountAlias_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_CreateAccountAlias_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateAccountAlias Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccountAlias_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateAccountAlias Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateAccountAlias_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateAccountAlias input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_CreateAccountAlias_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_CreateAccountAlias_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateAccountAlias Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateAccountAlias_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateAccountAlias Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateAccountAlias_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AccountAlias input for this CreateAccountAlias Choreo.
     *
     * @param string $value (required, string) Name of the account alias to create. Must contain only digits, lowercase letters, and hyphens (-), but cannot begin or end with a hyphen. Ex.: alias-account-name.
     * @return Amazon_IAM_CreateAccountAlias_Inputs For method chaining.
     */
    public function setAccountAlias($value)
    {
        return $this->set('AccountAlias', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateAccountAlias Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_CreateAccountAlias_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the CreateAccountAlias Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccountAlias_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateAccountAlias Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateAccountAlias execution.
     * @param Amazon_IAM_CreateAccountAlias $choreo The choreography object for this execution.
     * @param Amazon_IAM_CreateAccountAlias_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateAccountAlias_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateAccountAlias_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_CreateAccountAlias $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateAccountAlias execution.
     *
     * @return Amazon_IAM_CreateAccountAlias_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateAccountAlias execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_CreateAccountAlias_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_CreateAccountAlias_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateAccountAlias Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateAccountAlias_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateAccountAlias Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_CreateAccountAlias_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateAccountAlias execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Updates the name and/or the path of a specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateGroup extends Temboo_Choreography
{
    /**
     * Updates the name and/or the path of a specified group.
     *
     * @param Temboo_Session $session The session that owns this UpdateGroup Choreo.
     * @return Amazon_IAM_UpdateGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UpdateGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateGroup Choreo.
     *
     * @param Amazon_IAM_UpdateGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UpdateGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UpdateGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this UpdateGroup Choreo.
     *
     * @param string $value (required, string) The name of the group to update.
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the NewGroupName input for this UpdateGroup Choreo.
     *
     * @param string $value (optional, string) The new name of the group. Include a value here only if you are updating the group's name.
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function setNewGroupName($value)
    {
        return $this->set('NewGroupName', $value);
    }

    /**
     * Set the value for the NewPath input for this UpdateGroup Choreo.
     *
     * @param string $value (optional, string) The new path for the group. Include a value here only if you are changing the user's existing path.
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function setNewPath($value)
    {
        return $this->set('NewPath', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateGroup Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UpdateGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the UpdateGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateGroup execution.
     * @param Amazon_IAM_UpdateGroup $choreo The choreography object for this execution.
     * @param Amazon_IAM_UpdateGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UpdateGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateGroup execution.
     *
     * @return Amazon_IAM_UpdateGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UpdateGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UpdateGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UpdateGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a virtual MFA device.  You must deactivate a user's virtual MFA device before you can delete it.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteVirtualMFADevice extends Temboo_Choreography
{
    /**
     * Deletes a virtual MFA device.  You must deactivate a user's virtual MFA device before you can delete it.
     *
     * @param Temboo_Session $session The session that owns this DeleteVirtualMFADevice Choreo.
     * @return Amazon_IAM_DeleteVirtualMFADevice New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteVirtualMFADevice/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteVirtualMFADevice Choreo.
     *
     * @param Amazon_IAM_DeleteVirtualMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteVirtualMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteVirtualMFADevice_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteVirtualMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteVirtualMFADevice_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteVirtualMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteVirtualMFADevice_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteVirtualMFADevice Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteVirtualMFADevice input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteVirtualMFADevice Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteVirtualMFADevice Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteVirtualMFADevice Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SerialNumber input for this DeleteVirtualMFADevice Choreo.
     *
     * @param string $value (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Inputs For method chaining.
     */
    public function setSerialNumber($value)
    {
        return $this->set('SerialNumber', $value);
    }
}


/**
 * Execution object for the DeleteVirtualMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteVirtualMFADevice_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteVirtualMFADevice Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteVirtualMFADevice execution.
     * @param Amazon_IAM_DeleteVirtualMFADevice $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteVirtualMFADevice_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteVirtualMFADevice_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteVirtualMFADevice $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteVirtualMFADevice execution.
     *
     * @return Amazon_IAM_DeleteVirtualMFADevice_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteVirtualMFADevice execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteVirtualMFADevice_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteVirtualMFADevice Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteVirtualMFADevice_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteVirtualMFADevice Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteVirtualMFADevice_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteVirtualMFADevice execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the lifecycle configuration information set on the bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle extends Temboo_Choreography
{
    /**
     * Returns the lifecycle configuration information set on the bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketLifecycle Choreo.
     * @return Amazon_S3_GetBucketLifecycle New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketLifecycle/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketLifecycle Choreo.
     *
     * @param Amazon_S3_GetBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLifecycle_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketLifecycle_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketLifecycle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLifecycle_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketLifecycle_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketLifecycle Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketLifecycle_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketLifecycle input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketLifecycle Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the lifecycle you want to retrieve.
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketLifecycle Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketLifecycle_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketLifecycle Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketLifecycle execution.
     * @param Amazon_S3_GetBucketLifecycle $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketLifecycle_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketLifecycle_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketLifecycle_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketLifecycle $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketLifecycle execution.
     *
     * @return Amazon_S3_GetBucketLifecycle_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketLifecycle execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketLifecycle_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketLifecycle_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketLifecycle Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketLifecycle_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketLifecycle Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketLifecycle_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketLifecycle execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the CORS (Cross-Origin Resource Sharing) configuration information set for the specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketCORS extends Temboo_Choreography
{
    /**
     * Deletes the CORS (Cross-Origin Resource Sharing) configuration information set for the specified bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketCORS Choreo.
     * @return Amazon_S3_DeleteBucketCORS New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucketCORS/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteBucketCORS Choreo.
     *
     * @param Amazon_S3_DeleteBucketCORS_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketCORS_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketCORS_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucketCORS_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucketCORS Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketCORS_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucketCORS_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketCORS_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteBucketCORS Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketCORS_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucketCORS input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucketCORS_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucketCORS_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucketCORS Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketCORS_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucketCORS Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketCORS_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucketCORS Choreo.
     *
     * @param string $value (required, string) The name of the bucket that the CORS configuration should be removed from.
     * @return Amazon_S3_DeleteBucketCORS_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketCORS_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucketCORS Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketCORS execution.
     * @param Amazon_S3_DeleteBucketCORS $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteBucketCORS_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketCORS_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketCORS_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucketCORS $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucketCORS execution.
     *
     * @return Amazon_S3_DeleteBucketCORS_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteBucketCORS execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketCORS_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucketCORS_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketCORS_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteBucketCORS Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketCORS_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteBucketCORS execution.
     *
     * @return string The response from Amazon. Note that for a successful exection, this API operation returns an empty 204 response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Modifies an attribute of an AMI.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute extends Temboo_Choreography
{
    /**
     * Modifies an attribute of an AMI.
     *
     * @param Temboo_Session $session The session that owns this ModifyImageAttribute Choreo.
     * @return Amazon_EC2_ModifyImageAttribute New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/ModifyImageAttribute/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ModifyImageAttribute Choreo.
     *
     * @param Amazon_EC2_ModifyImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ModifyImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ModifyImageAttribute_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_ModifyImageAttribute_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ModifyImageAttribute Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_ModifyImageAttribute_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ModifyImageAttribute Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ModifyImageAttribute Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ModifyImageAttribute input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AddGroup input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (optional, string) Adds the specified group to the image's list of launch permissions. The only valid value is "all".
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAddGroup($value)
    {
        return $this->set('AddGroup', $value);
    }

    /**
     * Set the value for the AddUserId input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (optional, string) Adds the specified AWS account ID to the AMI's list of launch permissions.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setAddUserId($value)
    {
        return $this->set('AddUserId', $value);
    }

    /**
     * Set the value for the Description input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (optional, string) Changes the AMI's description to the specified value.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setDescription($value)
    {
        return $this->set('Description', $value);
    }

    /**
     * Set the value for the ImageId input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (required, string) The AMI ID.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }

    /**
     * Set the value for the ProductCode input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (optional, string) Adds the specified product code to the specified Amazon S3-backed AMI. Once you add a product code to an AMI, it can't be removed.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setProductCode($value)
    {
        return $this->set('ProductCode', $value);
    }

    /**
     * Set the value for the RemoveGroup input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (optional, string) Removes the specified group from the image's list of launch permissions. The only valid value is "all".
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setRemoveGroup($value)
    {
        return $this->set('RemoveGroup', $value);
    }

    /**
     * Set the value for the RemoveUserId input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (optional, string) Removes the specified AWS account ID from the AMI's list of launch permissions.
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setRemoveUserId($value)
    {
        return $this->set('RemoveUserId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ModifyImageAttribute Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_ModifyImageAttribute_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ModifyImageAttribute Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ModifyImageAttribute Choreo.
     *
     * @param Temboo_Session $session The session that owns this ModifyImageAttribute execution.
     * @param Amazon_EC2_ModifyImageAttribute $choreo The choreography object for this execution.
     * @param Amazon_EC2_ModifyImageAttribute_Inputs|array $inputs (optional) Inputs as Amazon_EC2_ModifyImageAttribute_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_ModifyImageAttribute_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_ModifyImageAttribute $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ModifyImageAttribute execution.
     *
     * @return Amazon_EC2_ModifyImageAttribute_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ModifyImageAttribute execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_ModifyImageAttribute_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ModifyImageAttribute Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_ModifyImageAttribute_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ModifyImageAttribute Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_ModifyImageAttribute_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ModifyImageAttribute execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a statement for a topic's access control policy which allows an AWS account to have access to the specified Amazon SNS actions.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission extends Temboo_Choreography
{
    /**
     * Creates a statement for a topic's access control policy which allows an AWS account to have access to the specified Amazon SNS actions.
     *
     * @param Temboo_Session $session The session that owns this AddPermission Choreo.
     * @return Amazon_SNS_AddPermission New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/AddPermission/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AddPermission Choreo.
     *
     * @param Amazon_SNS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_AddPermission_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_AddPermission_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AddPermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_AddPermission_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_AddPermission_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AddPermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AddPermission Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_AddPermission_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AddPermission input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this AddPermission Choreo.
     *
     * @param int $value (required, integer) The AWS account number of the user that will be granted access to a specified action. Enter account number omitting any dashes.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ActionName input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The action you want to allow for a specified user (i.e. DeleteTopic, Publish, GetTopicAttributes, etc).
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setActionName($value)
    {
        return $this->set('ActionName', $value);
    }

    /**
     * Set the value for the Label input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The unique identifier for the new policy statement.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setLabel($value)
    {
        return $this->set('Label', $value);
    }

    /**
     * Set the value for the TopicArn input for this AddPermission Choreo.
     *
     * @param string $value (required, string) The ARN of the topic whos access control policy you want to adjust.
     * @return Amazon_SNS_AddPermission_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the AddPermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AddPermission Choreo.
     *
     * @param Temboo_Session $session The session that owns this AddPermission execution.
     * @param Amazon_SNS_AddPermission $choreo The choreography object for this execution.
     * @param Amazon_SNS_AddPermission_Inputs|array $inputs (optional) Inputs as Amazon_SNS_AddPermission_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_AddPermission_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_AddPermission $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AddPermission execution.
     *
     * @return Amazon_SNS_AddPermission_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AddPermission execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_AddPermission_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_AddPermission_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AddPermission Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_AddPermission_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AddPermission Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_AddPermission_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AddPermission execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Changes the password for the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateLoginProfile extends Temboo_Choreography
{
    /**
     * Changes the password for the specified user.
     *
     * @param Temboo_Session $session The session that owns this UpdateLoginProfile Choreo.
     * @return Amazon_IAM_UpdateLoginProfile New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/UpdateLoginProfile/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UpdateLoginProfile Choreo.
     *
     * @param Amazon_IAM_UpdateLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateLoginProfile_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_UpdateLoginProfile_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UpdateLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_UpdateLoginProfile_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UpdateLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateLoginProfile_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UpdateLoginProfile Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UpdateLoginProfile input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UpdateLoginProfile Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UpdateLoginProfile Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the MustChangePassword input for this UpdateLoginProfile Choreo.
     *
     * @param bool $value (optional, boolean) Specifies whether or not the user should be required to change their password immediately.  Valid values are true/false or 1/0.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function setMustChangePassword($value)
    {
        return $this->set('MustChangePassword', $value);
    }

    /**
     * Set the value for the Password input for this UpdateLoginProfile Choreo.
     *
     * @param string $value (required, string) The new password for the user name.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function setPassword($value)
    {
        return $this->set('Password', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this UpdateLoginProfile Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this UpdateLoginProfile Choreo.
     *
     * @param string $value (required, string) The name of the user to update.
     * @return Amazon_IAM_UpdateLoginProfile_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the UpdateLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateLoginProfile_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UpdateLoginProfile Choreo.
     *
     * @param Temboo_Session $session The session that owns this UpdateLoginProfile execution.
     * @param Amazon_IAM_UpdateLoginProfile $choreo The choreography object for this execution.
     * @param Amazon_IAM_UpdateLoginProfile_Inputs|array $inputs (optional) Inputs as Amazon_IAM_UpdateLoginProfile_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_UpdateLoginProfile_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_UpdateLoginProfile $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UpdateLoginProfile execution.
     *
     * @return Amazon_IAM_UpdateLoginProfile_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UpdateLoginProfile execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_UpdateLoginProfile_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_UpdateLoginProfile_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UpdateLoginProfile Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_UpdateLoginProfile_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UpdateLoginProfile Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_UpdateLoginProfile_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this UpdateLoginProfile execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a report request of any report type, polls for the status of the report, and downloads the report when it's available.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport extends Temboo_Choreography
{
    /**
     * Creates a report request of any report type, polls for the status of the report, and downloads the report when it's available.
     *
     * @param Temboo_Session $session The session that owns this RetrieveReport Choreo.
     * @return Amazon_Marketplace_Reports_RetrieveReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/RetrieveReport/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RetrieveReport Choreo.
     *
     * @param Amazon_Marketplace_Reports_RetrieveReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RetrieveReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_RetrieveReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RetrieveReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_RetrieveReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RetrieveReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RetrieveReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RetrieveReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RetrieveReport Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this RetrieveReport Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this RetrieveReport Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RetrieveReport Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the EndDate input for this RetrieveReport Choreo.
     *
     * @param string $value (optional, date) The end of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setEndDate($value)
    {
        return $this->set('EndDate', $value);
    }

    /**
     * Set the value for the Endpoint input for this RetrieveReport Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportType input for this RetrieveReport Choreo.
     *
     * @param string $value (optional, string) A ReportType enumeration value. Defaults to _GET_FLAT_FILE_OPEN_LISTINGS_DATA_.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the StartDate input for this RetrieveReport Choreo.
     *
     * @param string $value (optional, date) The start of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setStartDate($value)
    {
        return $this->set('StartDate', $value);
    }

    /**
     * Set the value for the TimeToWait input for this RetrieveReport Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the RetrieveReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RetrieveReport Choreo.
     *
     * @param Temboo_Session $session The session that owns this RetrieveReport execution.
     * @param Amazon_Marketplace_Reports_RetrieveReport $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_RetrieveReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_RetrieveReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_RetrieveReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RetrieveReport execution.
     *
     * @return Amazon_Marketplace_Reports_RetrieveReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RetrieveReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_RetrieveReport_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RetrieveReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_RetrieveReport_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RetrieveReport Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_RetrieveReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "GeneratedReportId" output from this RetrieveReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this RetrieveReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this RetrieveReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Report" output from this RetrieveReport execution.
     *
     * @return string The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }
}

/**
 * Returns a list of report requests that you can use to get the ReportProcessingStatus and ReportId in order to retrieve a report.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList extends Temboo_Choreography
{
    /**
     * Returns a list of report requests that you can use to get the ReportProcessingStatus and ReportId in order to retrieve a report.
     *
     * @param Temboo_Session $session The session that owns this GetReportRequestList Choreo.
     * @return Amazon_Marketplace_Reports_GetReportRequestList New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/GetReportRequestList/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetReportRequestList Choreo.
     *
     * @param Amazon_Marketplace_Reports_GetReportRequestList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportRequestList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_GetReportRequestList_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetReportRequestList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_GetReportRequestList_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetReportRequestList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetReportRequestList Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetReportRequestList input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetReportRequestList Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetReportRequestList Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetReportRequestList Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetReportRequestList Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetReportRequestList Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the MaxCount input for this GetReportRequestList Choreo.
     *
     * @param int $value (optional, integer) A non-negative integer that represents the maximum number of report requests to return. Defaults to 10. Max is 100.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setMaxCount($value)
    {
        return $this->set('MaxCount', $value);
    }

    /**
     * Set the value for the ReportProcessingStatusList input for this GetReportRequestList Choreo.
     *
     * @param string $value (optional, string) A comma separated list of up to three ReportProcessingStatuses by which to filter report requests.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setReportProcessingStatusList($value)
    {
        return $this->set('ReportProcessingStatusList', $value);
    }

    /**
     * Set the value for the ReportRequestIdList input for this GetReportRequestList Choreo.
     *
     * @param string $value (optional, string) A comma separated list of up to three ReportRequestId values. If you pass in a ReportRequestId values, other query conditions are ignored.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setReportRequestIdList($value)
    {
        return $this->set('ReportRequestIdList', $value);
    }

    /**
     * Set the value for the ReportTypeList input for this GetReportRequestList Choreo.
     *
     * @param string $value (optional, string) A comma separated list of up to three ReportType enumeration values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setReportTypeList($value)
    {
        return $this->set('ReportTypeList', $value);
    }

    /**
     * Set the value for the RequestedFromDate input for this GetReportRequestList Choreo.
     *
     * @param string $value (optional, date) The start of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setRequestedFromDate($value)
    {
        return $this->set('RequestedFromDate', $value);
    }

    /**
     * Set the value for the RequestedToDate input for this GetReportRequestList Choreo.
     *
     * @param string $value (optional, date) The end of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setRequestedToDate($value)
    {
        return $this->set('RequestedToDate', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetReportRequestList Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetReportRequestList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetReportRequestList Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetReportRequestList execution.
     * @param Amazon_Marketplace_Reports_GetReportRequestList $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_GetReportRequestList_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_GetReportRequestList_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_GetReportRequestList $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetReportRequestList execution.
     *
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetReportRequestList execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_GetReportRequestList_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetReportRequestList Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_GetReportRequestList_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetReportRequestList Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_GetReportRequestList_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "GeneratedReportId" output from this GetReportRequestList execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this GetReportRequestList execution.
     *
     * @return string (string) The report status parsed from the Amazon response. If multiple records are returned, this output variable will contain the report status in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this GetReportRequestList execution.
     *
     * @return int (integer) The report request id parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Response" output from this GetReportRequestList execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the roles that have the specified path prefix. If there are none, the action returns an empty list.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRoles extends Temboo_Choreography
{
    /**
     * Lists the roles that have the specified path prefix. If there are none, the action returns an empty list.
     *
     * @param Temboo_Session $session The session that owns this ListRoles Choreo.
     * @return Amazon_IAM_ListRoles New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListRoles/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListRoles Choreo.
     *
     * @param Amazon_IAM_ListRoles_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListRoles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListRoles_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListRoles_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListRoles Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListRoles_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListRoles_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListRoles Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRoles_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListRoles Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListRoles_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListRoles input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListRoles Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListRoles Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListRoles Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListRoles Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the PathPrefix input for this ListRoles Choreo.
     *
     * @param string $value (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function setPathPrefix($value)
    {
        return $this->set('PathPrefix', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListRoles Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListRoles_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListRoles Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRoles_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListRoles Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListRoles execution.
     * @param Amazon_IAM_ListRoles $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListRoles_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListRoles_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListRoles_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListRoles $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListRoles execution.
     *
     * @return Amazon_IAM_ListRoles_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListRoles execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListRoles_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListRoles_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListRoles Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListRoles_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListRoles Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListRoles_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListRoles execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Associates an Elastic IP address with an instance or a network interface.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AssociateAddress extends Temboo_Choreography
{
    /**
     * Associates an Elastic IP address with an instance or a network interface.
     *
     * @param Temboo_Session $session The session that owns this AssociateAddress Choreo.
     * @return Amazon_EC2_AssociateAddress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/AssociateAddress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this AssociateAddress Choreo.
     *
     * @param Amazon_EC2_AssociateAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AssociateAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AssociateAddress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_AssociateAddress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this AssociateAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AssociateAddress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_AssociateAddress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the AssociateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AssociateAddress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the AssociateAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_AssociateAddress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this AssociateAddress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this AssociateAddress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this AssociateAddress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllocationId input for this AssociateAddress Choreo.
     *
     * @param string $value (optional, string) [EC2-VPC] The allocation ID.  Required for a VPC.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setAllocationId($value)
    {
        return $this->set('AllocationId', $value);
    }

    /**
     * Set the value for the AllowReassociation input for this AssociateAddress Choreo.
     *
     * @param string $value (optional, string) [EC2-VPC] Allows an Elastic IP address that is already associated with an instance or network interface to be re-associated with the specified instance or network interface. False if not specified.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setAllowReassociation($value)
    {
        return $this->set('AllowReassociation', $value);
    }

    /**
     * Set the value for the InstanceId input for this AssociateAddress Choreo.
     *
     * @param string $value (conditional, string) The ID of the instance.  Required for EC2-Classic. For a VPC, you can specify either an instance ID or a network interface ID, but not both.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the NetworkInterfaceId input for this AssociateAddress Choreo.
     *
     * @param string $value (optional, string) [EC2-VPC] The ID of the network interface. Association fails when specifying an instance ID unless exactly one interface is attached.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setNetworkInterfaceId($value)
    {
        return $this->set('NetworkInterfaceId', $value);
    }

    /**
     * Set the value for the PrivateIpAddress input for this AssociateAddress Choreo.
     *
     * @param string $value (optional, string) [EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If nothing is specified, the Elastic IP address is associated with the primary private IP address.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setPrivateIpAddress($value)
    {
        return $this->set('PrivateIpAddress', $value);
    }

    /**
     * Set the value for the PublicIp input for this AssociateAddress Choreo.
     *
     * @param string $value (conditional, string) The Elastic IP address.
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setPublicIp($value)
    {
        return $this->set('PublicIp', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this AssociateAddress Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_AssociateAddress_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the AssociateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AssociateAddress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the AssociateAddress Choreo.
     *
     * @param Temboo_Session $session The session that owns this AssociateAddress execution.
     * @param Amazon_EC2_AssociateAddress $choreo The choreography object for this execution.
     * @param Amazon_EC2_AssociateAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_AssociateAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_AssociateAddress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_AssociateAddress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this AssociateAddress execution.
     *
     * @return Amazon_EC2_AssociateAddress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this AssociateAddress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_AssociateAddress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_AssociateAddress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the AssociateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_AssociateAddress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the AssociateAddress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_AssociateAddress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this AssociateAddress execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information on EC2 instances associated with your AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances extends Temboo_Choreography
{
    /**
     * Returns information on EC2 instances associated with your AWS account.
     *
     * @param Temboo_Session $session The session that owns this DescribeInstances Choreo.
     * @return Amazon_EC2_DescribeInstances New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeInstances/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeInstances Choreo.
     *
     * @param Amazon_EC2_DescribeInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeInstances_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeInstances_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeInstances_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeInstances_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeInstances Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeInstances_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeInstances input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeInstances Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeInstances Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeInstances Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow results with.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeInstances Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the InstanceId input for this DescribeInstances Choreo.
     *
     * @param string $value (optional, string) The ID(s) of the instance(s) you want to monitor. This can be a comma-separated list of up to 10 instance IDs.  Returns all instances if this parameter is not specified.
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeInstances Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeInstances_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DescribeInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeInstances Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeInstances execution.
     * @param Amazon_EC2_DescribeInstances $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeInstances_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeInstances_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeInstances_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeInstances $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeInstances execution.
     *
     * @return Amazon_EC2_DescribeInstances_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeInstances execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeInstances_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeInstances_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeInstances Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeInstances_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeInstances Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeInstances_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeInstances execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Sets the logging parameters for a bucket and specifies permissions for who can view and modify the logging parameters. Can also be used to disable logging.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLogging extends Temboo_Choreography
{
    /**
     * Sets the logging parameters for a bucket and specifies permissions for who can view and modify the logging parameters. Can also be used to disable logging.
     *
     * @param Temboo_Session $session The session that owns this PutBucketLogging Choreo.
     * @return Amazon_S3_PutBucketLogging New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketLogging/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketLogging Choreo.
     *
     * @param Amazon_S3_PutBucketLogging_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketLogging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketLogging_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketLogging_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketLogging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketLogging_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketLogging_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketLogging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLogging_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketLogging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketLogging_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketLogging input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the BucketLoggingStatus input for this PutBucketLogging Choreo.
     *
     * @param string $value (optional, xml) An XML file that allows custom config, this can be used as an alternative to the other bucket logging inputs. If provided, the Choreo will ignore all inputs except your AWS Key/Secret and BucketName.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setBucketLoggingStatus($value)
    {
        return $this->set('BucketLoggingStatus', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketLogging Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketLogging Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketLogging Choreo.
     *
     * @param string $value (required, string) The name of the bucket that you are setting the logging for.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the EmailAddress input for this PutBucketLogging Choreo.
     *
     * @param string $value (conditional, string) The email address of the person being granted logging permissions.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setEmailAddress($value)
    {
        return $this->set('EmailAddress', $value);
    }

    /**
     * Set the value for the Permission input for this PutBucketLogging Choreo.
     *
     * @param string $value (conditional, string) The logging permissions given to the Grantee for the bucket. Valid values are: FULL_CONTROL, READ, or WRITE.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setPermission($value)
    {
        return $this->set('Permission', $value);
    }

    /**
     * Set the value for the TargetBucket input for this PutBucketLogging Choreo.
     *
     * @param string $value (conditional, string) The name of the target bucket. To disable logging, just leave this blank.
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setTargetBucket($value)
    {
        return $this->set('TargetBucket', $value);
    }

    /**
     * Set the value for the TargetPrefix input for this PutBucketLogging Choreo.
     *
     * @param string $value (conditional, string) Lets you specify a prefix for the keys that the log files will be stored under. Defaults to "/logs"
     * @return Amazon_S3_PutBucketLogging_Inputs For method chaining.
     */
    public function setTargetPrefix($value)
    {
        return $this->set('TargetPrefix', $value);
    }
}


/**
 * Execution object for the PutBucketLogging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLogging_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketLogging Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketLogging execution.
     * @param Amazon_S3_PutBucketLogging $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketLogging_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketLogging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketLogging_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketLogging $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketLogging execution.
     *
     * @return Amazon_S3_PutBucketLogging_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketLogging execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketLogging_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketLogging_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketLogging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketLogging_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketLogging Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketLogging_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketLogging execution.
     *
     * @return string The response from Amazon. A successful execution returns an empty 200 response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Describes one or more of your Elastic IP addresses.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAddresses extends Temboo_Choreography
{
    /**
     * Describes one or more of your Elastic IP addresses.
     *
     * @param Temboo_Session $session The session that owns this DescribeAddresses Choreo.
     * @return Amazon_EC2_DescribeAddresses New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeAddresses/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeAddresses Choreo.
     *
     * @param Amazon_EC2_DescribeAddresses_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeAddresses_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeAddresses_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeAddresses_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeAddresses Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeAddresses_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeAddresses_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeAddresses Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAddresses_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeAddresses Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeAddresses_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeAddresses input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeAddresses Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeAddresses Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AllocationId input for this DescribeAddresses Choreo.
     *
     * @param string $value (optional, string) One or more allocation IDs corresponding to the address or addresses to describe (VPC addresses only). This can be a comma-separated list of up to 10 Allocation Ids.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setAllocationId($value)
    {
        return $this->set('AllocationId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeAddresses Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow the results with.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeAddresses Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the PublicIp input for this DescribeAddresses Choreo.
     *
     * @param string $value (optional, string) One or more EC2 Elastic IP addresses.  This can be a comma-separated list of up to 10 IP addresses.
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setPublicIp($value)
    {
        return $this->set('PublicIp', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeAddresses Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeAddresses_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DescribeAddresses Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAddresses_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeAddresses Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeAddresses execution.
     * @param Amazon_EC2_DescribeAddresses $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeAddresses_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeAddresses_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeAddresses_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeAddresses $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeAddresses execution.
     *
     * @return Amazon_EC2_DescribeAddresses_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeAddresses execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeAddresses_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeAddresses_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeAddresses Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeAddresses_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeAddresses Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeAddresses_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeAddresses execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves the status of a specified transaction.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus extends Temboo_Choreography
{
    /**
     * Retrieves the status of a specified transaction.
     *
     * @param Temboo_Session $session The session that owns this GetTransactionStatus Choreo.
     * @return Amazon_FPS_GetTransactionStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/FPS/GetTransactionStatus/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetTransactionStatus Choreo.
     *
     * @param Amazon_FPS_GetTransactionStatus_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransactionStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransactionStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_FPS_GetTransactionStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetTransactionStatus Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransactionStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_FPS_GetTransactionStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetTransactionStatus Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetTransactionStatus Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_FPS_GetTransactionStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetTransactionStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetTransactionStatus Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetTransactionStatus Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetTransactionStatus Choreo.
     *
     * @param string $value (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TransactionId input for this GetTransactionStatus Choreo.
     *
     * @param string $value (required, string) The ID for the transaction status you want to retrieve.
     * @return Amazon_FPS_GetTransactionStatus_Inputs For method chaining.
     */
    public function setTransactionId($value)
    {
        return $this->set('TransactionId', $value);
    }
}


/**
 * Execution object for the GetTransactionStatus Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetTransactionStatus Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetTransactionStatus execution.
     * @param Amazon_FPS_GetTransactionStatus $choreo The choreography object for this execution.
     * @param Amazon_FPS_GetTransactionStatus_Inputs|array $inputs (optional) Inputs as Amazon_FPS_GetTransactionStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_FPS_GetTransactionStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_FPS_GetTransactionStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetTransactionStatus execution.
     *
     * @return Amazon_FPS_GetTransactionStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetTransactionStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_FPS_GetTransactionStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_FPS_GetTransactionStatus_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetTransactionStatus Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_FPS_GetTransactionStatus_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetTransactionStatus Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_FPS_GetTransactionStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetTransactionStatus execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about the availability of a seller's inventory using a given date range.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange extends Temboo_Choreography
{
    /**
     * Returns information about the availability of a seller's inventory using a given date range.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyByDateRange Choreo.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Inventory/ListInventorySupplyByDateRange/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListInventorySupplyByDateRange Choreo.
     *
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListInventorySupplyByDateRange Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListInventorySupplyByDateRange Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListInventorySupplyByDateRange Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListInventorySupplyByDateRange input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the PageToken input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (conditional, string) The value returned in the NextPageToken output of this Choreo when there are multiple pages of inventory items to retrieve. Required unless providing QueryStartDateTime.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setPageToken($value)
    {
        return $this->set('PageToken', $value);
    }

    /**
     * Set the value for the QueryStartDateTime input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (conditional, date) A date used for selecting items that have had changes in inventory availability after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Required unless providing PageToken.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setQueryStartDateTime($value)
    {
        return $this->set('QueryStartDateTime', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ResponseGroup input for this ListInventorySupplyByDateRange Choreo.
     *
     * @param string $value (optional, string) Indicates whether or not to return the SupplyDetail element in the response. Valid values are: "Basic" (does not include SupplyDetail), and "Detailed" (includes SupplyDetail). Defaults to "Basic".
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs For method chaining.
     */
    public function setResponseGroup($value)
    {
        return $this->set('ResponseGroup', $value);
    }
}


/**
 * Execution object for the ListInventorySupplyByDateRange Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListInventorySupplyByDateRange Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListInventorySupplyByDateRange execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListInventorySupplyByDateRange execution.
     *
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListInventorySupplyByDateRange execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListInventorySupplyByDateRange Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListInventorySupplyByDateRange Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Inventory_ListInventorySupplyByDateRange_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "NextPageToken" output from this ListInventorySupplyByDateRange execution.
     *
     * @return string (string) A token used to retrieve the next page of results. If a token is not returned, there are no more results to retrieve. This token can be passed to the PageToken input of this Choreo.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getNextPageToken()
    {
        return $this->get('NextPageToken');
    }
    /**
     * Retrieve the value for the "Response" output from this ListInventorySupplyByDateRange execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Makes a requests to Amazon to cancel an existing fulfillment order.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder extends Temboo_Choreography
{
    /**
     * Makes a requests to Amazon to cancel an existing fulfillment order.
     *
     * @param Temboo_Session $session The session that owns this CancelFulfillmentOrder Choreo.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/OutboundShipments/CancelFulfillmentOrder/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CancelFulfillmentOrder Choreo.
     *
     * @param Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CancelFulfillmentOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CancelFulfillmentOrder Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CancelFulfillmentOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CancelFulfillmentOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CancelFulfillmentOrder Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this CancelFulfillmentOrder Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this CancelFulfillmentOrder Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CancelFulfillmentOrder Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this CancelFulfillmentOrder Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CancelFulfillmentOrder Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the SellerFulfillmentOrderId input for this CancelFulfillmentOrder Choreo.
     *
     * @param string $value (required, string) The fulfillment order id that you created and submitted using the CreateFulfillmentOrder Choreo.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs For method chaining.
     */
    public function setSellerFulfillmentOrderId($value)
    {
        return $this->set('SellerFulfillmentOrderId', $value);
    }
}


/**
 * Execution object for the CancelFulfillmentOrder Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CancelFulfillmentOrder Choreo.
     *
     * @param Temboo_Session $session The session that owns this CancelFulfillmentOrder execution.
     * @param Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CancelFulfillmentOrder execution.
     *
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CancelFulfillmentOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CancelFulfillmentOrder Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CancelFulfillmentOrder Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_OutboundShipments_CancelFulfillmentOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CancelFulfillmentOrder execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns the lowest price offer listings for specific products by item condition. This method uses a MarketplaceId and ASIN values to uniquely identify products.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN extends Temboo_Choreography
{
    /**
     * Returns the lowest price offer listings for specific products by item condition. This method uses a MarketplaceId and ASIN values to uniquely identify products.
     *
     * @param Temboo_Session $session The session that owns this GetLowestOfferListingsForASIN Choreo.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetLowestOfferListingsForASIN/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetLowestOfferListingsForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetLowestOfferListingsForASIN Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetLowestOfferListingsForASIN input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the ASIN input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (required, string) A comma-separated list of up to 20 ASIN values used to identify products in the given marketplace.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setASIN($value)
    {
        return $this->set('ASIN', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ItemCondition input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (optional, string) Filters the offer listings to be considered based on item condition. Valid values: New, Used, Collectible, Refurbished, Club.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setItemCondition($value)
    {
        return $this->set('ItemCondition', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetLowestOfferListingsForASIN Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetLowestOfferListingsForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetLowestOfferListingsForASIN Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetLowestOfferListingsForASIN execution.
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForASIN $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetLowestOfferListingsForASIN $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetLowestOfferListingsForASIN execution.
     *
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetLowestOfferListingsForASIN execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetLowestOfferListingsForASIN Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetLowestOfferListingsForASIN Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetLowestOfferListingsForASIN_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetLowestOfferListingsForASIN execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Makes a copy of an existing object in S3 Storage.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject extends Temboo_Choreography
{
    /**
     * Makes a copy of an existing object in S3 Storage.
     *
     * @param Temboo_Session $session The session that owns this CopyObject Choreo.
     * @return Amazon_S3_CopyObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/CopyObject/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CopyObject Choreo.
     *
     * @param Amazon_S3_CopyObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_CopyObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_CopyObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_CopyObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CopyObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_CopyObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_CopyObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CopyObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CopyObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_CopyObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CopyObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CopyObject Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CopyObject Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this CopyObject Choreo.
     *
     * @param string $value (required, string) The name of the bucket that will be the file destination.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CannedACL input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) By default all objects are private (only owner has full access control). Valid values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, bucket-owner-full-control.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setCannedACL($value)
    {
        return $this->set('CannedACL', $value);
    }

    /**
     * Set the value for the ContentType input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) ContentType. Default is application/octet-stream.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setContentType($value)
    {
        return $this->set('ContentType', $value);
    }

    /**
     * Set the value for the FileToCopy input for this CopyObject Choreo.
     *
     * @param string $value (required, string) The name of the file to copy.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setFileToCopy($value)
    {
        return $this->set('FileToCopy', $value);
    }

    /**
     * Set the value for the IfMatch input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) Copies the object if its entity tag (ETag) matches the specified tag; otherwise returns a 412 HTTP status code error (failed precondition).
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setIfMatch($value)
    {
        return $this->set('IfMatch', $value);
    }

    /**
     * Set the value for the IfModifiedSince input for this CopyObject Choreo.
     *
     * @param string $value (optional, date) Copies if it has been modified since the specified time; otherwise returns a 412 HTTP status code error (failed precondition). Must be valid HTTP date. Can be used with IfMatch only.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setIfModifiedSince($value)
    {
        return $this->set('IfModifiedSince', $value);
    }

    /**
     * Set the value for the IfNoneMatch input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) Copies the object if its entity tag (ETag) is different from the specified tag; otherwise returns a 412 HTTP status code error (failed precondition).
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setIfNoneMatch($value)
    {
        return $this->set('IfNoneMatch', $value);
    }

    /**
     * Set the value for the IfUnmodifiedSince input for this CopyObject Choreo.
     *
     * @param string $value (optional, date) Copies if it hasn't been modified since the specified time; otherwise returns a 412 HTTP status code error (failed precondition). Must be valid HTTP date. Can be used with IfMatch or IfNoneMatch only.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setIfUnmodifiedSince($value)
    {
        return $this->set('IfUnmodifiedSince', $value);
    }

    /**
     * Set the value for the NewFileName input for this CopyObject Choreo.
     *
     * @param string $value (required, string) The file name for the new copy.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setNewFileName($value)
    {
        return $this->set('NewFileName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ServerSideEncryption input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) Specifies the server-side encryption algorithm to use when Amazon S3 creates the target object. Valid value: AES256.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setServerSideEncryption($value)
    {
        return $this->set('ServerSideEncryption', $value);
    }

    /**
     * Set the value for the StorageClass input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) Enables RRS customers to store their noncritical, reproducible data at lower levels of redundancy than Amazon S3's standard storage. Valid Values: STANDARD (default), REDUCED_REDUNDANCY.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setStorageClass($value)
    {
        return $this->set('StorageClass', $value);
    }

    /**
     * Set the value for the WebsiteRedirectLocation input for this CopyObject Choreo.
     *
     * @param string $value (optional, string) If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Ex: /anotherPage.html, http://www.page.com. Length limit: 2 K.
     * @return Amazon_S3_CopyObject_Inputs For method chaining.
     */
    public function setWebsiteRedirectLocation($value)
    {
        return $this->set('WebsiteRedirectLocation', $value);
    }

}


/**
 * Execution object for the CopyObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CopyObject Choreo.
     *
     * @param Temboo_Session $session The session that owns this CopyObject execution.
     * @param Amazon_S3_CopyObject $choreo The choreography object for this execution.
     * @param Amazon_S3_CopyObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_CopyObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_CopyObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_CopyObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CopyObject execution.
     *
     * @return Amazon_S3_CopyObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CopyObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_CopyObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_CopyObject_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CopyObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_CopyObject_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CopyObject Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_CopyObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CopyObject execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Allows a topic owner to update the attribute of a topic to a new value.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes extends Temboo_Choreography
{
    /**
     * Allows a topic owner to update the attribute of a topic to a new value.
     *
     * @param Temboo_Session $session The session that owns this SetTopicAttributes Choreo.
     * @return Amazon_SNS_SetTopicAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/SetTopicAttributes/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this SetTopicAttributes Choreo.
     *
     * @param Amazon_SNS_SetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_SetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_SetTopicAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_SetTopicAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this SetTopicAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_SetTopicAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_SetTopicAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the SetTopicAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the SetTopicAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_SetTopicAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this SetTopicAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this SetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this SetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this SetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The name of the attribute you want to modify. Valid values are: Policy and DisplayName.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the AttributeValue input for this SetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The new value for the attribute that you want to update.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setAttributeValue($value)
    {
        return $this->set('AttributeValue', $value);
    }

    /**
     * Set the value for the TopicArn input for this SetTopicAttributes Choreo.
     *
     * @param string $value (required, string) The ARN of the topic that has an attribute that you want to set.
     * @return Amazon_SNS_SetTopicAttributes_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the SetTopicAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the SetTopicAttributes Choreo.
     *
     * @param Temboo_Session $session The session that owns this SetTopicAttributes execution.
     * @param Amazon_SNS_SetTopicAttributes $choreo The choreography object for this execution.
     * @param Amazon_SNS_SetTopicAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SNS_SetTopicAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_SetTopicAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_SetTopicAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this SetTopicAttributes execution.
     *
     * @return Amazon_SNS_SetTopicAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this SetTopicAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_SetTopicAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_SetTopicAttributes_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the SetTopicAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_SetTopicAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the SetTopicAttributes Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_SetTopicAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this SetTopicAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified key pair by removing the public key from Amazon EC2. You must own the key pair.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteKeyPair extends Temboo_Choreography
{
    /**
     * Deletes the specified key pair by removing the public key from Amazon EC2. You must own the key pair.
     *
     * @param Temboo_Session $session The session that owns this DeleteKeyPair Choreo.
     * @return Amazon_EC2_DeleteKeyPair New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeleteKeyPair/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteKeyPair Choreo.
     *
     * @param Amazon_EC2_DeleteKeyPair_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteKeyPair_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteKeyPair_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeleteKeyPair_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteKeyPair Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteKeyPair_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeleteKeyPair_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteKeyPair_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteKeyPair Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeleteKeyPair_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteKeyPair input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeleteKeyPair_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeleteKeyPair_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteKeyPair Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteKeyPair_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteKeyPair Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeleteKeyPair_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the KeyName input for this DeleteKeyPair Choreo.
     *
     * @param string $value (required, string) A unique name for the key pair.
     * @return Amazon_EC2_DeleteKeyPair_Inputs For method chaining.
     */
    public function setKeyName($value)
    {
        return $this->set('KeyName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteKeyPair Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DeleteKeyPair_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeleteKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteKeyPair_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteKeyPair Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteKeyPair execution.
     * @param Amazon_EC2_DeleteKeyPair $choreo The choreography object for this execution.
     * @param Amazon_EC2_DeleteKeyPair_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeleteKeyPair_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeleteKeyPair_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeleteKeyPair $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteKeyPair execution.
     *
     * @return Amazon_EC2_DeleteKeyPair_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteKeyPair execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeleteKeyPair_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeleteKeyPair_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteKeyPair Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeleteKeyPair_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteKeyPair Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeleteKeyPair_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteKeyPair execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns orders based on the AmazonOrderId values that you specify.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder extends Temboo_Choreography
{
    /**
     * Returns orders based on the AmazonOrderId values that you specify.
     *
     * @param Temboo_Session $session The session that owns this GetOrder Choreo.
     * @return Amazon_Marketplace_Orders_GetOrder New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Orders/GetOrder/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetOrder Choreo.
     *
     * @param Amazon_Marketplace_Orders_GetOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_GetOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_GetOrder_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Orders_GetOrder_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Orders_GetOrder_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetOrder Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetOrder Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetOrder input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetOrder Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetOrder Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetOrder Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetOrder Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AmazonOrderId input for this GetOrder Choreo.
     *
     * @param string $value (required, string) An AmazonOrderId value used to retrieve the order.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setAmazonOrderId($value)
    {
        return $this->set('AmazonOrderId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetOrder Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetOrder Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Orders_GetOrder_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetOrder Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetOrder Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetOrder execution.
     * @param Amazon_Marketplace_Orders_GetOrder $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Orders_GetOrder_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Orders_GetOrder_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Orders_GetOrder_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Orders_GetOrder $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetOrder execution.
     *
     * @return Amazon_Marketplace_Orders_GetOrder_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetOrder execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Orders_GetOrder_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetOrder Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Orders_GetOrder_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetOrder Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Orders_GetOrder_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetOrder execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Removes one or more ingress rules from a security group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RevokeSecurityGroupIngress extends Temboo_Choreography
{
    /**
     * Removes one or more ingress rules from a security group.
     *
     * @param Temboo_Session $session The session that owns this RevokeSecurityGroupIngress Choreo.
     * @return Amazon_EC2_RevokeSecurityGroupIngress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/RevokeSecurityGroupIngress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RevokeSecurityGroupIngress Choreo.
     *
     * @param Amazon_EC2_RevokeSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RevokeSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_RevokeSecurityGroupIngress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RevokeSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_RevokeSecurityGroupIngress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RevokeSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RevokeSecurityGroupIngress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RevokeSecurityGroupIngress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RevokeSecurityGroupIngress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupId input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The ID of the security group to modify. Can be used instead of GroupName.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setGroupId($value)
    {
        return $this->set('GroupId', $value);
    }

    /**
     * Set the value for the GroupName input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (conditional, string) The name of the security group to modify. Can be used instead of GroupId.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the IpPermissionsCidrIp input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The CIDR range. Cannot be used when specifying a source security group.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsCidrIp($value)
    {
        return $this->set('IpPermissionsCidrIp', $value);
    }

    /**
     * Set the value for the IpPermissionsFromPort input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param int $value (optional, integer) The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, you can use -1 to specify all ICMP types.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsFromPort($value)
    {
        return $this->set('IpPermissionsFromPort', $value);
    }

    /**
     * Set the value for the IpPermissionsGroupId input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The ID of the source security group. Cannot be used when specifying a CIDR IP address.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsGroupId($value)
    {
        return $this->set('IpPermissionsGroupId', $value);
    }

    /**
     * Set the value for the IpPermissionsGroupName input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The name of the source security group. Cannot be used when specifying a CIDR IP address.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsGroupName($value)
    {
        return $this->set('IpPermissionsGroupName', $value);
    }

    /**
     * Set the value for the IpPermissionsIpProtocol input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (required, string) The IP protocol name or number. Valid values for EC2-Classic: tcp, udp, icmp (or 6, 17, 1). Valid values for EC2-VPC: tcp, udp, icmp, any valid protocol number (0-254), or -1 (to specify all).
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsIpProtocol($value)
    {
        return $this->set('IpPermissionsIpProtocol', $value);
    }

    /**
     * Set the value for the IpPermissionsToPort input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param int $value (optional, integer) The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, you can use -1 to specify all ICMP codes for the given ICMP type.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsToPort($value)
    {
        return $this->set('IpPermissionsToPort', $value);
    }

    /**
     * Set the value for the IpPermissionsUserId input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The AWS account ID that owns the source security group. Cannot be used when specifying a CIDR IP address.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setIpPermissionsUserId($value)
    {
        return $this->set('IpPermissionsUserId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this RevokeSecurityGroupIngress Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the RevokeSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RevokeSecurityGroupIngress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RevokeSecurityGroupIngress Choreo.
     *
     * @param Temboo_Session $session The session that owns this RevokeSecurityGroupIngress execution.
     * @param Amazon_EC2_RevokeSecurityGroupIngress $choreo The choreography object for this execution.
     * @param Amazon_EC2_RevokeSecurityGroupIngress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_RevokeSecurityGroupIngress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_RevokeSecurityGroupIngress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RevokeSecurityGroupIngress execution.
     *
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RevokeSecurityGroupIngress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_RevokeSecurityGroupIngress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RevokeSecurityGroupIngress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_RevokeSecurityGroupIngress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RevokeSecurityGroupIngress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_RevokeSecurityGroupIngress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RevokeSecurityGroupIngress execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Cancels one or more report requests.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest extends Temboo_Choreography
{
    /**
     * Cancels one or more report requests.
     *
     * @param Temboo_Session $session The session that owns this CancelReportRequest Choreo.
     * @return Amazon_Marketplace_Reports_CancelReportRequest New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/CancelReportRequest/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CancelReportRequest Choreo.
     *
     * @param Amazon_Marketplace_Reports_CancelReportRequest_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_CancelReportRequest_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_CancelReportRequest_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CancelReportRequest Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_CancelReportRequest_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CancelReportRequest Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CancelReportRequest Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CancelReportRequest input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CancelReportRequest Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this CancelReportRequest Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this CancelReportRequest Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CancelReportRequest Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this CancelReportRequest Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ReportProcessingStatus input for this CancelReportRequest Choreo.
     *
     * @param string $value (optional, string) A report processing status by which to filter report requests. Valid values are: _SUBMITTED_, _IN_PROGRESS_, _CANCELLED_, _DONE_, _DONE_NO_DATA_.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setReportProcessingStatus($value)
    {
        return $this->set('ReportProcessingStatus', $value);
    }

    /**
     * Set the value for the ReportRequestId input for this CancelReportRequest Choreo.
     *
     * @param string $value (optional, string) A ReportRequestId value. If you pass in a ReportRequestId value, other query conditions are ignored.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setReportRequestId($value)
    {
        return $this->set('ReportRequestId', $value);
    }

    /**
     * Set the value for the ReportType input for this CancelReportRequest Choreo.
     *
     * @param string $value (optional, string) A ReportType enumeration value (i.e. GET_ORDERS_DATA_).
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setReportType($value)
    {
        return $this->set('ReportType', $value);
    }

    /**
     * Set the value for the RequestedFromDate input for this CancelReportRequest Choreo.
     *
     * @param string $value (optional, date) The start of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setRequestedFromDate($value)
    {
        return $this->set('RequestedFromDate', $value);
    }

    /**
     * Set the value for the RequestedToDate input for this CancelReportRequest Choreo.
     *
     * @param string $value (optional, date) The end of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setRequestedToDate($value)
    {
        return $this->set('RequestedToDate', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CancelReportRequest Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the CancelReportRequest Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CancelReportRequest Choreo.
     *
     * @param Temboo_Session $session The session that owns this CancelReportRequest execution.
     * @param Amazon_Marketplace_Reports_CancelReportRequest $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_CancelReportRequest_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_CancelReportRequest_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_CancelReportRequest $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CancelReportRequest execution.
     *
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CancelReportRequest execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_CancelReportRequest_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CancelReportRequest Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_CancelReportRequest_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CancelReportRequest Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_CancelReportRequest_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Count" output from this CancelReportRequest execution.
     *
     * @return int (integer) A non-negative integer that represents the total number of report requests that were cancelled.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getCount()
    {
        return $this->get('Count');
    }
    /**
     * Retrieve the value for the "Response" output from this CancelReportRequest execution.
     *
     * @return string Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Adds a set of billing tags to an existing bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketTagging extends Temboo_Choreography
{
    /**
     * Adds a set of billing tags to an existing bucket.
     *
     * @param Temboo_Session $session The session that owns this PutBucketTagging Choreo.
     * @return Amazon_S3_PutBucketTagging New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucketTagging/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucketTagging Choreo.
     *
     * @param Amazon_S3_PutBucketTagging_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketTagging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketTagging_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucketTagging_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucketTagging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketTagging_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucketTagging_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketTagging_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucketTagging Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucketTagging_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucketTagging input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the Tags input for this PutBucketTagging Choreo.
     *
     * @param string $value (optional, xml) An XML file describing the key/values for the tag set. Note - if you use this input, the Key and Value input variables will be ignored.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function setTags($value)
    {
        return $this->set('Tags', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucketTagging Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucketTagging Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucketTagging Choreo.
     *
     * @param string $value (required, string) The name of the bucket to add tags to.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the Key input for this PutBucketTagging Choreo.
     *
     * @param string $value (conditional, string) The tag name.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function setKey($value)
    {
        return $this->set('Key', $value);
    }

    /**
     * Set the value for the Value input for this PutBucketTagging Choreo.
     *
     * @param string $value (conditional, string) The tag value.
     * @return Amazon_S3_PutBucketTagging_Inputs For method chaining.
     */
    public function setValue($value)
    {
        return $this->set('Value', $value);
    }
}


/**
 * Execution object for the PutBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketTagging_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucketTagging Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucketTagging execution.
     * @param Amazon_S3_PutBucketTagging $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucketTagging_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucketTagging_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucketTagging_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucketTagging $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucketTagging execution.
     *
     * @return Amazon_S3_PutBucketTagging_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucketTagging execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucketTagging_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucketTagging_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucketTagging Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucketTagging_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucketTagging Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucketTagging_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucketTagging execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Uploads a file to your Amazon S3 storage bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject extends Temboo_Choreography
{
    /**
     * Uploads a file to your Amazon S3 storage bucket.
     *
     * @param Temboo_Session $session The session that owns this PutObject Choreo.
     * @return Amazon_S3_PutObject New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutObject/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutObject Choreo.
     *
     * @param Amazon_S3_PutObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutObject_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutObject_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutObject_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutObject_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutObject Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutObject_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutObject input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the FileContents input for this PutObject Choreo.
     *
     * @param string $value (required, string) The Base64-encoded file contents that you want to upload to an AmazonS3 bucket.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setFileContents($value)
    {
        return $this->set('FileContents', $value);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutObject Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutObject Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutObject Choreo.
     *
     * @param string $value (required, string) The name of the bucket that will be the file destination.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CannedACL input for this PutObject Choreo.
     *
     * @param string $value (optional, string) By default all objects are private (only owner has full access control). Valid values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, bucket-owner-full-control.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setCannedACL($value)
    {
        return $this->set('CannedACL', $value);
    }

    /**
     * Set the value for the ContentType input for this PutObject Choreo.
     *
     * @param string $value (optional, string) Sets the content-type (text/html, image/jpeg, etc.). Default is application/octet-stream.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setContentType($value)
    {
        return $this->set('ContentType', $value);
    }

    /**
     * Set the value for the FileName input for this PutObject Choreo.
     *
     * @param string $value (required, string) The name of the file to put in S3 Storage. Ex.: file.txt or folder/file.txt
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setFileName($value)
    {
        return $this->set('FileName', $value);
    }

    /**
     * Set the value for the ServerSideEncryption input for this PutObject Choreo.
     *
     * @param string $value (optional, string) Specifies the server-side encryption algorithm to use when Amazon S3 creates the target object. Valid value: AES256.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setServerSideEncryption($value)
    {
        return $this->set('ServerSideEncryption', $value);
    }

    /**
     * Set the value for the StorageClass input for this PutObject Choreo.
     *
     * @param string $value (optional, string) Enables RRS customers to store their noncritical, reproducible data at lower levels of redundancy than Amazon S3's standard storage. Valid Values: STANDARD (default), REDUCED_REDUNDANCY.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setStorageClass($value)
    {
        return $this->set('StorageClass', $value);
    }

    /**
     * Set the value for the WebsiteRedirectLocation input for this PutObject Choreo.
     *
     * @param string $value (optional, string) If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Ex: /anotherPage.html, http://www.page.com. Max length: 2 K.
     * @return Amazon_S3_PutObject_Inputs For method chaining.
     */
    public function setWebsiteRedirectLocation($value)
    {
        return $this->set('WebsiteRedirectLocation', $value);
    }

}


/**
 * Execution object for the PutObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutObject Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutObject execution.
     * @param Amazon_S3_PutObject $choreo The choreography object for this execution.
     * @param Amazon_S3_PutObject_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutObject_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutObject_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutObject $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutObject execution.
     *
     * @return Amazon_S3_PutObject_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutObject execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutObject_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutObject_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutObject Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutObject_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutObject Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutObject_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutObject execution.
     *
     * @return string The response from Amazon. Note that no content is returned for successful uploads.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Retrieves one or all attributes of a queue.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes extends Temboo_Choreography
{
    /**
     * Retrieves one or all attributes of a queue.
     *
     * @param Temboo_Session $session The session that owns this GetQueueAttributes Choreo.
     * @return Amazon_SQS_GetQueueAttributes New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SQS/GetQueueAttributes/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetQueueAttributes Choreo.
     *
     * @param Amazon_SQS_GetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_GetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_GetQueueAttributes_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SQS_GetQueueAttributes_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetQueueAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_GetQueueAttributes_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SQS_GetQueueAttributes_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetQueueAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetQueueAttributes Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SQS_GetQueueAttributes_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetQueueAttributes input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSAccountId input for this GetQueueAttributes Choreo.
     *
     * @param int $value (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSAccountId($value)
    {
        return $this->set('AWSAccountId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AttributeName input for this GetQueueAttributes Choreo.
     *
     * @param string $value (optional, string) The name of the attribute that you want to retrieve for the specified queue. Defaults to 'All'.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setAttributeName($value)
    {
        return $this->set('AttributeName', $value);
    }

    /**
     * Set the value for the QueueName input for this GetQueueAttributes Choreo.
     *
     * @param string $value (required, string) The name of the queue to retrieve attributes for.
     * @return Amazon_SQS_GetQueueAttributes_Inputs For method chaining.
     */
    public function setQueueName($value)
    {
        return $this->set('QueueName', $value);
    }
}


/**
 * Execution object for the GetQueueAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetQueueAttributes Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetQueueAttributes execution.
     * @param Amazon_SQS_GetQueueAttributes $choreo The choreography object for this execution.
     * @param Amazon_SQS_GetQueueAttributes_Inputs|array $inputs (optional) Inputs as Amazon_SQS_GetQueueAttributes_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SQS_GetQueueAttributes_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SQS_GetQueueAttributes $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetQueueAttributes execution.
     *
     * @return Amazon_SQS_GetQueueAttributes_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetQueueAttributes execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SQS_GetQueueAttributes_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SQS_GetQueueAttributes_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetQueueAttributes Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SQS_GetQueueAttributes_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetQueueAttributes Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SQS_GetQueueAttributes_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetQueueAttributes execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information on available Amazon EBS snapshots.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots extends Temboo_Choreography
{
    /**
     * Returns information on available Amazon EBS snapshots.
     *
     * @param Temboo_Session $session The session that owns this DescribeSnapshots Choreo.
     * @return Amazon_EC2_DescribeSnapshots New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeSnapshots/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeSnapshots Choreo.
     *
     * @param Amazon_EC2_DescribeSnapshots_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSnapshots_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSnapshots_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeSnapshots_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeSnapshots Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSnapshots_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeSnapshots_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeSnapshots Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeSnapshots Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeSnapshots_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeSnapshots input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeSnapshots Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeSnapshots Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeSnapshots Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow results with.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeSnapshots Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the Owner input for this DescribeSnapshots Choreo.
     *
     * @param string $value (conditional, string) Returns the snapshots owned by the specified owner. Valid values are: "self" (the default), "amazon", or an AWS Account ID.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setOwner($value)
    {
        return $this->set('Owner', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeSnapshots Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the RestorableBy input for this DescribeSnapshots Choreo.
     *
     * @param string $value (optional, string) AWS accounts ID that can create volumes from the snapshot.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setRestorableBy($value)
    {
        return $this->set('RestorableBy', $value);
    }

    /**
     * Set the value for the SnapshotId input for this DescribeSnapshots Choreo.
     *
     * @param string $value (optional, string) The ID of the snapshot you want to retrieve. Returns all snapshots if not specified.
     * @return Amazon_EC2_DescribeSnapshots_Inputs For method chaining.
     */
    public function setSnapshotId($value)
    {
        return $this->set('SnapshotId', $value);
    }
}


/**
 * Execution object for the DescribeSnapshots Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeSnapshots Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeSnapshots execution.
     * @param Amazon_EC2_DescribeSnapshots $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeSnapshots_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeSnapshots_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeSnapshots_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeSnapshots $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeSnapshots execution.
     *
     * @return Amazon_EC2_DescribeSnapshots_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeSnapshots execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeSnapshots_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeSnapshots_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeSnapshots Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeSnapshots_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeSnapshots Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeSnapshots_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeSnapshots execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new bucket in your Amazon S3 account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket extends Temboo_Choreography
{
    /**
     * Creates a new bucket in your Amazon S3 account.
     *
     * @param Temboo_Session $session The session that owns this PutBucket Choreo.
     * @return Amazon_S3_PutBucket New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/PutBucket/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this PutBucket Choreo.
     *
     * @param Amazon_S3_PutBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucket_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_PutBucket_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this PutBucket Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucket_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_PutBucket_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the PutBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the PutBucket Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_PutBucket_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this PutBucket input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this PutBucket Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this PutBucket Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this PutBucket Choreo.
     *
     * @param string $value (required, string) The name of the bucket that will be created.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the CannedACL input for this PutBucket Choreo.
     *
     * @param string $value (optional, string) By default all objects are private (only owner has full access control). Valid values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, bucket-owner-full-control.
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setCannedACL($value)
    {
        return $this->set('CannedACL', $value);
    }

    /**
     * Set the value for the LocationConstraint input for this PutBucket Choreo.
     *
     * @param string $value (optional, string) The region to create the bucket in. Valid Values: EU, eu-west-1, us-west-1, us-west-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1, empty string (Default US Classic Region). 
     * @return Amazon_S3_PutBucket_Inputs For method chaining.
     */
    public function setLocationConstraint($value)
    {
        return $this->set('LocationConstraint', $value);
    }
}


/**
 * Execution object for the PutBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the PutBucket Choreo.
     *
     * @param Temboo_Session $session The session that owns this PutBucket execution.
     * @param Amazon_S3_PutBucket $choreo The choreography object for this execution.
     * @param Amazon_S3_PutBucket_Inputs|array $inputs (optional) Inputs as Amazon_S3_PutBucket_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_PutBucket_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_PutBucket $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this PutBucket execution.
     *
     * @return Amazon_S3_PutBucket_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this PutBucket execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_PutBucket_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_PutBucket_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the PutBucket Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_PutBucket_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the PutBucket Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_PutBucket_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this PutBucket execution.
     *
     * @return string The response from Amazon. Note that no content is returned for successful uploads.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the policy on a specified bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy extends Temboo_Choreography
{
    /**
     * Deletes the policy on a specified bucket.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketPolicy Choreo.
     * @return Amazon_S3_DeleteBucketPolicy New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/DeleteBucketPolicy/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteBucketPolicy Choreo.
     *
     * @param Amazon_S3_DeleteBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketPolicy_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_DeleteBucketPolicy_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteBucketPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_DeleteBucketPolicy_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteBucketPolicy Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteBucketPolicy input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteBucketPolicy Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteBucketPolicy Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this DeleteBucketPolicy Choreo.
     *
     * @param string $value (required, string) The name of the bucket associated with the policy you want to delete.
     * @return Amazon_S3_DeleteBucketPolicy_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }
}


/**
 * Execution object for the DeleteBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteBucketPolicy Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteBucketPolicy execution.
     * @param Amazon_S3_DeleteBucketPolicy $choreo The choreography object for this execution.
     * @param Amazon_S3_DeleteBucketPolicy_Inputs|array $inputs (optional) Inputs as Amazon_S3_DeleteBucketPolicy_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_DeleteBucketPolicy_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_DeleteBucketPolicy $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteBucketPolicy execution.
     *
     * @return Amazon_S3_DeleteBucketPolicy_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteBucketPolicy execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_DeleteBucketPolicy_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteBucketPolicy Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_DeleteBucketPolicy_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteBucketPolicy Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_DeleteBucketPolicy_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteBucketPolicy execution.
     *
     * @return string Stores the response from Amazon. Note that for a successful delete operation, no content is returned, and this output variable should be empty.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Detaches an Amazon EBS volume from an instance.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume extends Temboo_Choreography
{
    /**
     * Detaches an Amazon EBS volume from an instance.
     *
     * @param Temboo_Session $session The session that owns this DetachVolume Choreo.
     * @return Amazon_EC2_DetachVolume New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DetachVolume/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DetachVolume Choreo.
     *
     * @param Amazon_EC2_DetachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DetachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DetachVolume_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DetachVolume_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DetachVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DetachVolume_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DetachVolume_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DetachVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DetachVolume Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DetachVolume_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DetachVolume input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DetachVolume Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DetachVolume Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Device input for this DetachVolume Choreo.
     *
     * @param string $value (optional, string) The device name.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setDevice($value)
    {
        return $this->set('Device', $value);
    }

    /**
     * Set the value for the Force input for this DetachVolume Choreo.
     *
     * @param bool $value (required, boolean) Forces detachment if the previous detachment attempt did not occur cleanly. Use this option only as a last resort to detach a volume from a failed instance. Defaults to false.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setForce($value)
    {
        return $this->set('Force', $value);
    }

    /**
     * Set the value for the InstanceId input for this DetachVolume Choreo.
     *
     * @param string $value (optional, string) The ID of the instance.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setInstanceId($value)
    {
        return $this->set('InstanceId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DetachVolume Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the VolumeId input for this DetachVolume Choreo.
     *
     * @param string $value (required, string) The ID of the volume.
     * @return Amazon_EC2_DetachVolume_Inputs For method chaining.
     */
    public function setVolumeId($value)
    {
        return $this->set('VolumeId', $value);
    }
}


/**
 * Execution object for the DetachVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DetachVolume Choreo.
     *
     * @param Temboo_Session $session The session that owns this DetachVolume execution.
     * @param Amazon_EC2_DetachVolume $choreo The choreography object for this execution.
     * @param Amazon_EC2_DetachVolume_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DetachVolume_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DetachVolume_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DetachVolume $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DetachVolume execution.
     *
     * @return Amazon_EC2_DetachVolume_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DetachVolume execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DetachVolume_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DetachVolume_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DetachVolume Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DetachVolume_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DetachVolume Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DetachVolume_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DetachVolume execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Restores a DB Instance to an specified point-in-time.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime extends Temboo_Choreography
{
    /**
     * Restores a DB Instance to an specified point-in-time.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceToPointInTime Choreo.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/RDS/RestoreDBInstanceToPointInTime/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_RDS_RestoreDBInstanceToPointInTime_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the RestoreDBInstanceToPointInTime Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the RestoreDBInstanceToPointInTime Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this RestoreDBInstanceToPointInTime input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AutoMinorVersionUpgrade input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param bool $value (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAutoMinorVersionUpgrade($value)
    {
        return $this->set('AutoMinorVersionUpgrade', $value);
    }

    /**
     * Set the value for the AvailabilityZone input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (optional, string) The EC2 Availability Zone that the database instance will be created in. A random one is chose if not provided. Can not be specified if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setAvailabilityZone($value)
    {
        return $this->set('AvailabilityZone', $value);
    }

    /**
     * Set the value for the DBInstanceClass input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (optional, string) The compute and memory capacity of the Amazon RDS DB instance. Valid Values: db.m1.small | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setDBInstanceClass($value)
    {
        return $this->set('DBInstanceClass', $value);
    }

    /**
     * Set the value for the DBName input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (optional, string) The database name for the restored DB Instance. Note that this parameter doesn't apply to the MySQL engine.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setDBName($value)
    {
        return $this->set('DBName', $value);
    }

    /**
     * Set the value for the Engine input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (optional, string) The database engine to use for the new instance. Valid Values: MySQL | oracle-se1 | oracle-se | oracle-ee.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setEngine($value)
    {
        return $this->set('Engine', $value);
    }

    /**
     * Set the value for the LicenseModel input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (optional, string) License model information for the restored DB Instance. Valid values: license-included | bring-your-own-license | general-public-license.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setLicenseModel($value)
    {
        return $this->set('LicenseModel', $value);
    }

    /**
     * Set the value for the MultiAZ input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param bool $value (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. Do not specify the AvailabilityZone parameter if the MultiAZ parameter is set to 1 (true).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setMultiAZ($value)
    {
        return $this->set('MultiAZ', $value);
    }

    /**
     * Set the value for the Port input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param int $value (optional, integer) The port number on which the database accepts connections.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setPort($value)
    {
        return $this->set('Port', $value);
    }

    /**
     * Set the value for the RestoreTime input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (optional, date) The date and time to restore from in UTC. Cannot be specified if UseLatestRestorableTime parameter is set to 1. (format: 2009-09-07T23:45:00Z).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setRestoreTime($value)
    {
        return $this->set('RestoreTime', $value);
    }

    /**
     * Set the value for the SourceDBInstanceIdentifier input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (required, string) The identifier of the source DB Instance from which to restore.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setSourceDBInstanceIdentifier($value)
    {
        return $this->set('SourceDBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the TargetDBInstanceIdentifier input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param string $value (required, string) The name of the new database instance to be created.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setTargetDBInstanceIdentifier($value)
    {
        return $this->set('TargetDBInstanceIdentifier', $value);
    }

    /**
     * Set the value for the UseLatestRestorableTime input for this RestoreDBInstanceToPointInTime Choreo.
     *
     * @param bool $value (optional, boolean) Specifies whether or not the DB Instance is restored from the latest backup time. Defaults to 0 (false).
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs For method chaining.
     */
    public function setUseLatestRestorableTime($value)
    {
        return $this->set('UseLatestRestorableTime', $value);
    }
}


/**
 * Execution object for the RestoreDBInstanceToPointInTime Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the RestoreDBInstanceToPointInTime Choreo.
     *
     * @param Temboo_Session $session The session that owns this RestoreDBInstanceToPointInTime execution.
     * @param Amazon_RDS_RestoreDBInstanceToPointInTime $choreo The choreography object for this execution.
     * @param Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs|array $inputs (optional) Inputs as Amazon_RDS_RestoreDBInstanceToPointInTime_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_RDS_RestoreDBInstanceToPointInTime $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this RestoreDBInstanceToPointInTime execution.
     *
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this RestoreDBInstanceToPointInTime execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_RDS_RestoreDBInstanceToPointInTime_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the RestoreDBInstanceToPointInTime Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_RDS_RestoreDBInstanceToPointInTime_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the RestoreDBInstanceToPointInTime Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_RDS_RestoreDBInstanceToPointInTime_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this RestoreDBInstanceToPointInTime execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited report of active listings.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited report of active listings.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsReport Choreo.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/MerchantListingsReport/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this MerchantListingsReport Choreo.
     *
     * @param Amazon_Marketplace_Reports_MerchantListingsReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this MerchantListingsReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_MerchantListingsReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the MerchantListingsReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the MerchantListingsReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this MerchantListingsReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this MerchantListingsReport Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this MerchantListingsReport Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this MerchantListingsReport Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this MerchantListingsReport Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this MerchantListingsReport Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this MerchantListingsReport Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the MerchantListingsReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the MerchantListingsReport Choreo.
     *
     * @param Temboo_Session $session The session that owns this MerchantListingsReport execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsReport $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_MerchantListingsReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_MerchantListingsReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_MerchantListingsReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this MerchantListingsReport execution.
     *
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this MerchantListingsReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_MerchantListingsReport_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the MerchantListingsReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_MerchantListingsReport_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the MerchantListingsReport Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_MerchantListingsReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "GeneratedReportId" output from this MerchantListingsReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this MerchantListingsReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this MerchantListingsReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Report" output from this MerchantListingsReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }
}

/**
 * Retrieves the CORS (Cross-Origin Resource Sharing) configuration information set for the bucket.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketCORS extends Temboo_Choreography
{
    /**
     * Retrieves the CORS (Cross-Origin Resource Sharing) configuration information set for the bucket.
     *
     * @param Temboo_Session $session The session that owns this GetBucketCORS Choreo.
     * @return Amazon_S3_GetBucketCORS New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/S3/GetBucketCORS/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetBucketCORS Choreo.
     *
     * @param Amazon_S3_GetBucketCORS_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketCORS_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketCORS_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_S3_GetBucketCORS_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetBucketCORS Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketCORS_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_S3_GetBucketCORS_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketCORS_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetBucketCORS Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_S3_GetBucketCORS_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetBucketCORS input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_S3_GetBucketCORS_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_S3_GetBucketCORS_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetBucketCORS Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketCORS_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetBucketCORS Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_S3_GetBucketCORS_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the BucketName input for this GetBucketCORS Choreo.
     *
     * @param string $value (required, string) The name of the bucket to retrieve the CORS configuration for.
     * @return Amazon_S3_GetBucketCORS_Inputs For method chaining.
     */
    public function setBucketName($value)
    {
        return $this->set('BucketName', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetBucketCORS Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_S3_GetBucketCORS_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketCORS_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetBucketCORS Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetBucketCORS execution.
     * @param Amazon_S3_GetBucketCORS $choreo The choreography object for this execution.
     * @param Amazon_S3_GetBucketCORS_Inputs|array $inputs (optional) Inputs as Amazon_S3_GetBucketCORS_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_S3_GetBucketCORS_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_S3_GetBucketCORS $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetBucketCORS execution.
     *
     * @return Amazon_S3_GetBucketCORS_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetBucketCORS execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_S3_GetBucketCORS_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_S3_GetBucketCORS_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetBucketCORS Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_S3_GetBucketCORS_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetBucketCORS Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_S3_GetBucketCORS_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetBucketCORS execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Disassociates an Elastic IP address from the instance or network interface it's associated with.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DisassociateAddress extends Temboo_Choreography
{
    /**
     * Disassociates an Elastic IP address from the instance or network interface it's associated with.
     *
     * @param Temboo_Session $session The session that owns this DisassociateAddress Choreo.
     * @return Amazon_EC2_DisassociateAddress New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DisassociateAddress/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DisassociateAddress Choreo.
     *
     * @param Amazon_EC2_DisassociateAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DisassociateAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DisassociateAddress_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DisassociateAddress_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DisassociateAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DisassociateAddress_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DisassociateAddress_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DisassociateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DisassociateAddress_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DisassociateAddress Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DisassociateAddress_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DisassociateAddress input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DisassociateAddress_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DisassociateAddress_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DisassociateAddress Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DisassociateAddress_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DisassociateAddress Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DisassociateAddress_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AssociationId input for this DisassociateAddress Choreo.
     *
     * @param string $value (conditional, string) [EC2-VPC] The association ID corresponding to the Elastic IP address.
     * @return Amazon_EC2_DisassociateAddress_Inputs For method chaining.
     */
    public function setAssociationId($value)
    {
        return $this->set('AssociationId', $value);
    }

    /**
     * Set the value for the PublicIp input for this DisassociateAddress Choreo.
     *
     * @param string $value (conditional, string) [EC2-Classic] The Elastic IP address.
     * @return Amazon_EC2_DisassociateAddress_Inputs For method chaining.
     */
    public function setPublicIp($value)
    {
        return $this->set('PublicIp', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DisassociateAddress Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DisassociateAddress_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DisassociateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DisassociateAddress_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DisassociateAddress Choreo.
     *
     * @param Temboo_Session $session The session that owns this DisassociateAddress execution.
     * @param Amazon_EC2_DisassociateAddress $choreo The choreography object for this execution.
     * @param Amazon_EC2_DisassociateAddress_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DisassociateAddress_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DisassociateAddress_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DisassociateAddress $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DisassociateAddress execution.
     *
     * @return Amazon_EC2_DisassociateAddress_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DisassociateAddress execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DisassociateAddress_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DisassociateAddress_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DisassociateAddress Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DisassociateAddress_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DisassociateAddress Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DisassociateAddress_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DisassociateAddress execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes the specified server certificate.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteServerCertificate extends Temboo_Choreography
{
    /**
     * Deletes the specified server certificate.
     *
     * @param Temboo_Session $session The session that owns this DeleteServerCertificate Choreo.
     * @return Amazon_IAM_DeleteServerCertificate New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteServerCertificate/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteServerCertificate Choreo.
     *
     * @param Amazon_IAM_DeleteServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteServerCertificate_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteServerCertificate_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteServerCertificate_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteServerCertificate_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteServerCertificate_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteServerCertificate Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteServerCertificate_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteServerCertificate input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteServerCertificate_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteServerCertificate_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteServerCertificate Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteServerCertificate_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteServerCertificate Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteServerCertificate_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteServerCertificate Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteServerCertificate_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the ServerCertificateName input for this DeleteServerCertificate Choreo.
     *
     * @param string $value (required, string) The name of the server certificate you want to delete.
     * @return Amazon_IAM_DeleteServerCertificate_Inputs For method chaining.
     */
    public function setServerCertificateName($value)
    {
        return $this->set('ServerCertificateName', $value);
    }
}


/**
 * Execution object for the DeleteServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteServerCertificate_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteServerCertificate Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteServerCertificate execution.
     * @param Amazon_IAM_DeleteServerCertificate $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteServerCertificate_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteServerCertificate_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteServerCertificate_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteServerCertificate $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteServerCertificate execution.
     *
     * @return Amazon_IAM_DeleteServerCertificate_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteServerCertificate execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteServerCertificate_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteServerCertificate_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteServerCertificate Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteServerCertificate_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteServerCertificate Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteServerCertificate_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteServerCertificate execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns information about Amazon Machine Image(s) that are available to you.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages extends Temboo_Choreography
{
    /**
     * Returns information about Amazon Machine Image(s) that are available to you.
     *
     * @param Temboo_Session $session The session that owns this DescribeImages Choreo.
     * @return Amazon_EC2_DescribeImages New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DescribeImages/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DescribeImages Choreo.
     *
     * @param Amazon_EC2_DescribeImages_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImages_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImages_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DescribeImages_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DescribeImages Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImages_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DescribeImages_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DescribeImages Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DescribeImages Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DescribeImages_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DescribeImages input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DescribeImages Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DescribeImages Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ExecutableBy input for this DescribeImages Choreo.
     *
     * @param string $value (optional, string) The user ID that has explicit launch permissions. The user ID can be an AWS account ID, "self", or "all" to return AMIs with public launch permissions.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setExecutableBy($value)
    {
        return $this->set('ExecutableBy', $value);
    }

    /**
     * Set the value for the FilterName input for this DescribeImages Choreo.
     *
     * @param string $value (optional, string) The name of a supported filter to narrow results with.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setFilterName($value)
    {
        return $this->set('FilterName', $value);
    }

    /**
     * Set the value for the FilterValue input for this DescribeImages Choreo.
     *
     * @param string $value (optional, string) A value for the specified filter.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setFilterValue($value)
    {
        return $this->set('FilterValue', $value);
    }

    /**
     * Set the value for the ImageId input for this DescribeImages Choreo.
     *
     * @param string $value (conditional, string) The ID of the AMI that you want to return. Returns all AMIs when this parameter is not specified.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }

    /**
     * Set the value for the Owner input for this DescribeImages Choreo.
     *
     * @param string $value (conditional, string) The IDs "amazon", "aws-marketplace", and "self" can be used to include AMIs owned by Amazon, AWS Marketplace, or AMIs owned by you, respectively.
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setOwner($value)
    {
        return $this->set('Owner', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DescribeImages Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DescribeImages_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DescribeImages Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DescribeImages Choreo.
     *
     * @param Temboo_Session $session The session that owns this DescribeImages execution.
     * @param Amazon_EC2_DescribeImages $choreo The choreography object for this execution.
     * @param Amazon_EC2_DescribeImages_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DescribeImages_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DescribeImages_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DescribeImages $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DescribeImages execution.
     *
     * @return Amazon_EC2_DescribeImages_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DescribeImages execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DescribeImages_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DescribeImages_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DescribeImages Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DescribeImages_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DescribeImages Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DescribeImages_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DescribeImages execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Verifies that the endpoint owner wishes to receive messages by verifying the token sent during the Subscribe action.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription extends Temboo_Choreography
{
    /**
     * Verifies that the endpoint owner wishes to receive messages by verifying the token sent during the Subscribe action.
     *
     * @param Temboo_Session $session The session that owns this ConfirmSubscription Choreo.
     * @return Amazon_SNS_ConfirmSubscription New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/ConfirmSubscription/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ConfirmSubscription Choreo.
     *
     * @param Amazon_SNS_ConfirmSubscription_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ConfirmSubscription_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ConfirmSubscription_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_ConfirmSubscription_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ConfirmSubscription Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ConfirmSubscription_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_ConfirmSubscription_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ConfirmSubscription Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ConfirmSubscription Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_ConfirmSubscription_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ConfirmSubscription input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ConfirmSubscription Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ConfirmSubscription Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the AuthenticateOnUnsubscribed input for this ConfirmSubscription Choreo.
     *
     * @param bool $value (optional, boolean) Indicates that you want to disable the ability to unsubscribe from the subscription without authenticating. Specify 1 to enable this flag.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setAuthenticateOnUnsubscribed($value)
    {
        return $this->set('AuthenticateOnUnsubscribed', $value);
    }

    /**
     * Set the value for the Token input for this ConfirmSubscription Choreo.
     *
     * @param string $value (required, string) The short-lived token sent to an endpoint during the Subscribe action.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setToken($value)
    {
        return $this->set('Token', $value);
    }

    /**
     * Set the value for the TopicArn input for this ConfirmSubscription Choreo.
     *
     * @param string $value (required, string) The ARN of the topic you want to confirm a subscription for.
     * @return Amazon_SNS_ConfirmSubscription_Inputs For method chaining.
     */
    public function setTopicArn($value)
    {
        return $this->set('TopicArn', $value);
    }
}


/**
 * Execution object for the ConfirmSubscription Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ConfirmSubscription Choreo.
     *
     * @param Temboo_Session $session The session that owns this ConfirmSubscription execution.
     * @param Amazon_SNS_ConfirmSubscription $choreo The choreography object for this execution.
     * @param Amazon_SNS_ConfirmSubscription_Inputs|array $inputs (optional) Inputs as Amazon_SNS_ConfirmSubscription_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_ConfirmSubscription_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_ConfirmSubscription $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ConfirmSubscription execution.
     *
     * @return Amazon_SNS_ConfirmSubscription_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ConfirmSubscription execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_ConfirmSubscription_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_ConfirmSubscription_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ConfirmSubscription Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_ConfirmSubscription_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ConfirmSubscription Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_ConfirmSubscription_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ConfirmSubscription execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Creates a new group in your AWS account.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateGroup extends Temboo_Choreography
{
    /**
     * Creates a new group in your AWS account.
     *
     * @param Temboo_Session $session The session that owns this CreateGroup Choreo.
     * @return Amazon_IAM_CreateGroup New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/CreateGroup/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this CreateGroup Choreo.
     *
     * @param Amazon_IAM_CreateGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateGroup_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_CreateGroup_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this CreateGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateGroup_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_CreateGroup_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the CreateGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateGroup_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the CreateGroup Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_CreateGroup_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this CreateGroup input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_CreateGroup_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_CreateGroup_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this CreateGroup Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateGroup_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this CreateGroup Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_CreateGroup_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this CreateGroup Choreo.
     *
     * @param string $value (required, string) The name of the group to create.
     * @return Amazon_IAM_CreateGroup_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the Path input for this CreateGroup Choreo.
     *
     * @param string $value (optional, string) The path to the group. If it is not included, it defaults to a slash (/).
     * @return Amazon_IAM_CreateGroup_Inputs For method chaining.
     */
    public function setPath($value)
    {
        return $this->set('Path', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this CreateGroup Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_CreateGroup_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the CreateGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateGroup_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the CreateGroup Choreo.
     *
     * @param Temboo_Session $session The session that owns this CreateGroup execution.
     * @param Amazon_IAM_CreateGroup $choreo The choreography object for this execution.
     * @param Amazon_IAM_CreateGroup_Inputs|array $inputs (optional) Inputs as Amazon_IAM_CreateGroup_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_CreateGroup_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_CreateGroup $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this CreateGroup execution.
     *
     * @return Amazon_IAM_CreateGroup_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this CreateGroup execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_CreateGroup_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_CreateGroup_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the CreateGroup Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_CreateGroup_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the CreateGroup Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_CreateGroup_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this CreateGroup execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deregisters the specified AMI.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage extends Temboo_Choreography
{
    /**
     * Deregisters the specified AMI.
     *
     * @param Temboo_Session $session The session that owns this DeregisterImage Choreo.
     * @return Amazon_EC2_DeregisterImage New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/EC2/DeregisterImage/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeregisterImage Choreo.
     *
     * @param Amazon_EC2_DeregisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeregisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeregisterImage_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_EC2_DeregisterImage_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeregisterImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeregisterImage_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_EC2_DeregisterImage_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeregisterImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeregisterImage Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_EC2_DeregisterImage_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeregisterImage input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeregisterImage Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeregisterImage Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ImageId input for this DeregisterImage Choreo.
     *
     * @param string $value (required, string) The AMI ID.
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setImageId($value)
    {
        return $this->set('ImageId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeregisterImage Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_EC2_DeregisterImage_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the DeregisterImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeregisterImage Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeregisterImage execution.
     * @param Amazon_EC2_DeregisterImage $choreo The choreography object for this execution.
     * @param Amazon_EC2_DeregisterImage_Inputs|array $inputs (optional) Inputs as Amazon_EC2_DeregisterImage_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_EC2_DeregisterImage_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_EC2_DeregisterImage $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeregisterImage execution.
     *
     * @return Amazon_EC2_DeregisterImage_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeregisterImage execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_EC2_DeregisterImage_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_EC2_DeregisterImage_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeregisterImage Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_EC2_DeregisterImage_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeregisterImage Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_EC2_DeregisterImage_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeregisterImage execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Deletes a specified subscription.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe extends Temboo_Choreography
{
    /**
     * Deletes a specified subscription.
     *
     * @param Temboo_Session $session The session that owns this Unsubscribe Choreo.
     * @return Amazon_SNS_Unsubscribe New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/SNS/Unsubscribe/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this Unsubscribe Choreo.
     *
     * @param Amazon_SNS_Unsubscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Unsubscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Unsubscribe_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_SNS_Unsubscribe_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this Unsubscribe Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Unsubscribe_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_SNS_Unsubscribe_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the Unsubscribe Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the Unsubscribe Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_SNS_Unsubscribe_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this Unsubscribe input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this Unsubscribe Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this Unsubscribe Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the SubscriptionArn input for this Unsubscribe Choreo.
     *
     * @param string $value (required, string) The ARN of the subscription you want to delete.
     * @return Amazon_SNS_Unsubscribe_Inputs For method chaining.
     */
    public function setSubscriptionArn($value)
    {
        return $this->set('SubscriptionArn', $value);
    }
}


/**
 * Execution object for the Unsubscribe Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the Unsubscribe Choreo.
     *
     * @param Temboo_Session $session The session that owns this Unsubscribe execution.
     * @param Amazon_SNS_Unsubscribe $choreo The choreography object for this execution.
     * @param Amazon_SNS_Unsubscribe_Inputs|array $inputs (optional) Inputs as Amazon_SNS_Unsubscribe_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_SNS_Unsubscribe_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_SNS_Unsubscribe $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this Unsubscribe execution.
     *
     * @return Amazon_SNS_Unsubscribe_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this Unsubscribe execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_SNS_Unsubscribe_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_SNS_Unsubscribe_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the Unsubscribe Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_SNS_Unsubscribe_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the Unsubscribe Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_SNS_Unsubscribe_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this Unsubscribe execution.
     *
     * @return string (xml) The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the names of the policies associated with the specified user.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUserPolicies extends Temboo_Choreography
{
    /**
     * Lists the names of the policies associated with the specified user.
     *
     * @param Temboo_Session $session The session that owns this ListUserPolicies Choreo.
     * @return Amazon_IAM_ListUserPolicies New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListUserPolicies/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListUserPolicies Choreo.
     *
     * @param Amazon_IAM_ListUserPolicies_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListUserPolicies_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListUserPolicies_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListUserPolicies_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListUserPolicies Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListUserPolicies_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListUserPolicies_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListUserPolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUserPolicies_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListUserPolicies Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListUserPolicies_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListUserPolicies input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListUserPolicies Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListUserPolicies Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Marker input for this ListUserPolicies Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListUserPolicies Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListUserPolicies Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this ListUserPolicies Choreo.
     *
     * @param string $value (required, string) The name of the user to list policies for.
     * @return Amazon_IAM_ListUserPolicies_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the ListUserPolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUserPolicies_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListUserPolicies Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListUserPolicies execution.
     * @param Amazon_IAM_ListUserPolicies $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListUserPolicies_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListUserPolicies_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListUserPolicies_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListUserPolicies $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListUserPolicies execution.
     *
     * @return Amazon_IAM_ListUserPolicies_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListUserPolicies execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListUserPolicies_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListUserPolicies_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListUserPolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListUserPolicies_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListUserPolicies Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListUserPolicies_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListUserPolicies execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Returns a tab-delimited flat file report that contains only orders that are not confirmed as shipped.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport extends Temboo_Choreography
{
    /**
     * Returns a tab-delimited flat file report that contains only orders that are not confirmed as shipped.
     *
     * @param Temboo_Session $session The session that owns this UnshippedOrdersReport Choreo.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Reports/UnshippedOrdersReport/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this UnshippedOrdersReport Choreo.
     *
     * @param Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this UnshippedOrdersReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the UnshippedOrdersReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the UnshippedOrdersReport Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this UnshippedOrdersReport input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this UnshippedOrdersReport Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this UnshippedOrdersReport Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this UnshippedOrdersReport Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this UnshippedOrdersReport Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this UnshippedOrdersReport Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the TimeToWait input for this UnshippedOrdersReport Choreo.
     *
     * @param int $value (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs For method chaining.
     */
    public function setTimeToWait($value)
    {
        return $this->set('TimeToWait', $value);
    }
}


/**
 * Execution object for the UnshippedOrdersReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the UnshippedOrdersReport Choreo.
     *
     * @param Temboo_Session $session The session that owns this UnshippedOrdersReport execution.
     * @param Amazon_Marketplace_Reports_UnshippedOrdersReport $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Reports_UnshippedOrdersReport_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Reports_UnshippedOrdersReport $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this UnshippedOrdersReport execution.
     *
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this UnshippedOrdersReport execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Reports_UnshippedOrdersReport_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the UnshippedOrdersReport Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Reports_UnshippedOrdersReport_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the UnshippedOrdersReport Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Reports_UnshippedOrdersReport_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "GeneratedReportId" output from this UnshippedOrdersReport execution.
     *
     * @return int (integer) The GeneratedReportId parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getGeneratedReportId()
    {
        return $this->get('GeneratedReportId');
    }
    /**
     * Retrieve the value for the "ReportProcessingStatus" output from this UnshippedOrdersReport execution.
     *
     * @return string (string) The status of the report request parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportProcessingStatus()
    {
        return $this->get('ReportProcessingStatus');
    }
    /**
     * Retrieve the value for the "ReportRequestId" output from this UnshippedOrdersReport execution.
     *
     * @return int (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReportRequestId()
    {
        return $this->get('ReportRequestId');
    }
    /**
     * Retrieve the value for the "Report" output from this UnshippedOrdersReport execution.
     *
     * @return string (multiline) The report contents.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getReport()
    {
        return $this->get('Report');
    }
}

/**
 * This is the standard method following MWS API GetServiceStatus standard. It can return a GREEN, GREEN_I, YELLOW or RED status.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus extends Temboo_Choreography
{
    /**
     * This is the standard method following MWS API GetServiceStatus standard. It can return a GREEN, GREEN_I, YELLOW or RED status.
     *
     * @param Temboo_Session $session The session that owns this GetServiceStatus Choreo.
     * @return Amazon_Marketplace_Products_GetServiceStatus New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/Marketplace/Products/GetServiceStatus/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this GetServiceStatus Choreo.
     *
     * @param Amazon_Marketplace_Products_GetServiceStatus_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetServiceStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_Marketplace_Products_GetServiceStatus_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this GetServiceStatus Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_Marketplace_Products_GetServiceStatus_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the GetServiceStatus Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the GetServiceStatus Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this GetServiceStatus input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this GetServiceStatus Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSMarketplaceId input for this GetServiceStatus Choreo.
     *
     * @param string $value (required, string) The Marketplace ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSMarketplaceId($value)
    {
        return $this->set('AWSMarketplaceId', $value);
    }

    /**
     * Set the value for the AWSMerchantId input for this GetServiceStatus Choreo.
     *
     * @param string $value (required, string) The Merchant ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSMerchantId($value)
    {
        return $this->set('AWSMerchantId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this GetServiceStatus Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the Endpoint input for this GetServiceStatus Choreo.
     *
     * @param string $value (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setEndpoint($value)
    {
        return $this->set('Endpoint', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this GetServiceStatus Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_Marketplace_Products_GetServiceStatus_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the GetServiceStatus Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the GetServiceStatus Choreo.
     *
     * @param Temboo_Session $session The session that owns this GetServiceStatus execution.
     * @param Amazon_Marketplace_Products_GetServiceStatus $choreo The choreography object for this execution.
     * @param Amazon_Marketplace_Products_GetServiceStatus_Inputs|array $inputs (optional) Inputs as Amazon_Marketplace_Products_GetServiceStatus_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_Marketplace_Products_GetServiceStatus $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this GetServiceStatus execution.
     *
     * @return Amazon_Marketplace_Products_GetServiceStatus_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this GetServiceStatus execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_Marketplace_Products_GetServiceStatus_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the GetServiceStatus Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_Marketplace_Products_GetServiceStatus_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the GetServiceStatus Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_Marketplace_Products_GetServiceStatus_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this GetServiceStatus execution.
     *
     * @return string (xml) Stores the response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
    /**
     * Retrieve the value for the "Status" output from this GetServiceStatus execution.
     *
     * @return string (string) The service status parsed from the Amazon response.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getStatus()
    {
        return $this->get('Status');
    }
}

/**
 * Deletes a specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached policies.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUser extends Temboo_Choreography
{
    /**
     * Deletes a specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached policies.
     *
     * @param Temboo_Session $session The session that owns this DeleteUser Choreo.
     * @return Amazon_IAM_DeleteUser New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/DeleteUser/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this DeleteUser Choreo.
     *
     * @param Amazon_IAM_DeleteUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteUser_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_DeleteUser_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this DeleteUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteUser_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_DeleteUser_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the DeleteUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUser_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the DeleteUser Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_DeleteUser_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this DeleteUser input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_DeleteUser_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_DeleteUser_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this DeleteUser Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteUser_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this DeleteUser Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_DeleteUser_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this DeleteUser Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_DeleteUser_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }

    /**
     * Set the value for the UserName input for this DeleteUser Choreo.
     *
     * @param string $value (required, string) The name of the user to delete.
     * @return Amazon_IAM_DeleteUser_Inputs For method chaining.
     */
    public function setUserName($value)
    {
        return $this->set('UserName', $value);
    }
}


/**
 * Execution object for the DeleteUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUser_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the DeleteUser Choreo.
     *
     * @param Temboo_Session $session The session that owns this DeleteUser execution.
     * @param Amazon_IAM_DeleteUser $choreo The choreography object for this execution.
     * @param Amazon_IAM_DeleteUser_Inputs|array $inputs (optional) Inputs as Amazon_IAM_DeleteUser_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_DeleteUser_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_DeleteUser $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this DeleteUser execution.
     *
     * @return Amazon_IAM_DeleteUser_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this DeleteUser execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_DeleteUser_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_DeleteUser_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the DeleteUser Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_DeleteUser_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the DeleteUser Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_DeleteUser_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this DeleteUser execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}

/**
 * Lists the names of the policies associated with the specified group.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupPolicies extends Temboo_Choreography
{
    /**
     * Lists the names of the policies associated with the specified group.
     *
     * @param Temboo_Session $session The session that owns this ListGroupPolicies Choreo.
     * @return Amazon_IAM_ListGroupPolicies New instance.
     */
    public function __construct(Temboo_Session $session)
    {
        parent::__construct($session, '/Library/Amazon/IAM/ListGroupPolicies/');
    }

    /**
     * Executes this Choreo.
     *
     * Execution object provides access to results appropriate for this ListGroupPolicies Choreo.
     *
     * @param Amazon_IAM_ListGroupPolicies_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListGroupPolicies_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListGroupPolicies_Execution New execution object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     * @throws Temboo_Exception if execution request fails.
     */
    public function execute($inputs = array(), $async = false, $store_results = true)
    {
        return new Amazon_IAM_ListGroupPolicies_Execution($this->session, $this, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new inputs object.
     *
     * Includes setters appropriate for this ListGroupPolicies Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListGroupPolicies_Inputs New inputs object.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function newInputs($inputs = array())
    {
        return new Amazon_IAM_ListGroupPolicies_Inputs($inputs);
    }
}


/**
 * Inputs object with appropriate setters for the ListGroupPolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupPolicies_Inputs extends Temboo_Inputs
{
   /**
     * Inputs object with appropriate setters for the ListGroupPolicies Choreo.
     *
     * @param array $inputs (optional) Associative array of input names and values.
     * @return Amazon_IAM_ListGroupPolicies_Inputs New instance.
     * @throws Temboo_Exception if provided input set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($inputs = array())
    {
        parent::__construct($inputs);
    }

    /**
     * Set arbitrary input this ListGroupPolicies input set.
     *
     * Input names are case sensitive.
     *
     * @param string $name Input name.
     * @param string $value Input value.
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function set($name, $value)
    {
        return parent::set($name, $value);
    }

    /**
     * Set credential
     *
     * @param string $credentialName The name of a credential in your account specifying presets for this set of inputs.
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function setCredential($credentialName)
    {
        return parent::setCredential($credentialName);
    }

    /**
     * Set the value for the AWSAccessKeyId input for this ListGroupPolicies Choreo.
     *
     * @param string $value (required, string) The Access Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function setAWSAccessKeyId($value)
    {
        return $this->set('AWSAccessKeyId', $value);
    }

    /**
     * Set the value for the AWSSecretKeyId input for this ListGroupPolicies Choreo.
     *
     * @param string $value (required, string) The Secret Key ID provided by Amazon Web Services.
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function setAWSSecretKeyId($value)
    {
        return $this->set('AWSSecretKeyId', $value);
    }

    /**
     * Set the value for the GroupName input for this ListGroupPolicies Choreo.
     *
     * @param string $value (required, string) The name of the group to list policies for.
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function setGroupName($value)
    {
        return $this->set('GroupName', $value);
    }

    /**
     * Set the value for the Marker input for this ListGroupPolicies Choreo.
     *
     * @param string $value (optional, string) Used for pagination to indicate the starting point of the results to return.
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function setMarker($value)
    {
        return $this->set('Marker', $value);
    }

    /**
     * Set the value for the MaxItems input for this ListGroupPolicies Choreo.
     *
     * @param int $value (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function setMaxItems($value)
    {
        return $this->set('MaxItems', $value);
    }

    /**
     * Set the value for the ResponseFormat input for this ListGroupPolicies Choreo.
     *
     * @param string $value (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
     * @return Amazon_IAM_ListGroupPolicies_Inputs For method chaining.
     */
    public function setResponseFormat($value)
    {
        return $this->set('ResponseFormat', $value);
    }
}


/**
 * Execution object for the ListGroupPolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupPolicies_Execution extends Temboo_Choreography_Execution
{
    /**
     * Execution object for the ListGroupPolicies Choreo.
     *
     * @param Temboo_Session $session The session that owns this ListGroupPolicies execution.
     * @param Amazon_IAM_ListGroupPolicies $choreo The choreography object for this execution.
     * @param Amazon_IAM_ListGroupPolicies_Inputs|array $inputs (optional) Inputs as Amazon_IAM_ListGroupPolicies_Inputs or associative array.
     * @param bool $async Whether to execute in asynchronous mode. Default false.
     * @param bool $store_results Whether to store results of asynchronous execution. Default true.
     * @return Amazon_IAM_ListGroupPolicies_Execution New execution.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occur in synchronous execution or execution fails to start. NOT thrown for post-launch errors in asynchronous execution -- check status or results to determine asynchronous success.
     * @throws Temboo_Exception_Notfound if choreography does not exist.
     */
    public function __construct(Temboo_Session $session, Amazon_IAM_ListGroupPolicies $choreo, $inputs = array(), $async = false, $store_results = true)
    {
        parent::__construct($session, $choreo, $inputs, $async, $store_results);
    }

    /**
     * Obtains a new results object.
     *
     * Includes getters appropriate for this ListGroupPolicies execution.
     *
     * @return Amazon_IAM_ListGroupPolicies_Results New results object.
     * @throws Temboo_Exception_Authentication if session authentication fails.
     * @throws Temboo_Exception_Execution if runtime errors occurred in asynchronous execution.
     * @throws Temboo_Exception_Notfound if execution does not exist.
     * @throws Temboo_Exception if result request fails.
     */
    public function getResults()
    {
        return parent::getResults();
    }

    /**
     * Wraps results in appropriate results class for this ListGroupPolicies execution.
     *
     * @param array $outputs Associative array of output names and values.
     * @return Amazon_IAM_ListGroupPolicies_Results New results object.
     */
    protected function wrapResults($outputs)
    {
        return new Amazon_IAM_ListGroupPolicies_Results($outputs);
    }
}


/**
 * Results object with appropriate getters for the ListGroupPolicies Choreo.
 *
 * @package Temboo
 * @subpackage Amazon
 */
class Amazon_IAM_ListGroupPolicies_Results extends Temboo_Results
{
    /**
     * Results object with appropriate getters for the ListGroupPolicies Choreo.
     *
     * @param array $outputs (optional) Associative array of output names and values.
     * @return Amazon_IAM_ListGroupPolicies_Results New instance.
     * @throws Temboo_Exception if provided output set is invalid. (Note an empty set is considered valid.)
     */
    public function __construct($outputs = array())
    {
        parent::__construct($outputs);
    }
    /**
     * Retrieve the value for the "Response" output from this ListGroupPolicies execution.
     *
     * @return string The response from Amazon.
     * @throws Temboo_Exception_Notfound if output does not exist. (Note an empty response is considered valid.)
     */
    public function getResponse()
    {
        return $this->get('Response');
    }
}


/******************************************************************************
Begin output wrapper classes
******************************************************************************/


?>